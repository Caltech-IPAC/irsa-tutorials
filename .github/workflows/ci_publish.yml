name: Build and Publish HTML and deployed_notebooks

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 5 * * 1'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # `BASE_URL` determines, relative to the root of the domain, the URL that your site is served from.
  # E.g., if your site lives at `https://mydomain.org/myproject`, set `BASE_URL=/myproject`.
  # If, instead, your site lives at the root of the domain, at `https://mydomain.org`, set `BASE_URL=''`.
  BASE_URL: /${{ github.event.repository.name }}

jobs:

  publish_html:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    name: Publish HTML
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install mystmd
        run: npm install mystmd

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: python -m pip install --upgrade tox

      - name: Execute notebooks while building HTMLs
        run: tox -e py312-buildhtml

      - name: Publish
        uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e  # v4.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_build/html/
          commit_message: ${{ github.event.head_commit.message }}

      - name: Create issue or comment if run fails
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const title = `❌ Job failed: ${context.job} Run #${context.runNumber}`;

            // Search for existing open issue with the same title
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'workflow-failure',
              per_page: 100
            });

            const existingIssue = issues.data.find(issue => issue.title === title);

            const body = `## Job Failed

            **Job:** ${context.job}
            **Workflow:** ${context.workflow}
            **Event:** ${context.eventName}
            **Run ID:** ${context.runId}
            **Run Number:** ${context.runNumber}
            **Run Attempt:** ${context.runAttempt}
            **Ref:** ${context.ref}
            **Ref Name:** ${context.refName}
            **SHA:** ${context.sha}
            **Short SHA:** ${context.sha.substring(0, 7)}

            [View run details](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`;

            if (existingIssue) {
              // Add comment to existing issue (for retry attempts)
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existingIssue.number,
                body: body
              });
            } else {
              // Create new issue
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['workflow-failure']
              });
            }

  deploy_notebooks:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    name: Deploy deployed_notebook branch
    runs-on: ubuntu-latest
    needs: publish_html
    steps:
      - uses: actions/checkout@v5

      - name: Deploy to deployed_notebooks branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          gith=$(git rev-parse HEAD)
          git checkout --orphan deployed_notebooks
          git rm --cached -r .
          git add --pathspec-from-file=deployed_notebooks_manifest.in --force
          git commit -m "Deploy notebooks for commit ${gith}"
          git push origin deployed_notebooks --force
