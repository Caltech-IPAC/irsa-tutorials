{"version":2,"kind":"Notebook","sha256":"67bb359973383a6f2f2a4ba083d02a33e9a13dd11fdc5a4e8182cb241bb4cc02","slug":"openuniverse2024-roman-simulated-timedomainsurvey","location":"/tutorials/openuniversesims/openuniverse2024_roman_simulated_timedomainsurvey.md","dependencies":[],"frontmatter":{"title":"Analyzing cloud-hosted simulated Roman Time Domain Survey images","kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"jupytext":{"text_representation":{"extension":".md","format_name":"myst","format_version":"0.13","jupytext_version":"1.16.7"}},"content_includes_title":false,"authors":[{"id":"IRSA Scientists and Developers","name":"IRSA Scientists and Developers"}],"github":"https://github.com/Caltech-IPAC/irsa-tutorials/","subject":"IRSA Tutorials","keywords":["astronomy"],"settings":{"output_matplotlib_strings":"remove"},"numbering":{"title":{"offset":2}},"edit_url":"https://github.com/Caltech-IPAC/irsa-tutorials//blob/main/tutorials/openuniversesims/openuniverse2024_roman_simulated_timedomainsurvey.md","exports":[{"format":"md","filename":"openuniverse2024_roman_simulated_timedomainsurvey.md","url":"/build/openuniverse2024_rom-2701fd56943ad105636346b2e64676a2.md"}]},"mdast":{"type":"root","children":[{"type":"block","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Learning Goals:","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"tYZ7Sc6t6H"}],"identifier":"learning-goals","label":"Learning Goals:","html_id":"learning-goals","implicit":true,"key":"up7ldZVlyA"},{"type":"paragraph","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"By the end of this tutorial, you will:","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"oILhE6rTQH"}],"key":"oMBJcdASD2"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":22,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"learn more about the “observations” that make up the simulated Roman TDS preview.","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"QR6x8L6Xk8"}],"key":"XVqOsPcAPS"},{"type":"listItem","spread":true,"position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"learn how to find the locations of simulated supernovae in the preview data.","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"hpdRvNnkLl"}],"key":"DqIxKqrPNy"},{"type":"listItem","spread":true,"position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"learn how to create aligned cutouts of simulated Roman images.","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"ImMGYTzxkD"}],"key":"K4nio7iTwG"},{"type":"listItem","spread":true,"position":{"start":{"line":25,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"learn how to make an animated gif from these cutouts.","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"ZAEvhJn9Ur"}],"key":"zC2bQYoAaO"}],"key":"tlh8QyyMch"}],"key":"EB2irRzK9U"},{"type":"block","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"text","value":"Install and Import required modules","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"key":"mN7I61ZEEQ"}],"identifier":"install-and-import-required-modules","label":"Install and Import required modules","html_id":"install-and-import-required-modules","implicit":true,"key":"zJTCVsAAmF"}],"key":"KymJSAOtEx"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Uncomment the next line to install dependencies if needed.\n# !pip install astropy matplotlib numpy pandas pyarrow s3fs scipy","key":"S1rDYNqgQ7"},{"type":"output","id":"QX6C4bx_YpicrTD0zBFyl","data":[],"key":"entXTb8dUv"}],"key":"w1PNeRyCnn"},{"type":"block","children":[],"key":"LO4AZLvfom"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Import modules\nimport warnings\n\nimport astropy.units as u\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nfrom astropy.coordinates import SkyCoord\nfrom astropy.io import fits\nfrom astropy.nddata import Cutout2D\nfrom astropy.nddata.utils import NoOverlapError\nfrom astropy.table import Table\nfrom astropy.wcs import WCS, FITSFixedWarning\nfrom matplotlib import animation\nfrom scipy.ndimage import rotate\n\n# Needed to access data in the cloud\nimport s3fs\ns3 = s3fs.S3FileSystem(anon=True)  # create an S3 client\n\n# Filter out the FITSFixedWarning, which is consequenceless and gets thrown every time you deal with a WCS\n# in a Roman openuniverse simulated image using astropy.\nwarnings.simplefilter('ignore', category=FITSFixedWarning)","key":"QD6B22f0Xe"},{"type":"output","id":"5JYwCw7YKqkjdOkqf5ctT","data":[],"key":"qEysec5Kjn"}],"key":"JO8IarTWw8"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"children":[{"type":"text","value":"Define a module to get the date (mjd) of a particular pointing.","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"fj74MrsKf1"}],"identifier":"define-a-module-to-get-the-date-mjd-of-a-particular-pointing","label":"Define a module to get the date (mjd) of a particular pointing.","html_id":"define-a-module-to-get-the-date-mjd-of-a-particular-pointing","implicit":true,"key":"k4Q0BaQUCZ"}],"key":"iXYGLvlGih"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def get_mjd(pointing,\n            obseq_path=f's3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/Roman_TDS_obseq_11_6_23.fits'):\n\n    \"\"\"\n    Retrieve MJD of a given pointing.\n\n    :param pointing: Pointing ID.\n    :type pointing: int\n    :param obseq_path: Path to obseq file Roman_TDS_obseq_11_6_23.fits.\n    :type obseq_path: str, optional\n    :return: MJD of specified pointing.\n    :rtype: float\n    \"\"\"\n\n    with fits.open(obseq_path, fsspec_kwargs={\"anon\": True}) as obs:\n        obseq = Table(obs[1].data)\n    mjd = float(obseq['date'][int(pointing)])\n\n    return mjd","key":"xJd7UTJFzx"},{"type":"output","id":"50VCuJ9JLy2tE22yYpfp3","data":[],"key":"FtNYThPmI2"}],"key":"ud7YatUcsz"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":86,"column":1},"end":{"line":86,"column":1}},"children":[{"type":"text","value":"Define a module to create an animated gif from a collection of cutouts.","position":{"start":{"line":86,"column":1},"end":{"line":86,"column":1}},"key":"GKJrBVI2DO"}],"identifier":"define-a-module-to-create-an-animated-gif-from-a-collection-of-cutouts","label":"Define a module to create an animated gif from a collection of cutouts.","html_id":"define-a-module-to-create-an-animated-gif-from-a-collection-of-cutouts","implicit":true,"key":"vzK9L44hDJ"}],"key":"MKAizJauy3"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def animate_stamps(stamps, savepath, no_whitespace=True,\n                   labels=[],labelxy=(0.05,0.95),\n                   **kwargs):\n    \"\"\"\n    Make an animation of a sequence of image stamps.\n\n    :param stamps: Must be in chronological order.\n    :type stamps: List of stamps from get_stamps or get_object_instances.\n    :param savepath: Path to save gif.\n    :type savepath: str\n    \"\"\"\n\n    if no_whitespace:\n        with_whitespace = np.invert(np.any((np.isnan(np.array(stamps))), axis=(1,2))) # NOTE: Your first axis (first indexing value) should return one stamp. e.g. stamps[0] is the first stamp.\n        idx_whitespace = np.where(with_whitespace)[0]\n        stamps = np.array(stamps)[idx_whitespace]\n        if len(labels) != 0:\n            labels = np.array(labels)[idx_whitespace]\n\n    fig, ax = plt.subplots(figsize=(5,5))\n    fig.subplots_adjust(left=0, bottom=0, right=1, top=1, wspace=None, hspace=None)\n    plt.xticks([])\n    plt.yticks([])\n\n    im = ax.imshow(stamps[0], animated=True)\n\n    if len(labels) != 0:\n        txt = ax.text(labelxy[0],labelxy[1],labels[0],animated=True,color='white',transform=ax.transAxes,va='top',ha='left',**kwargs)\n\n    def animate(i):\n        im.set_array(stamps[i])\n        if len(labels) != 0:\n            txt.set_text(labels[i])\n\n            return [im] + [txt]\n        else:\n            return [im]\n\n    writer = animation.PillowWriter()\n    anim = animation.FuncAnimation(fig, animate, interval=600, frames=len(stamps))\n    anim.save(savepath, writer=writer)","key":"sH8eG7IPCZ"},{"type":"output","id":"eKgLE-20HZP1SSWggQoR0","data":[],"key":"IifDJGCHV1"}],"key":"bRes7mjLdl"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":132,"column":1},"end":{"line":132,"column":1}},"children":[{"type":"text","value":"Read in the Observation Sequence File to learn more about the “observations” that make up the simulated Roman Time Domain Survey.","position":{"start":{"line":132,"column":1},"end":{"line":132,"column":1}},"key":"UNYA71ryCr"}],"identifier":"read-in-the-observation-sequence-file-to-learn-more-about-the-observations-that-make-up-the-simulated-roman-time-domain-survey","label":"Read in the Observation Sequence File to learn more about the “observations” that make up the simulated Roman Time Domain Survey.","html_id":"read-in-the-observation-sequence-file-to-learn-more-about-the-observations-that-make-up-the-simulated-roman-time-domain-survey","implicit":true,"key":"zDo4OcJO1A"}],"key":"HmwGtxzHqZ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Read in the (simulated) Observation Sequence File.\n\nBUCKET_NAME = 'nasa-irsa-simulations'\nROMAN_PREFIX = 'openuniverse2024/roman/preview'\n\nROMAN_TDS_PATH = f'{ROMAN_PREFIX}/RomanTDS'\nFILENAME = 'Roman_TDS_obseq_11_6_23.fits'\nOBSEQ_PATH = f's3://{BUCKET_NAME}/{ROMAN_TDS_PATH}/{FILENAME}'\n\nobseq_hdu = fits.open(OBSEQ_PATH, fsspec_kwargs={\"anon\": True})\nobseq = pd.DataFrame(obseq_hdu[1].data)\n\nprint(obseq)","key":"aNIwgxEoCC"},{"type":"output","id":"kaIrqoxpYFQKsbLnZoWES","data":[{"output_type":"stream","name":"stdout","text":"             ra      dec filter  exptime         date        pa\n0       7.60523 -45.6541   R062  161.025  62000.02139   0.00000\n1       7.60523 -44.8337   R062  161.025  62000.02407   0.00000\n2       7.60523 -44.0134   R062  161.025  62000.02674   0.00000\n3       7.60523 -43.1930   R062  161.025  62000.02941   0.00000\n4       7.60523 -42.3727   R062  161.025  62000.03209   0.00000\n...         ...      ...    ...      ...          ...       ...\n57360  11.81670 -44.9265   K213  901.175  63563.01290  19.72602\n57361  11.53980 -44.1543   K213  901.175  63563.02420  19.72602\n57362  11.26290 -43.3821   K213  901.175  63563.03540  19.72602\n57363  10.98600 -42.6099   K213  901.175  63563.04660  19.72602\n57364  10.70920 -41.8377   K213  901.175  63563.05790  19.72602\n\n[57365 rows x 6 columns]\n"}],"key":"fihaSPhOYA"}],"key":"QaaLIZP3K6"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":150,"column":1},"end":{"line":150,"column":1}},"children":[{"type":"text","value":"What is the spatial and temporal coverage of the openuniverse2024 Roman TDS data preview?","position":{"start":{"line":150,"column":1},"end":{"line":150,"column":1}},"key":"wxUOYCNlvO"}],"identifier":"what-is-the-spatial-and-temporal-coverage-of-the-openuniverse2024-roman-tds-data-preview","label":"What is the spatial and temporal coverage of the openuniverse2024 Roman TDS data preview?","html_id":"what-is-the-spatial-and-temporal-coverage-of-the-openuniverse2024-roman-tds-data-preview","implicit":true,"key":"UN0leddMO8"}],"key":"IHhcRHkBFZ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Find the ranges of RA, Dec, and date listed in the observation sequence file.\n\nra_min, dec_min = obseq[['ra','dec']].min()\nra_max, dec_max = obseq[['ra','dec']].max()\nmjd_min = obseq['date'].min()\nmjd_max = obseq['date'].max()\n\nprint(\"ra_min, ra_max:\", ra_min, ra_max)\nprint(\"mjd_min, mjd_max:\", mjd_min, mjd_max)","key":"ZgrVJglSZp"},{"type":"output","id":"n0oEwfmpMpmwdDCWRTm2V","data":[{"output_type":"stream","name":"stdout","text":"ra_min, ra_max: 6.97879 12.0204\nmjd_min, mjd_max: 62000.02139 63563.0579\n"}],"key":"r1jKxCY4Ou"}],"key":"nLwQn0b83U"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":164,"column":1},"end":{"line":164,"column":1}},"children":[{"type":"text","value":"Read in the Supernova Analysis (SNANA) file.","position":{"start":{"line":164,"column":1},"end":{"line":164,"column":1}},"key":"XIERVIDvyt"}],"identifier":"read-in-the-supernova-analysis-snana-file","label":"Read in the Supernova Analysis (SNANA) file.","html_id":"read-in-the-supernova-analysis-snana-file","implicit":true,"key":"Saf1k0eJd7"}],"key":"EzZeVGcbyG"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"parquet_file = f's3://{BUCKET_NAME}/{ROMAN_PREFIX}/roman_rubin_cats_v1.1.2_faint/snana_10307.parquet'\ntransients = pd.read_parquet(parquet_file, filesystem=s3)","key":"IMLxQEbCEn"},{"type":"output","id":"2PWeSXT6pdrBMOrNqdiWh","data":[],"key":"t7dJ8bMu2A"}],"key":"HzjVDeSOYo"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":171,"column":1},"end":{"line":171,"column":1}},"children":[{"type":"text","value":"Let’s find a relatively nearby SN Ia that lies within the region of the data preview.","position":{"start":{"line":171,"column":1},"end":{"line":171,"column":1}},"key":"qvWdp0dCQy"}],"identifier":"lets-find-a-relatively-nearby-sn-ia-that-lies-within-the-region-of-the-data-preview","label":"Let’s find a relatively nearby SN Ia that lies within the region of the data preview.","html_id":"lets-find-a-relatively-nearby-sn-ia-that-lies-within-the-region-of-the-data-preview","implicit":true,"key":"leRUYAxHPr"}],"key":"IJmFEpdyED"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"#List the unique models in the SNANA file.\nunique_models = pd.Series(transients['model_name']).drop_duplicates().tolist()\nunique_models","key":"G2yxzoo1Gz"},{"type":"output","id":"rheScPrpzmAN1KDhAIZRs","data":[{"output_type":"execute_result","execution_count":8,"metadata":{},"data":{"text/plain":{"content":"['FIXMAG',\n 'NON1ASED.KN-K17',\n 'NON1ASED.PISN-STELLA-HECORE',\n 'NON1ASED.PISN-STELLA-HYDROGENIC',\n 'NON1ASED.SLSN-I-BBFIT',\n 'NON1ASED.V19_CC+HostXT_WAVEEXT',\n 'SALT3.NIR_WAVEEXT',\n 'NON1ASED.SNIax',\n 'NON1ASED.TDE-BBFIT']","content_type":"text/plain"}}}],"key":"E8BRm6i9jb"}],"key":"PB6ZR1z0JL"},{"type":"block","children":[],"key":"FTMDt8uzcF"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Most of the models are non SNIa (NON1ASED).\n# Choose only the SNIa\nsn1a = transients[transients['model_name'] == 'SALT3.NIR_WAVEEXT'] # SNe Ia only.\nprint('Number of SN1a in SNANA file: ', len(sn1a))","key":"knuF1gZ7YE"},{"type":"output","id":"BgPOScFhxfxv9U3DrAAvJ","data":[{"output_type":"stream","name":"stdout","text":"Number of SN1a in SNANA file:  10369\n"}],"key":"VJhXOAGRAt"}],"key":"gA3VR8ill0"},{"type":"block","children":[],"key":"EIwP0UhNLw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Choose the SNIa that overlap with the spatial extent of the OpenUniverse2024 Roman TDS data preview.\nra_mask = np.logical_and(sn1a['ra'] > ra_min, sn1a['ra'] < ra_max)\ndec_mask = np.logical_and(sn1a['dec'] > dec_min, sn1a['dec'] < dec_max)\nmjd_mask = np.logical_and(sn1a['start_mjd'] > mjd_min, sn1a['end_mjd'] < mjd_max)\nall_mask = np.logical_and.reduce((ra_mask,dec_mask,mjd_mask))\npreview_sn1a = sn1a[all_mask]\nprint('Number of SNIa in OpenUniverse2024 data preview:', len(preview_sn1a))","key":"bTFlH0XULn"},{"type":"output","id":"rJIl5n0Ht9QZoBiYP-_lE","data":[{"output_type":"stream","name":"stdout","text":"Number of SNIa in OpenUniverse2024 data preview: 6718\n"}],"key":"YPNM9bXqnL"}],"key":"ht5QNk4snD"},{"type":"block","children":[],"key":"JMfmGT6KCw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Choose the SNIa in the data preview that are nearby, at redshifts less than 0.7.\nnearby_preview_sn1a = preview_sn1a[preview_sn1a['z_CMB'] < 0.7]\nprint('Number of nearby SNIa in OpenUniverse2024 data preview:', len(nearby_preview_sn1a))","key":"Z5wLClzMao"},{"type":"output","id":"a3XCbJW6gSoSvZ3u0EZdv","data":[{"output_type":"stream","name":"stdout","text":"Number of nearby SNIa in OpenUniverse2024 data preview: 573\n"}],"key":"Ut7oGe7hEx"}],"key":"e1OrQ4ufEc"},{"type":"block","children":[],"key":"X97cJAi2tC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Let's choose SN 20000808.\noid = 20000808\nchosen_object = nearby_preview_sn1a[nearby_preview_sn1a['id'] == oid]\nra = chosen_object.get('ra')\ndec = chosen_object.get('dec')\nra, dec = 9.619282, -44.313894\ncoord = SkyCoord(ra*u.deg, dec*u.deg)","key":"sVtqX9yIML"},{"type":"output","id":"hxE_6gjpWyBtmb9237age","data":[],"key":"H8NCssyCtn"}],"key":"Igf9svfhHq"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":212,"column":1},"end":{"line":212,"column":1}},"children":[{"type":"text","value":"Read in the auxiliary file that lists the simulated Roman TDS images covering the chosen SNIa.","position":{"start":{"line":212,"column":1},"end":{"line":212,"column":1}},"key":"Ed1xwAeXJp"}],"identifier":"read-in-the-auxiliary-file-that-lists-the-simulated-roman-tds-images-covering-the-chosen-snia","label":"Read in the auxiliary file that lists the simulated Roman TDS images covering the chosen SNIa.","html_id":"read-in-the-auxiliary-file-that-lists-the-simulated-roman-tds-images-covering-the-chosen-snia","implicit":true,"key":"H89peAr0Dk"}],"key":"BaWe9zkI3K"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# The auxiliary file contains all the images this thing is in.\n# If you need to download this file, see https://irsa.ipac.caltech.edu/docs/notebooks/.\ncsvfile = './openuniverse2024_roman_demodata_20000808_instances.csv'\ninstances = pd.read_csv(csvfile, usecols=['filter','pointing','sca'])\ninstances","key":"Vn2WMnBVwv"},{"type":"output","id":"6BzP4K5QZyW5BXilNyv2N","data":[{"output_type":"execute_result","execution_count":13,"metadata":{},"data":{"text/plain":{"content":"   filter  pointing  sca\n0    R062       407    7\n1    R062      4257   10\n2    R062      4647    6\n3    R062      6182    5\n4    R062      8112   15\n5    R062      9652   17\n6    R062     11197    1\n7    R062     11582    1\n8    R062     15037    8\n9    R062     16962   11\n10   R062     18502   10\n11   R062     18507    6\n12   R062     20812    6\n13   R062     21592   18\n14   R062     21977   17\n15   R062     22357   15\n16   R062     23512   17\n17   R062     25442    1\n18   R062     27367   13\n19   R062     28512    7\n20   R062     32362   10\n21   R062     32752    6\n22   R062     34287    5\n23   R062     36217   15\n24   R062     37757   17\n25   R062     39302    1\n26   R062     39687    1\n27   R062     43142    8\n28   R062     45067   11\n29   R062     46607   10\n30   R062     46612    6\n31   R062     48917    6\n32   R062     49697   18\n33   R062     50082   17\n34   R062     50462   15\n35   R062     51617   17\n36   R062     53547    1\n37   R062     55472   13\n38   R062     56617    7","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>filter</th>\n      <th>pointing</th>\n      <th>sca</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>R062</td>\n      <td>407</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>R062</td>\n      <td>4257</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>R062</td>\n      <td>4647</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>R062</td>\n      <td>6182</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>R062</td>\n      <td>8112</td>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>R062</td>\n      <td>9652</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>R062</td>\n      <td>11197</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>R062</td>\n      <td>11582</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>R062</td>\n      <td>15037</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>R062</td>\n      <td>16962</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>R062</td>\n      <td>18502</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>R062</td>\n      <td>18507</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>R062</td>\n      <td>20812</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>R062</td>\n      <td>21592</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>R062</td>\n      <td>21977</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>R062</td>\n      <td>22357</td>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>R062</td>\n      <td>23512</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>R062</td>\n      <td>25442</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>R062</td>\n      <td>27367</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>R062</td>\n      <td>28512</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>R062</td>\n      <td>32362</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>R062</td>\n      <td>32752</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>R062</td>\n      <td>34287</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>R062</td>\n      <td>36217</td>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>R062</td>\n      <td>37757</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>R062</td>\n      <td>39302</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>R062</td>\n      <td>39687</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>R062</td>\n      <td>43142</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>R062</td>\n      <td>45067</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>R062</td>\n      <td>46607</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>R062</td>\n      <td>46612</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>R062</td>\n      <td>48917</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>32</th>\n      <td>R062</td>\n      <td>49697</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>33</th>\n      <td>R062</td>\n      <td>50082</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>34</th>\n      <td>R062</td>\n      <td>50462</td>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>35</th>\n      <td>R062</td>\n      <td>51617</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>36</th>\n      <td>R062</td>\n      <td>53547</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>37</th>\n      <td>R062</td>\n      <td>55472</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>38</th>\n      <td>R062</td>\n      <td>56617</td>\n      <td>7</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"O7FLs8P4OP"}],"key":"namRzhAu8Q"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":222,"column":1},"end":{"line":222,"column":1}},"children":[{"type":"text","value":"Create cutouts of the chosen SNIa in the band of your choice.","position":{"start":{"line":222,"column":1},"end":{"line":222,"column":1}},"key":"Tr2jp5ec10"}],"identifier":"create-cutouts-of-the-chosen-snia-in-the-band-of-your-choice","label":"Create cutouts of the chosen SNIa in the band of your choice.","html_id":"create-cutouts-of-the-chosen-snia-in-the-band-of-your-choice","implicit":true,"key":"HpDHv7jDyG"}],"key":"yjfYKYfxko"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"band = 'R062'\ninstances = instances[instances['filter'] == band]","key":"Mv0xbca645"},{"type":"output","id":"9p5UZm95JM7mJguH_3tqI","data":[],"key":"oq6NYdmlLA"}],"key":"O5FqkurXlo"},{"type":"block","children":[],"key":"SqrWqxBdUX"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"#Make the cutouts; this will take a couple of minutes.\nstamps = []\nmjd = []\nfor i, row in enumerate(instances.itertuples()):\n    band, pointing, sca = row[1], row[2], row[3]\n    imgpath = f's3://{BUCKET_NAME}/{ROMAN_TDS_PATH}/images/simple_model/{band}/{pointing}/Roman_TDS_simple_model_{band}_{pointing}_{sca}.fits.gz'\n    print(imgpath)\n    with fits.open(imgpath, fsspec_kwargs={\"anon\": True}) as hdu:\n        img = hdu[1].data\n        header = hdu[0].header\n        wcs = WCS(header)\n        x, y = wcs.world_to_pixel(coord)\n\n        # Manually rotate the images so they are all aligned.\n        CDmat = np.array([header['CD1_1'], header['CD1_2'],\n                          header['CD2_1'], header['CD2_2']]).reshape(2,2)\n\n        orientation = hdu[0].header['ORIENTAT']\n\n        # These chips are \"flipped\".\n        if sca % 3 == 0:\n            orientation += 180\n\n        # Build rotation matrix.\n        CD1_1_rot = np.cos(-orientation*np.pi/180)\n        CD1_2_rot = -np.sin(-orientation*np.pi/180)\n        CD2_1_rot = np.sin(-orientation*np.pi/180)\n        CD2_2_rot = np.cos(-orientation*np.pi/180)\n\n        RotMat = np.array([CD1_1_rot, CD1_2_rot,\n                          CD2_1_rot, CD2_2_rot]).reshape(2,2)\n\n        RotMat_inv = np.array([CD1_1_rot, -CD1_2_rot,\n                              -CD2_1_rot, CD2_2_rot]).reshape(2,2)\n\n        # Apply rotation to the CDi_j header keywords.\n        CDmat_rot = np.dot(CDmat,RotMat_inv)\n\n        # Update header.\n        header['CD1_1'], header['CD1_2'] = CDmat_rot[0]\n        header['CD2_1'], header['CD2_2'] = CDmat_rot[1]\n        header['ORIENTAT'] -= orientation\n\n        # Rotate the image.\n        rot_img = rotate(img,angle=orientation,reshape=False,cval=np.nan)\n        hdu[1].data = rot_img\n\n        rot_wcs = WCS(header)\n\n        try:\n            # Make cutout around SN Ia location.\n            cutout = Cutout2D(rot_img,coord,100,wcs=rot_wcs,mode='partial')\n            stamps.append(cutout.data)\n            mjd.append(get_mjd(pointing))\n        except NoOverlapError:\n            pass","key":"fYp4ghCIzR"},{"type":"output","id":"O8KhAT2py7BZrJaXN6LjS","data":[{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/407/Roman_TDS_simple_model_R062_407_7.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/4257/Roman_TDS_simple_model_R062_4257_10.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/4647/Roman_TDS_simple_model_R062_4647_6.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/6182/Roman_TDS_simple_model_R062_6182_5.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/8112/Roman_TDS_simple_model_R062_8112_15.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/9652/Roman_TDS_simple_model_R062_9652_17.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/11197/Roman_TDS_simple_model_R062_11197_1.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/11582/Roman_TDS_simple_model_R062_11582_1.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/15037/Roman_TDS_simple_model_R062_15037_8.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/16962/Roman_TDS_simple_model_R062_16962_11.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/18502/Roman_TDS_simple_model_R062_18502_10.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/18507/Roman_TDS_simple_model_R062_18507_6.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/20812/Roman_TDS_simple_model_R062_20812_6.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/21592/Roman_TDS_simple_model_R062_21592_18.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/21977/Roman_TDS_simple_model_R062_21977_17.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/22357/Roman_TDS_simple_model_R062_22357_15.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/23512/Roman_TDS_simple_model_R062_23512_17.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/25442/Roman_TDS_simple_model_R062_25442_1.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/27367/Roman_TDS_simple_model_R062_27367_13.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/28512/Roman_TDS_simple_model_R062_28512_7.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/32362/Roman_TDS_simple_model_R062_32362_10.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/32752/Roman_TDS_simple_model_R062_32752_6.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/34287/Roman_TDS_simple_model_R062_34287_5.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/36217/Roman_TDS_simple_model_R062_36217_15.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/37757/Roman_TDS_simple_model_R062_37757_17.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/39302/Roman_TDS_simple_model_R062_39302_1.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/39687/Roman_TDS_simple_model_R062_39687_1.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/43142/Roman_TDS_simple_model_R062_43142_8.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/45067/Roman_TDS_simple_model_R062_45067_11.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/46607/Roman_TDS_simple_model_R062_46607_10.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/46612/Roman_TDS_simple_model_R062_46612_6.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/48917/Roman_TDS_simple_model_R062_48917_6.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/49697/Roman_TDS_simple_model_R062_49697_18.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/50082/Roman_TDS_simple_model_R062_50082_17.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/50462/Roman_TDS_simple_model_R062_50462_15.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/51617/Roman_TDS_simple_model_R062_51617_17.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/53547/Roman_TDS_simple_model_R062_53547_1.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/55472/Roman_TDS_simple_model_R062_55472_13.fits.gz\n"},{"output_type":"stream","name":"stdout","text":"s3://nasa-irsa-simulations/openuniverse2024/roman/preview/RomanTDS/images/simple_model/R062/56617/Roman_TDS_simple_model_R062_56617_7.fits.gz\n"}],"key":"e8EYodCs5c"}],"key":"juMGIzYlW9"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":288,"column":1},"end":{"line":288,"column":1}},"children":[{"type":"text","value":"Make an animated gif out of the cutouts.","position":{"start":{"line":288,"column":1},"end":{"line":288,"column":1}},"key":"cywuavnxns"}],"identifier":"make-an-animated-gif-out-of-the-cutouts","label":"Make an animated gif out of the cutouts.","html_id":"make-an-animated-gif-out-of-the-cutouts","implicit":true,"key":"GXb5GDsv1C"}],"key":"fxLtgZxxbJ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"savepath = f'SN{oid}.gif'\nsavepath\nanimate_stamps(stamps, savepath, labels=mjd)","key":"sU6YxDbQe6"},{"type":"output","id":"kpSVJm7Qm9u2zMrKpO-nX","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 500x500 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"bcdd5e384ad4375da98f0768db6adfd2","path":"/build/bcdd5e384ad4375da98f0768db6adfd2.png"}}}],"key":"olvhCdvH9r"}],"key":"zbvDPJ20T4"},{"type":"block","children":[{"type":"thematicBreak","position":{"start":{"line":296,"column":1},"end":{"line":296,"column":1}},"key":"Pxi00urD7V"},{"type":"heading","depth":2,"position":{"start":{"line":298,"column":1},"end":{"line":298,"column":1}},"children":[{"type":"text","value":"About this notebook","position":{"start":{"line":298,"column":1},"end":{"line":298,"column":1}},"key":"hyAK4zdfU3"}],"identifier":"about-this-notebook","label":"About this notebook","html_id":"about-this-notebook","implicit":true,"key":"OYXEu8Emro"},{"type":"paragraph","position":{"start":{"line":300,"column":1},"end":{"line":300,"column":1}},"children":[{"type":"strong","position":{"start":{"line":300,"column":1},"end":{"line":300,"column":1}},"children":[{"type":"text","value":"Author:","position":{"start":{"line":300,"column":1},"end":{"line":300,"column":1}},"key":"ZCGW2mCIUw"}],"key":"LlcqBKR3W4"},{"type":"text","value":" Lauren Aldoroty (","position":{"start":{"line":300,"column":1},"end":{"line":300,"column":1}},"key":"t08E1clbMh"},{"type":"link","url":"mailto:laurenaldoroty@gmail.com","position":{"start":{"line":300,"column":1},"end":{"line":300,"column":1}},"children":[{"type":"text","value":"laurenaldoroty@gmail​.com","position":{"start":{"line":300,"column":1},"end":{"line":300,"column":1}},"key":"Jc9UqpcXe5"}],"urlSource":"mailto:laurenaldoroty@gmail.com","key":"IkTsVki4ar"},{"type":"text","value":") with minor subsequent modifications to match repository style","position":{"start":{"line":300,"column":1},"end":{"line":300,"column":1}},"key":"HoackdiEUS"}],"key":"qqBZ9U80JW"},{"type":"paragraph","position":{"start":{"line":302,"column":1},"end":{"line":302,"column":1}},"children":[{"type":"strong","position":{"start":{"line":302,"column":1},"end":{"line":302,"column":1}},"children":[{"type":"text","value":"Updated:","position":{"start":{"line":302,"column":1},"end":{"line":302,"column":1}},"key":"ncjGwHAkmD"}],"key":"JLaahBn3Dc"},{"type":"text","value":" 2024-06-10","position":{"start":{"line":302,"column":1},"end":{"line":302,"column":1}},"key":"wDi5kxZqrq"}],"key":"cnxnsYpkdA"},{"type":"paragraph","position":{"start":{"line":304,"column":1},"end":{"line":304,"column":1}},"children":[{"type":"strong","position":{"start":{"line":304,"column":1},"end":{"line":304,"column":1}},"children":[{"type":"text","value":"Contact:","position":{"start":{"line":304,"column":1},"end":{"line":304,"column":1}},"key":"qBRXqfr1SM"}],"key":"VPPfvpiwcZ"},{"type":"text","value":" ","position":{"start":{"line":304,"column":1},"end":{"line":304,"column":1}},"key":"RdSCLwoyLO"},{"type":"link","url":"https://irsa.ipac.caltech.edu/docs/help_desk.html","position":{"start":{"line":304,"column":1},"end":{"line":304,"column":1}},"children":[{"type":"text","value":"the IRSA Helpdesk","position":{"start":{"line":304,"column":1},"end":{"line":304,"column":1}},"key":"mlakWNvIjE"}],"urlSource":"https://irsa.ipac.caltech.edu/docs/help_desk.html","key":"lt4NkeskyN"},{"type":"text","value":" with questions or reporting problems.","position":{"start":{"line":304,"column":1},"end":{"line":304,"column":1}},"key":"r2E2HiggLB"}],"key":"QRnJMtcIJQ"}],"key":"WVNcrBb0qw"}],"key":"uQ17z2gmiF"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Using Firefly to Explore OpenUniverse2024 Data Preview Simulated Roman and Rubin Images","url":"/openuniverse2024preview-firefly","group":"OpenUniverse 2024"},"next":{"title":"Querying CosmoDC2 Mock v1 catalogs","url":"/cosmodc2-tap-access","group":"CosmoDC2"}}},"domain":"http://localhost:3000"}