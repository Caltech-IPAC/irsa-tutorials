{"version":2,"kind":"Notebook","sha256":"b39dcdaee6cc1162aaf89fc38cb7dce7a85bc62f60df9667199f0436477dd701","slug":"irsa-hats-with-lsdb","location":"/tutorials/parquet-catalog-demos/irsa-hats-with-lsdb.md","dependencies":[],"frontmatter":{"title":"Access HATS Collections Using LSDB: Euclid Q1 and ZTF DR23","kernelspec":{"name":"python3","display_name":"irsa-tutorials","language":"python"},"jupytext":{"text_representation":{"extension":".md","format_name":"myst","format_version":"0.13","jupytext_version":"1.17.2"}},"content_includes_title":false,"authors":[{"id":"IRSA Scientists and Developers","name":"IRSA Scientists and Developers"}],"github":"https://github.com/Caltech-IPAC/irsa-tutorials/","subject":"IRSA Tutorials","keywords":["astronomy"],"settings":{"output_matplotlib_strings":"remove"},"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/Caltech-IPAC/irsa-tutorials//blob/main/tutorials/parquet-catalog-demos/irsa-hats-with-lsdb.md","exports":[{"format":"md","filename":"irsa-hats-with-lsdb.md","url":"/irsa-tutorials/build/irsa-hats-with-lsdb-e69760ad3384c56400ab810863c66c65.md"}]},"mdast":{"type":"root","children":[{"type":"block","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Learning Goals","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"sU36AzpvrH"}],"identifier":"learning-goals","label":"Learning Goals","html_id":"learning-goals","implicit":true,"key":"NzQ0QmHO4d"},{"type":"paragraph","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"By the end of this tutorial, you will learn how to:","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"XLcrsM8g4O"}],"key":"ur8qIWL4Mi"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":22,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"Use the ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"SQsyrGhpbi"},{"type":"inlineCode","value":"lsdb","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"XVltYW1ZOP"},{"type":"text","value":" library to access IRSA HATS Collections from the cloud.","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"HNmahHfodF"}],"key":"QCncR2tNYv"},{"type":"listItem","spread":true,"position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"Define spatial, column, and row filters to read only a portion of large HATS catalogs.","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"JlyBnkMRst"}],"key":"UniRef2mfp"},{"type":"listItem","spread":true,"position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"Crossmatch catalogs using ","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"d2x0EX1ko7"},{"type":"inlineCode","value":"lsdb","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"uTcmS8L9qH"},{"type":"text","value":" and visualize the results.","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"YcxxS8mH6c"}],"key":"r8bJEUaSFp"},{"type":"listItem","spread":true,"position":{"start":{"line":25,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"Perform index searches on HATS catalogs using ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"jLPgLqWgpg"},{"type":"inlineCode","value":"lsdb","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"y9UneoKTwq"},{"type":"text","value":".","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"t4RkNsi3Sk"}],"key":"AVxYaOqHcq"}],"key":"qy5Vw4HiIJ"}],"key":"hIMZ725Lt0"},{"type":"block","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"text","value":"Introduction","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"key":"sngVeAr6S8"}],"identifier":"introduction","label":"Introduction","html_id":"introduction","implicit":true,"key":"P8qj0SH0X0"},{"type":"paragraph","position":{"start":{"line":31,"column":1},"end":{"line":32,"column":1}},"children":[{"type":"text","value":"IRSA provides several astronomical catalogs in spatially partitioned ","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"zKJISs46Wc"},{"type":"link","url":"https://parquet.apache.org/","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"Parquet format","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"JwxPmBdZw9"}],"urlSource":"https://parquet.apache.org/","key":"TKroB9YXQR"},{"type":"text","value":", enabling efficient access and scalable analysis of large datasets.\nAmong these are the ","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"yieNWKuZwM"},{"type":"link","url":"https://irsa.ipac.caltech.edu/docs/parquet_catalogs/#hats","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"HATS","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"IZ79GS5Sst"}],"urlSource":"https://irsa.ipac.caltech.edu/docs/parquet_catalogs/#hats","key":"lLwnvFrzdq"},{"type":"text","value":" (Hierarchical Adaptive Tiling Scheme) collections, which organize catalog data using adaptive ","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"aaAnea4Es8"},{"type":"link","url":"https://irsa.ipac.caltech.edu/healpix/","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"HEALPix","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"MW7u3iUqWQ"}],"urlSource":"https://irsa.ipac.caltech.edu/healpix/","key":"e8JiVv3Sge"},{"type":"text","value":"-based partitioning for parallelizable queries and crossmatching.","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"tnbGnaPw42"}],"key":"JQwKbgjrH1"},{"type":"paragraph","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"text","value":"For more details on HATS collections, partitioning, and schema organization, see the IRSA documentation on ","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"B6KReYcRRE"},{"type":"link","url":"https://irsa.ipac.caltech.edu/docs/parquet_catalogs/","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"text","value":"Parquet catalogs","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"xTuX22YCFU"}],"urlSource":"https://irsa.ipac.caltech.edu/docs/parquet_catalogs/","key":"h9TLKYX7HR"},{"type":"text","value":".","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"G5VOUCdyij"}],"key":"x6Thr0xzZh"},{"type":"paragraph","position":{"start":{"line":36,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"text","value":"This notebook demonstrates how to access and analyze HATS collections using the ","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"JcHdW9Lcaa"},{"type":"link","url":"https://docs.lsdb.io/en/latest/index.html","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"children":[{"type":"text","value":"lsdb","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"c68ikfm4KX"}],"urlSource":"https://docs.lsdb.io/en/latest/index.html","key":"XLLE0c7YVb"},{"type":"text","value":" Python library, which makes it convenient to work with these large datasets.\nWe will explore the following IRSA HATS collections in this tutorial:","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"f7tV6PlCaZ"}],"key":"cs6RPUgXlJ"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":39,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"text","value":"Euclid Q1 Merged Objects: 14 Euclid Q1 tables, including MER (multi-wavelength mosaics) final catalog, photometric redshift catalogs, and spectroscopic catalogs joined on MER Object ID.","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"Ifb7PWiZiN"}],"key":"gJCeDZKduP"},{"type":"listItem","spread":true,"position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"children":[{"type":"text","value":"ZTF DR23 Objects Table: catalog of PSF-fit photometry detections extracted from ZTF reference images, including “collapsed-lightcurve” metrics.","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"mdeRdxblMb"}],"key":"W5d85hg5kx"},{"type":"listItem","spread":true,"position":{"start":{"line":41,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"text","value":"ZTF DR23 Lightcurves: catalog of PSF-fit photometry detections extracted from single-exposure images at the locations of Objects Table detections.","position":{"start":{"line":41,"column":1},"end":{"line":41,"column":1}},"key":"tVP9IbpgSp"}],"key":"HrIv1ez8iK"}],"key":"JMYI1MUsKr"},{"type":"paragraph","position":{"start":{"line":43,"column":1},"end":{"line":43,"column":1}},"children":[{"type":"text","value":"We will use lsdb to leverage HATS partitioning for performing fast spatial queries on a relatively large area of sky and for crossmatching sources between Euclid and ZTF to identify variable galaxy candidates and visualize their light curves.","position":{"start":{"line":43,"column":1},"end":{"line":43,"column":1}},"key":"LNYfLvd9YS"}],"key":"Oy2SQI0aYk"}],"key":"VoEzyqTMu2"},{"type":"block","position":{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"key":"oEAS8wYSK7"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"RCZZdHlUyx"}],"key":"lgmboUHqQY"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Uncomment the next line to install dependencies if needed.\n# !pip install s3fs \"lsdb>=0.6.6\" pyarrow pandas numpy astropy dask matplotlib","key":"nCDVRXXKLF"},{"type":"output","id":"H-wj0tz4OKiMJzRqxlFJ_","data":[],"key":"JccO2IjU9N"}],"key":"S7I1dLqVDe"},{"type":"block","children":[],"key":"M01E0WW20m"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import s3fs\nimport lsdb\nimport pyarrow.parquet as pq\nimport numpy as np\nimport pandas as pd\nfrom astropy import units as u\nfrom astropy.coordinates import SkyCoord\nimport os\nimport matplotlib.pyplot as plt\nfrom dask.distributed import Client","key":"bfpuIQqZmj"},{"type":"output","id":"yBjk38fviGhIb3xjKsrWQ","data":[],"key":"jNfhIXpW06"}],"key":"JZLXwg8Z0G"},{"type":"block","children":[],"key":"O9JRwhlDpq"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"pd.set_option(\"display.max_colwidth\", None) # schema descriptions can be long\npd.set_option(\"display.min_rows\", 18) # to show more rows when truncated view","key":"dL1YaT3aaY"},{"type":"output","id":"idTbeSsX276ZCk51KFtro","data":[],"key":"sasgS12BLb"}],"key":"Phksv0pJQu"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"children":[{"type":"text","value":"1. Locate HATS collections in the cloud","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"key":"Gp05aEj1NS"}],"identifier":"id-1-locate-hats-collections-in-the-cloud","label":"1. Locate HATS collections in the cloud","html_id":"id-1-locate-hats-collections-in-the-cloud","implicit":true,"key":"oQEQsBICU3"},{"type":"paragraph","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"children":[{"type":"text","value":"From IRSA’s ","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"key":"hFekx5d28h"},{"type":"link","url":"https://irsa.ipac.caltech.edu/cloud_access/","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"children":[{"type":"text","value":"cloud data access page","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"key":"Dws9qOwnxz"}],"urlSource":"https://irsa.ipac.caltech.edu/cloud_access/","key":"RlHuGNp2Gu"},{"type":"text","value":", let’s identify the bucket and path prefix for the HATS Collections for Euclid Q1 and ZTF DR23:","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"key":"ebETSH1tjn"}],"key":"CEYfkrOOue"}],"key":"GVTUY3sh7b"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"euclid_q1_bucket = \"nasa-irsa-euclid-q1\"\neuclid_q1_hats_prefix = \"contributed/q1/merged_objects/hats\"\n\nztf_bucket = \"ipac-irsa-ztf\"\nztf_hats_prefix = \"contributed/dr23/objects/hats\"\nztf_lc_hats_prefix = \"contributed/dr23/lc/hats\"","key":"qGsachbXnW"},{"type":"output","id":"j6tViUyYO0HeybnE-nHah","data":[],"key":"msbefOTxnP"}],"key":"y6obtE8gvg"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":85,"column":1},"end":{"line":86,"column":1}},"children":[{"type":"link","url":"https://s3fs.readthedocs.io/en/latest/","position":{"start":{"line":85,"column":1},"end":{"line":85,"column":1}},"children":[{"type":"text","value":"s3fs","position":{"start":{"line":85,"column":1},"end":{"line":85,"column":1}},"key":"ik3sOqGs4i"}],"urlSource":"https://s3fs.readthedocs.io/en/latest/","key":"WFNp4T8zw6"},{"type":"text","value":" provides a filesystem-like Python interface for AWS S3 buckets.\nFirst, we create an S3 client:","position":{"start":{"line":85,"column":1},"end":{"line":85,"column":1}},"key":"OJuYO01gHG"}],"key":"WfFuD6ibQw"}],"key":"dABhxEJb9Y"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"s3 = s3fs.S3FileSystem(anon=True)","key":"cFa54XTxus"},{"type":"output","id":"gbL_veMLVlbOGwwXh1fF5","data":[],"key":"Ejxuhz11S7"}],"key":"DQYMIZjN2Q"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"children":[{"type":"text","value":"Using the S3 client, we can now list the contents of the Euclid Q1 HATS ","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"key":"NyvmmUgsoB"},{"type":"strong","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"children":[{"type":"text","value":"collection","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"key":"cagTk7hhuB"}],"key":"KCWrTEzlOD"},{"type":"text","value":":","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"key":"pn2lXuG7E1"}],"key":"UCFOU3ZE2A"}],"key":"iaHxbFP0zY"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"s3.ls(f\"{euclid_q1_bucket}/{euclid_q1_hats_prefix}\")","key":"UzasF4FgFI"},{"type":"output","id":"scUKvyj3lqoKU2Ox88kjg","data":[{"output_type":"execute_result","execution_count":6,"metadata":{},"data":{"text/plain":{"content":"['nasa-irsa-euclid-q1/contributed/q1/merged_objects/hats/collection.properties',\n 'nasa-irsa-euclid-q1/contributed/q1/merged_objects/hats/euclid_q1_merged_objects-hats',\n 'nasa-irsa-euclid-q1/contributed/q1/merged_objects/hats/euclid_q1_merged_objects-hats_index_object_id',\n 'nasa-irsa-euclid-q1/contributed/q1/merged_objects/hats/euclid_q1_merged_objects-hats_margin_10arcsec']","content_type":"text/plain"}}}],"key":"cBFjz8dKFG"}],"key":"il0Kd3o5tF"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":98,"column":1},"end":{"line":99,"column":1}},"children":[{"type":"text","value":"In this collection, you can see collection properties, catalog, index table, and margin cache in order.\nYou can explore more directories to see how this HATS collection follows the directory structure described in IRSA’s documentation on ","position":{"start":{"line":98,"column":1},"end":{"line":98,"column":1}},"key":"mbkOHSt00t"},{"type":"link","url":"https://irsa.ipac.caltech.edu/docs/parquet_catalogs/#hats","position":{"start":{"line":98,"column":1},"end":{"line":98,"column":1}},"children":[{"type":"text","value":"HATS partitioning and HATS Collections","position":{"start":{"line":98,"column":1},"end":{"line":98,"column":1}},"key":"AwkvEuZxxv"}],"urlSource":"https://irsa.ipac.caltech.edu/docs/parquet_catalogs/#hats","key":"Df878zkPMp"},{"type":"text","value":".","position":{"start":{"line":98,"column":1},"end":{"line":98,"column":1}},"key":"LxyF5z2m5P"}],"key":"KB6qs99hEC"},{"type":"paragraph","position":{"start":{"line":101,"column":1},"end":{"line":103,"column":1}},"children":[{"type":"text","value":"As per the documentation, the Parquet file containing the schema for this ","position":{"start":{"line":101,"column":1},"end":{"line":101,"column":1}},"key":"JTV6hAW2da"},{"type":"inlineCode","value":"euclid_q1_merged_objects-hats","position":{"start":{"line":101,"column":1},"end":{"line":101,"column":1}},"key":"mU0iTvzPPu"},{"type":"text","value":" catalog is stored in ","position":{"start":{"line":101,"column":1},"end":{"line":101,"column":1}},"key":"Mmm9BziAHu"},{"type":"inlineCode","value":"dataset/_common_metadata","position":{"start":{"line":101,"column":1},"end":{"line":101,"column":1}},"key":"gyQby2rh2n"},{"type":"text","value":" directory.\nYou can find the catalog schema through other sources as well but we use the ","position":{"start":{"line":101,"column":1},"end":{"line":101,"column":1}},"key":"WbqmVLFBEg"},{"type":"inlineCode","value":"_common_metadata","position":{"start":{"line":101,"column":1},"end":{"line":101,"column":1}},"key":"NYfk0bdS1o"},{"type":"text","value":" file here because it contains column metadata (units and descriptions) which the other schemas don’t have.\nLet’s save its path for later use:","position":{"start":{"line":101,"column":1},"end":{"line":101,"column":1}},"key":"L1KS9sgFss"}],"key":"b73STJkgRR"}],"key":"nXQWIJBZgP"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"euclid_q1_schema_path = \"euclid_q1_merged_objects-hats/dataset/_common_metadata\" # euclid_q1_merged_objects-hats is the catalog name we identified above","key":"VhT4bjHvaI"},{"type":"output","id":"lryE0-qFSANK7Fx2XODdF","data":[],"key":"bSGytCgU3q"}],"key":"D696B0SYpi"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":109,"column":1},"end":{"line":109,"column":1}},"children":[{"type":"text","value":"Similarly, we can list the contents of the ZTF DR23 Objects HATS collection and save the path to its schema file:","position":{"start":{"line":109,"column":1},"end":{"line":109,"column":1}},"key":"bKGIZdh9Qt"}],"key":"lsUQv1Z8Ca"}],"key":"CkNwum5Wy0"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"s3.ls(f\"{ztf_bucket}/{ztf_hats_prefix}\")","key":"ZFrL6zwPJT"},{"type":"output","id":"DQHIg8C3-dm6SajRFFYph","data":[{"output_type":"execute_result","execution_count":8,"metadata":{},"data":{"text/plain":{"content":"['ipac-irsa-ztf/contributed/dr23/objects/hats/collection.properties',\n 'ipac-irsa-ztf/contributed/dr23/objects/hats/ztf_dr23_objects-hats',\n 'ipac-irsa-ztf/contributed/dr23/objects/hats/ztf_dr23_objects-hats_index_oid',\n 'ipac-irsa-ztf/contributed/dr23/objects/hats/ztf_dr23_objects-hats_margin_10arcsec']","content_type":"text/plain"}}}],"key":"eKf5DhlLum"}],"key":"RG0K3oePe3"},{"type":"block","children":[],"key":"pSiKmJweyq"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ztf_schema_path = \"ztf_dr23_objects-hats/dataset/_common_metadata\" # ztf_dr23_objects-hats is the catalog name we identified above","key":"rImgloLU6m"},{"type":"output","id":"JX8Txp6G-9i2oxjfEVG5M","data":[],"key":"pAJ3rRbDjb"}],"key":"dTKQzioD3J"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":119,"column":1},"end":{"line":119,"column":1}},"children":[{"type":"text","value":"2. Open the HATS catalogs","position":{"start":{"line":119,"column":1},"end":{"line":119,"column":1}},"key":"n7az5RsWtk"}],"identifier":"id-2-open-the-hats-catalogs","label":"2. Open the HATS catalogs","html_id":"id-2-open-the-hats-catalogs","implicit":true,"key":"HDzEQ8d8lT"},{"type":"paragraph","position":{"start":{"line":121,"column":1},"end":{"line":123,"column":1}},"children":[{"type":"text","value":"Now we can use ","position":{"start":{"line":121,"column":1},"end":{"line":121,"column":1}},"key":"YWyKPdDQvD"},{"type":"link","url":"https://docs.lsdb.io/en/latest/index.html","position":{"start":{"line":121,"column":1},"end":{"line":121,"column":1}},"children":[{"type":"text","value":"lsdb","position":{"start":{"line":121,"column":1},"end":{"line":121,"column":1}},"key":"QZl7LaaiHz"}],"urlSource":"https://docs.lsdb.io/en/latest/index.html","key":"MiBRVxDTf5"},{"type":"text","value":" to open the HATS catalogs we identified above, starting with the Euclid Q1 catalog.\nNote that we can simply pass the HATS collection path and it will automatically identify the catalog inside it and make use of the ancillary data (index table and margin cache) when needed.\nAlso, we prefix the path with ","position":{"start":{"line":121,"column":1},"end":{"line":121,"column":1}},"key":"oOqdbZZoFK"},{"type":"inlineCode","value":"s3://","position":{"start":{"line":121,"column":1},"end":{"line":121,"column":1}},"key":"iLYKI5ookg"},{"type":"text","value":" to indicate that it is an S3 path.","position":{"start":{"line":121,"column":1},"end":{"line":121,"column":1}},"key":"Ae9SsWfUrh"}],"key":"CKoYbb7z9e"}],"key":"sCYLNbRfPm"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"euclid_catalog = lsdb.open_catalog(f\"s3://{euclid_q1_bucket}/{euclid_q1_hats_prefix}\")\neuclid_catalog","key":"bGXHbAgVoY"},{"type":"output","id":"l_mNMIMZC29qtFS8L_DHe","data":[{"output_type":"execute_result","execution_count":10,"metadata":{},"data":{"text/plain":{"content":"Dask NestedFrame Structure:\n                          object_id               ra              dec mer_flux_h_templfit mer_fluxerr_h_templfit  phz_phz_median class_phz_classification\nnpartitions=114                                                                                                                                          \n718306548379549696   int64[pyarrow]  double[pyarrow]  double[pyarrow]      float[pyarrow]         float[pyarrow]  float[pyarrow]           int32[pyarrow]\n719784292007280640              ...              ...              ...                 ...                    ...             ...                      ...\n...                             ...              ...              ...                 ...                    ...             ...                      ...\n2542493095883177984             ...              ...              ...                 ...                    ...             ...                      ...\n2542510688069222400             ...              ...              ...                 ...                    ...             ...                      ...\nDask Name: nestedframe, 3 expressions\nExpr=MapPartitions(NestedFrame)","content_type":"text/plain"},"text/html":{"content":"<div><strong>lsdb Catalog Euclid_Q1_Merged_Objects:</strong></div><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>object_id</th>\n      <th>ra</th>\n      <th>dec</th>\n      <th>mer_flux_h_templfit</th>\n      <th>mer_fluxerr_h_templfit</th>\n      <th>phz_phz_median</th>\n      <th>class_phz_classification</th>\n    </tr>\n    <tr>\n      <th>npartitions=114</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Order: 7, Pixel: 40831</th>\n      <td>int64[pyarrow]</td>\n      <td>double[pyarrow]</td>\n      <td>double[pyarrow]</td>\n      <td>float[pyarrow]</td>\n      <td>float[pyarrow]</td>\n      <td>float[pyarrow]</td>\n      <td>int32[pyarrow]</td>\n    </tr>\n    <tr>\n      <th>Order: 7, Pixel: 40915</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>Order: 6, Pixel: 36130</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>Order: 7, Pixel: 144524</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n  </tbody>\n</table>\n</div><div>7 out of 1593 available columns in the catalog have been loaded <strong>lazily</strong>, meaning no data has been read, only the catalog schema</div>","content_type":"text/html"}}}],"key":"hFVYipRBdt"}],"key":"cAITXVR20r"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":130,"column":1},"end":{"line":130,"column":1}},"children":[{"type":"text","value":"Few things to note here:","position":{"start":{"line":130,"column":1},"end":{"line":130,"column":1}},"key":"PYz9yIk1t7"}],"key":"iIj9BDTflX"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":132,"column":1},"end":{"line":135,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":132,"column":1},"end":{"line":132,"column":1}},"children":[{"type":"text","value":"This catalog is opened ","position":{"start":{"line":132,"column":1},"end":{"line":132,"column":1}},"key":"BbxlbNKhxs"},{"type":"link","url":"https://docs.lsdb.io/en/latest/tutorials/lazy_operations.html","position":{"start":{"line":132,"column":1},"end":{"line":132,"column":1}},"children":[{"type":"text","value":"lazily","position":{"start":{"line":132,"column":1},"end":{"line":132,"column":1}},"key":"LPjDsYhawe"}],"urlSource":"https://docs.lsdb.io/en/latest/tutorials/lazy_operations.html","key":"SzXzNwl9b6"},{"type":"text","value":", i.e., no data is read from the S3 bucket into memory yet.","position":{"start":{"line":132,"column":1},"end":{"line":132,"column":1}},"key":"kamC1c7Oz9"}],"key":"XSCTEOYwl2"},{"type":"listItem","spread":true,"position":{"start":{"line":133,"column":1},"end":{"line":133,"column":1}},"children":[{"type":"text","value":"Since we did not specify any columns to select from this very wide catalog, we get 7 default columns out of 1593 available columns!","position":{"start":{"line":133,"column":1},"end":{"line":133,"column":1}},"key":"o8E5sc3DHz"}],"key":"PH93r2jujY"},{"type":"listItem","spread":true,"position":{"start":{"line":134,"column":1},"end":{"line":135,"column":1}},"children":[{"type":"text","value":"We see some of the HEALPix orders and pixels at which this catalog is partitioned.","position":{"start":{"line":134,"column":1},"end":{"line":134,"column":1}},"key":"GciFq1bO6H"}],"key":"Z80ofBPVuB"}],"key":"qWYNEGcFCb"},{"type":"paragraph","position":{"start":{"line":136,"column":1},"end":{"line":136,"column":1}},"children":[{"type":"text","value":"Let’s plot the sky coverage of this catalog:","position":{"start":{"line":136,"column":1},"end":{"line":136,"column":1}},"key":"CZJeJu0MKb"}],"key":"XafW0Hm3FN"}],"key":"aIIGLFICvm"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"euclid_catalog.plot_pixels()","key":"EfLwWuqPM8"},{"type":"output","id":"bOoAZGaGazyYld8Yq_Wwj","data":[{"output_type":"execute_result","execution_count":11,"metadata":{},"data":{"text/plain":{"content":"(<Figure size 1000x500 with 2 Axes>,\n <WCSAxes: title={'center': 'Catalog pixel map - Euclid_Q1_Merged_Objects'}>)","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1000x500 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"ae4ee040ebdf330342bf7dc8c728c362","path":"/irsa-tutorials/build/ae4ee040ebdf330342bf7dc8c728c362.png"}}}],"key":"O0tO4OrzZQ"}],"key":"rlqM051LmL"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":142,"column":1},"end":{"line":142,"column":1}},"children":[{"type":"text","value":"Since HATS uses adaptive tile-based partitioning, we see higher order HEALPix tiles in regions with higher source density and lower order tiles in regions with lower source density.","position":{"start":{"line":142,"column":1},"end":{"line":142,"column":1}},"key":"ENztElLP73"}],"key":"RLcuX3mJ7K"},{"type":"paragraph","position":{"start":{"line":144,"column":1},"end":{"line":144,"column":1}},"children":[{"type":"text","value":"Now let’s open the ZTF DR23 Objects catalog in a similar manner and view its sky coverage:","position":{"start":{"line":144,"column":1},"end":{"line":144,"column":1}},"key":"TP6Ea5nBPO"}],"key":"n1qBFgi0Jh"}],"key":"TacOw3fQU0"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ztf_catalog = lsdb.open_catalog(f\"s3://{ztf_bucket}/{ztf_hats_prefix}\")\nztf_catalog","key":"hGt7Si1x9N"},{"type":"output","id":"klz_XtS-k5SidT_5Hx5UH","data":[{"output_type":"execute_result","execution_count":12,"metadata":{},"data":{"text/plain":{"content":"Dask NestedFrame Structure:\n                                oid               ra              dec       filtercode       medianmag       medmagerr\nnpartitions=1791                                                                                                      \n0                    int64[pyarrow]  double[pyarrow]  double[pyarrow]  string[pyarrow]  float[pyarrow]  float[pyarrow]\n4503599627370496                ...              ...              ...              ...             ...             ...\n...                             ...              ...              ...              ...             ...             ...\n3457638613913698304             ...              ...              ...              ...             ...             ...\n3458764513820540928             ...              ...              ...              ...             ...             ...\nDask Name: nestedframe, 3 expressions\nExpr=MapPartitions(NestedFrame)","content_type":"text/plain"},"text/html":{"content":"<div><strong>lsdb Catalog ZTF_DR23_Objects:</strong></div><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>oid</th>\n      <th>ra</th>\n      <th>dec</th>\n      <th>filtercode</th>\n      <th>medianmag</th>\n      <th>medmagerr</th>\n    </tr>\n    <tr>\n      <th>npartitions=1791</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Order: 3, Pixel: 0</th>\n      <td>int64[pyarrow]</td>\n      <td>double[pyarrow]</td>\n      <td>double[pyarrow]</td>\n      <td>string[pyarrow]</td>\n      <td>float[pyarrow]</td>\n      <td>float[pyarrow]</td>\n    </tr>\n    <tr>\n      <th>Order: 3, Pixel: 1</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>Order: 4, Pixel: 3070</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>Order: 4, Pixel: 3071</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n  </tbody>\n</table>\n</div><div>6 out of 76 available columns in the catalog have been loaded <strong>lazily</strong>, meaning no data has been read, only the catalog schema</div>","content_type":"text/html"}}}],"key":"qXecUFWRvj"}],"key":"P9k3SFyupD"},{"type":"block","children":[],"key":"u3cJzIwtvr"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ztf_catalog.plot_pixels()","key":"G5cLGinwP2"},{"type":"output","id":"9GiAk3IJxqELW804e2Wdh","data":[{"output_type":"execute_result","execution_count":13,"metadata":{},"data":{"text/plain":{"content":"(<Figure size 1000x500 with 2 Axes>,\n <WCSAxes: title={'center': 'Catalog pixel map - ZTF_DR23_Objects'}>)","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1000x500 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"10538ea5a175110a692d6516fb65079c","path":"/irsa-tutorials/build/10538ea5a175110a692d6516fb65079c.png"}}}],"key":"BAngFCHyI6"}],"key":"mt6Gt2Ezvs"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":155,"column":1},"end":{"line":155,"column":1}},"children":[{"type":"text","value":"3. Define filters for querying Euclid Q1 catalog","position":{"start":{"line":155,"column":1},"end":{"line":155,"column":1}},"key":"LMkW0kPj6g"}],"identifier":"id-3-define-filters-for-querying-euclid-q1-catalog","label":"3. Define filters for querying Euclid Q1 catalog","html_id":"id-3-define-filters-for-querying-euclid-q1-catalog","implicit":true,"key":"MqJ3XjtePu"},{"type":"heading","depth":3,"position":{"start":{"line":157,"column":1},"end":{"line":157,"column":1}},"children":[{"type":"text","value":"3.1 Define a spatial filter","position":{"start":{"line":157,"column":1},"end":{"line":157,"column":1}},"key":"uO4wQHPeRi"}],"identifier":"id-3-1-define-a-spatial-filter","label":"3.1 Define a spatial filter","html_id":"id-3-1-define-a-spatial-filter","implicit":true,"key":"iqg5H68VpX"},{"type":"paragraph","position":{"start":{"line":159,"column":1},"end":{"line":161,"column":1}},"children":[{"type":"text","value":"From the above two plots, it’s clear that the ZTF DR23 Objects catalog covers a much larger area of the sky compared to the Euclid Q1 catalog.\nSo for cross-matching, we can safely pick the Euclid Deep Field North (EDF-N) region that is covered by both catalogs.\nFrom the ","position":{"start":{"line":159,"column":1},"end":{"line":159,"column":1}},"key":"UR4ArttgqR"},{"type":"link","url":"https://irsa.ipac.caltech.edu/data/Euclid/docs/euclid_archive_at_irsa_user_guide.pdf","position":{"start":{"line":159,"column":1},"end":{"line":159,"column":1}},"children":[{"type":"text","value":"Euclid user guide at IRSA","position":{"start":{"line":159,"column":1},"end":{"line":159,"column":1}},"key":"JPvolkZA7s"}],"urlSource":"https://irsa.ipac.caltech.edu/data/Euclid/docs/euclid_archive_at_irsa_user_guide.pdf","key":"PCl8I0O89V"},{"type":"text","value":" Table 1, we identify the following for the EDF-N region:","position":{"start":{"line":159,"column":1},"end":{"line":159,"column":1}},"key":"j4WdfU1PoO"}],"key":"KH3cnyigQl"}],"key":"uYoQWfGEqR"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"euclid_DF_N_center = SkyCoord('17:58:55.9 +66:01:03.7', unit=('hourangle', 'deg'))\neuclid_DF_N_center","key":"sjzOvqbTT4"},{"type":"output","id":"RlMNalLoqz503ljz-9HDZ","data":[{"output_type":"execute_result","execution_count":14,"metadata":{},"data":{"text/plain":{"content":"<SkyCoord (ICRS): (ra, dec) in deg\n    (269.73291667, 66.01769444)>","content_type":"text/plain"}}}],"key":"NenABhR5VK"}],"key":"lMcJBfrzhS"},{"type":"block","children":[],"key":"x4LvEm1AQH"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# euclid_DF_N_radius = 3 * u.deg  # ceil(sqrt(22.9 / pi)) approximate radius to cover almost entire EDF-N\neuclid_DF_N_radius = 0.5 * u.deg  # smaller radius to reduce execution time for this tutorial\neuclid_DF_N_radius","key":"rMCrwAyxah"},{"type":"output","id":"iN4zqR_8QFU8oav5Dex8g","data":[{"output_type":"execute_result","execution_count":15,"metadata":{},"data":{"text/plain":{"content":"<Quantity 0.5 deg>","content_type":"text/plain"},"text/latex":{"content":"$0.5\\mathrm{{}^{\\circ}}$","content_type":"text/latex"}}}],"key":"TGOp3ebAjI"}],"key":"hvk8ZRSCpp"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":174,"column":1},"end":{"line":174,"column":1}},"children":[{"type":"text","value":"Now, using lsdb, we define a cone ","position":{"start":{"line":174,"column":1},"end":{"line":174,"column":1}},"key":"WRrRUy6IQv"},{"type":"link","url":"https://docs.lsdb.io/en/latest/tutorials/region_selection.html#4.-The-Search-object","position":{"start":{"line":174,"column":1},"end":{"line":174,"column":1}},"children":[{"type":"text","value":"search object","position":{"start":{"line":174,"column":1},"end":{"line":174,"column":1}},"key":"Z0zHsQqf0Q"}],"urlSource":"https://docs.lsdb.io/en/latest/tutorials/region_selection.html#4.-The-Search-object","key":"cz5nxsoYL6"},{"type":"text","value":" for this region that can be passed as a spatial filter when querying the catalogs:","position":{"start":{"line":174,"column":1},"end":{"line":174,"column":1}},"key":"LAw9EIIBWc"}],"key":"FwFWu2Zkud"}],"key":"GKNuluwC6z"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"spatial_filter = lsdb.ConeSearch(\n    ra=euclid_DF_N_center.ra.deg, \n    dec=euclid_DF_N_center.dec.deg, \n    radius_arcsec=euclid_DF_N_radius.to(u.arcsec).value\n)","key":"J9ma2HRH1h"},{"type":"output","id":"ENL-REwpy8UABHRNPL_9Q","data":[],"key":"cv9gfyy1J2"}],"key":"Lg7EyVaapy"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":184,"column":1},"end":{"line":184,"column":1}},"children":[{"type":"text","value":"We can overplot this spatial filter on the Euclid catalog’s sky coverage to verify (note we limited the field of view so that we can see the cone better):","position":{"start":{"line":184,"column":1},"end":{"line":184,"column":1}},"key":"xnhfas1b5M"}],"key":"z2PdgEFJSr"}],"key":"lKllUTtLTK"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"euclid_catalog.plot_pixels(fov=(8 * u.deg, 6 * u.deg), center=euclid_DF_N_center)\nspatial_filter.plot(fc=\"#00000000\", ec=\"red\");","key":"oH8ndlM6RC"},{"type":"output","id":"lcizPKJCYfltjttREp-gJ","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1000x500 with 2 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"ad1ac00425c2fec1cb2e6115af70b8d7","path":"/irsa-tutorials/build/ad1ac00425c2fec1cb2e6115af70b8d7.png"}}}],"key":"jTGrlIVm2m"}],"key":"IAMj2YOwfT"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":191,"column":1},"end":{"line":191,"column":1}},"children":[{"type":"text","value":"3.2 Identify columns of interest from the schema","position":{"start":{"line":191,"column":1},"end":{"line":191,"column":1}},"key":"RSf6gpADGh"}],"identifier":"id-3-2-identify-columns-of-interest-from-the-schema","label":"3.2 Identify columns of interest from the schema","html_id":"id-3-2-identify-columns-of-interest-from-the-schema","implicit":true,"key":"KqlO0Oif7h"},{"type":"paragraph","position":{"start":{"line":193,"column":1},"end":{"line":194,"column":1}},"children":[{"type":"text","value":"Before we can define column and row filters for querying any HATS catalog, we need to know what columns are available in that catalog.\nSo let’s inspect the schema of the Euclid Q1 catalog.","position":{"start":{"line":193,"column":1},"end":{"line":193,"column":1}},"key":"BMSSIReDUv"}],"key":"q1ah6DG4D8"},{"type":"paragraph","position":{"start":{"line":196,"column":1},"end":{"line":196,"column":1}},"children":[{"type":"text","value":"Using pyarrow parquet, we can ","position":{"start":{"line":196,"column":1},"end":{"line":196,"column":1}},"key":"O6NgyLQrNf"},{"type":"link","url":"https://arrow.apache.org/docs/python/generated/pyarrow.parquet.read_schema.html#pyarrow.parquet.read_schema","position":{"start":{"line":196,"column":1},"end":{"line":196,"column":1}},"children":[{"type":"text","value":"read the schema","position":{"start":{"line":196,"column":1},"end":{"line":196,"column":1}},"key":"Sj1SjzOlgk"}],"urlSource":"https://arrow.apache.org/docs/python/generated/pyarrow.parquet.read_schema.html#pyarrow.parquet.read_schema","key":"sFFdwUUYCD"},{"type":"text","value":" from the ","position":{"start":{"line":196,"column":1},"end":{"line":196,"column":1}},"key":"XSEfQ3T3C1"},{"type":"inlineCode","value":"_common_metadata","position":{"start":{"line":196,"column":1},"end":{"line":196,"column":1}},"key":"RgaSROj6PT"},{"type":"text","value":" parquet file we identified above (note that we again prefixed the path with ","position":{"start":{"line":196,"column":1},"end":{"line":196,"column":1}},"key":"dYbn8mgF0C"},{"type":"inlineCode","value":"s3://","position":{"start":{"line":196,"column":1},"end":{"line":196,"column":1}},"key":"uVrWblEfRF"},{"type":"text","value":" to indicate that it is an S3 path):","position":{"start":{"line":196,"column":1},"end":{"line":196,"column":1}},"key":"ll9p1yDJ2d"}],"key":"h2rnJjZwbg"}],"key":"YaEDYHTt3U"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"euclid_schema = pq.read_schema(\n    f\"s3://{euclid_q1_bucket}/{euclid_q1_hats_prefix}/{euclid_q1_schema_path}\",\n    filesystem=s3\n)\ntype(euclid_schema)","key":"rExy0fy5Ge"},{"type":"output","id":"j2aynaWe6W0Xo0p-b4DEt","data":[{"output_type":"execute_result","execution_count":18,"metadata":{},"data":{"text/plain":{"content":"pyarrow.lib.Schema","content_type":"text/plain"}}}],"key":"VWM9MPY9CJ"}],"key":"uCGJQZf7y6"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":206,"column":1},"end":{"line":206,"column":1}},"children":[{"type":"text","value":"Since the schema of this catalog is a pyarrow object, let’s convert it to a pandas DataFrame for easier inspection:","position":{"start":{"line":206,"column":1},"end":{"line":206,"column":1}},"key":"xas6JzKdjZ"}],"key":"z7PGPjYSQo"}],"key":"QyhtUeJlDP"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def pq_schema_to_df(schema):\n    \"\"\"Convert a PyArrow schema to a Pandas DataFrame.\"\"\"\n    return pd.DataFrame(\n        [\n            (\n                field.name,\n                str(field.type),\n                field.metadata.get(b\"unit\", b\"\").decode(),\n                field.metadata.get(b\"description\", b\"\").decode()\n            )\n            for field in schema # schema is an iterable of pyarrow fields\n        ],\n        columns=[\"name\", \"type\", \"unit\", \"description\"]\n    )\n\neuclid_schema_df = pq_schema_to_df(euclid_schema)\nlen(euclid_schema_df)","key":"cA7oh2ZBZE"},{"type":"output","id":"6EXH4Uc_PlDbyXOBswemu","data":[{"output_type":"execute_result","execution_count":19,"metadata":{},"data":{"text/plain":{"content":"1594","content_type":"text/plain"}}}],"key":"eFd4YcQgz9"}],"key":"VhYoTvO3CM"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":228,"column":1},"end":{"line":228,"column":1}},"children":[{"type":"text","value":"As we saw above, the Euclid HATS catalog contains 1594 columns in its schema!","position":{"start":{"line":228,"column":1},"end":{"line":228,"column":1}},"key":"Z9oqMkOIHN"}],"key":"GlPE2XfnZJ"},{"type":"paragraph","position":{"start":{"line":230,"column":1},"end":{"line":231,"column":1}},"children":[{"type":"text","value":"The columns at the beginning of this schema (such as “tileid”, “objectid”, “ra”, “dec”) define positions and IDs.\nThese can be useful for our ","position":{"start":{"line":230,"column":1},"end":{"line":230,"column":1}},"key":"Z3PzjoLIFO"},{"type":"strong","position":{"start":{"line":230,"column":1},"end":{"line":230,"column":1}},"children":[{"type":"text","value":"column filters","position":{"start":{"line":230,"column":1},"end":{"line":230,"column":1}},"key":"dEfERiui8G"}],"key":"NFwKfF7g6a"},{"type":"text","value":" — the columns we want to SELECT when querying the catalog.","position":{"start":{"line":230,"column":1},"end":{"line":230,"column":1}},"key":"mdxvBoDRrq"}],"key":"P8iIfpvOgn"},{"type":"paragraph","position":{"start":{"line":233,"column":1},"end":{"line":234,"column":1}},"children":[{"type":"text","value":"We can also filter the schema DataFrame by name, unit, type, etc., to identify columns most relevant for our ","position":{"start":{"line":233,"column":1},"end":{"line":233,"column":1}},"key":"Rc8ce1q4sL"},{"type":"strong","position":{"start":{"line":233,"column":1},"end":{"line":233,"column":1}},"children":[{"type":"text","value":"row filters","position":{"start":{"line":233,"column":1},"end":{"line":233,"column":1}},"key":"u6rnN1A17y"}],"key":"EVweKYzQ4C"},{"type":"text","value":" — WHERE rows satisfy conditions on column values for our query.\nFor example, let’s explore the columns that are part of the PHZ (photometric redshift) catalog to identify photometric redshifts and source types:","position":{"start":{"line":233,"column":1},"end":{"line":233,"column":1}},"key":"F5rKXMi5bu"}],"key":"QVoUl35Ho6"}],"key":"EngV1ZOniP"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"euclid_schema_df[\n    euclid_schema_df[\"name\"].str.startswith(\"phz_\") # phz_ prefix is for PHZ catalog columns in this merged catalog\n    & euclid_schema_df[\"type\"].str.contains(\"int\") # to see flag type columns\n]","key":"yGPh8H4zs6"},{"type":"output","id":"p3Un5pMP44ecvJ-HAakWB","data":[{"output_type":"execute_result","execution_count":20,"metadata":{},"data":{"text/plain":{"content":"                       name   type unit  \\\n728             phz_bias_id  int32        \n729          phz_tom_bin_id  int32        \n730      phz_alt_tom_bin_id  int32        \n731      phz_pos_tom_bin_id  int32        \n773  phz_photometric_system  int32        \n774  phz_phz_classification  int32        \n775           phz_phz_flags  int32        \n\n                                                                                                                                                                      description  \n728                                                                               The identifier to be used for retrieving the bias correction shift from the bias correction map  \n729                                                                                              The identifier of the tomographic bin the source belongs to (Equipopulated-bins)  \n730                                                                                      The identifier of the alternate tomographic bin the source belongs to (Equidistant-bins)  \n731                                                                       The identifier of the photometric clustering tomographic bin the source belongs to (Equipopulated-bins)  \n773                                                                                     Encode the Photometric band configuration (indicating also the number of missing columns)  \n774  Classification flag: |1 if the source is accepted as star, |2 if it is accepted as a galaxy |4 if it is accepted as a QSO |8 if the source is accepted as a globular Cluster  \n775                An integer containing the flags of the PHZ processing. Meaning: 0 => OK, 1 => NNPZ flag: no close neighbor, 10 not VIS detected, 11 missing band, 12 too faint  ","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>type</th>\n      <th>unit</th>\n      <th>description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>728</th>\n      <td>phz_bias_id</td>\n      <td>int32</td>\n      <td></td>\n      <td>The identifier to be used for retrieving the bias correction shift from the bias correction map</td>\n    </tr>\n    <tr>\n      <th>729</th>\n      <td>phz_tom_bin_id</td>\n      <td>int32</td>\n      <td></td>\n      <td>The identifier of the tomographic bin the source belongs to (Equipopulated-bins)</td>\n    </tr>\n    <tr>\n      <th>730</th>\n      <td>phz_alt_tom_bin_id</td>\n      <td>int32</td>\n      <td></td>\n      <td>The identifier of the alternate tomographic bin the source belongs to (Equidistant-bins)</td>\n    </tr>\n    <tr>\n      <th>731</th>\n      <td>phz_pos_tom_bin_id</td>\n      <td>int32</td>\n      <td></td>\n      <td>The identifier of the photometric clustering tomographic bin the source belongs to (Equipopulated-bins)</td>\n    </tr>\n    <tr>\n      <th>773</th>\n      <td>phz_photometric_system</td>\n      <td>int32</td>\n      <td></td>\n      <td>Encode the Photometric band configuration (indicating also the number of missing columns)</td>\n    </tr>\n    <tr>\n      <th>774</th>\n      <td>phz_phz_classification</td>\n      <td>int32</td>\n      <td></td>\n      <td>Classification flag: |1 if the source is accepted as star, |2 if it is accepted as a galaxy |4 if it is accepted as a QSO |8 if the source is accepted as a globular Cluster</td>\n    </tr>\n    <tr>\n      <th>775</th>\n      <td>phz_phz_flags</td>\n      <td>int32</td>\n      <td></td>\n      <td>An integer containing the flags of the PHZ processing. Meaning: 0 =&gt; OK, 1 =&gt; NNPZ flag: no close neighbor, 10 not VIS detected, 11 missing band, 12 too faint</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"SARBWvQ9Zn"}],"key":"Pb0hWSiXwD"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":243,"column":1},"end":{"line":243,"column":1}},"children":[{"type":"text","value":"“phz_phz_median” gives us the median photometric redshift of sources, while “phz_phz_classification” can be used to filter the Euclid catalog to only galaxy-type sources.","position":{"start":{"line":243,"column":1},"end":{"line":243,"column":1}},"key":"smmj1DyDw1"}],"key":"NJ88jKVyv5"},{"type":"paragraph","position":{"start":{"line":245,"column":1},"end":{"line":246,"column":1}},"children":[{"type":"text","value":"You can explore the schema DataFrame further to identify any other columns of interest.\nIt is also useful to go through the description of Euclid Q1 data products and papers that contain different PHZ, MER, etc. catalog tables that are merged in this HATS catalog, which are linked in the ","position":{"start":{"line":245,"column":1},"end":{"line":245,"column":1}},"key":"YgCdBC0jJe"},{"type":"link","url":"https://caltech-ipac.github.io/irsa-tutorials/#todo-add-when-available","position":{"start":{"line":245,"column":1},"end":{"line":245,"column":1}},"children":[{"type":"text","value":"Euclid Q1 HATS Parquet notebook","position":{"start":{"line":245,"column":1},"end":{"line":245,"column":1}},"key":"QK4RQdvREu"}],"urlSource":"https://caltech-ipac.github.io/irsa-tutorials/#todo-add-when-available","key":"RdjA6SU2WT"},{"type":"text","value":".","position":{"start":{"line":245,"column":1},"end":{"line":245,"column":1}},"key":"SGYAWdAMTD"}],"key":"N6FQf5DoEz"}],"key":"Zi3Zxllgz1"},{"type":"block","position":{"start":{"line":248,"column":1},"end":{"line":248,"column":1}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":250,"column":1},"end":{"line":250,"column":1}},"children":[{"type":"text","value":"3.3 Define column filters","position":{"start":{"line":250,"column":1},"end":{"line":250,"column":1}},"key":"gmEYTcExM5"}],"identifier":"id-3-3-define-column-filters","label":"3.3 Define column filters","html_id":"id-3-3-define-column-filters","implicit":true,"key":"NRjTHKzdxQ"}],"key":"ATfmB5YJb5"},{"type":"block","position":{"start":{"line":252,"column":1},"end":{"line":252,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":254,"column":1},"end":{"line":254,"column":1}},"children":[{"type":"text","value":"For this tutorial, the following columns are most relevant to us:","position":{"start":{"line":254,"column":1},"end":{"line":254,"column":1}},"key":"TSnfCNpIYX"}],"key":"XZUt0F5aW6"}],"key":"zy9qUffuAc"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"euclid_columns = euclid_schema_df['name'].iloc[:7].tolist() # the positional and ID columns\neuclid_columns.extend([\n    'phz_phz_median', # median of the photometric redshift PDF\n])","key":"YlDcopjTcT"},{"type":"output","id":"vfEb7DAt3Z_QHWfhP438k","data":[],"key":"iKXus7ZKBx"}],"key":"a3hRLU9Y3a"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":263,"column":1},"end":{"line":263,"column":1}},"children":[{"type":"text","value":"The selected columns with their metadata are:","position":{"start":{"line":263,"column":1},"end":{"line":263,"column":1}},"key":"ZsychJsE6V"}],"key":"GJioLjjhLS"}],"key":"l453Kb9MRf"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"euclid_schema_df[euclid_schema_df[\"name\"].isin(euclid_columns)]","key":"EgnOIB6J3d"},{"type":"output","id":"4ICyZJf29w6oRPG_T7O5C","data":[{"output_type":"execute_result","execution_count":22,"metadata":{},"data":{"text/plain":{"content":"               name    type unit  \\\n0       _healpix_29   int64        \n1       _healpix_19   int64        \n2        _healpix_9   int32        \n3            tileid   int64        \n4         object_id   int64  nan   \n5                ra  double  deg   \n6               dec  double  deg   \n720  phz_phz_median   float        \n\n                                                                   description  \n0                                                HEALPix order 29 pixel index.  \n1                                                HEALPix order 19 pixel index.  \n2                                                 HEALPix order 9 pixel index.  \n3                                                       Euclid MER tile index.  \n4                         Unique ID of the object in the survey, as set by MER  \n5     Source barycenter RA coordinate (SExtractor ALPHA_J2000) decimal degrees  \n6    Source barycenter DEC coordinate (SExtractor DELTA_J2000) decimal degrees  \n720                                                  The median of the PHZ PDF  ","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>type</th>\n      <th>unit</th>\n      <th>description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>_healpix_29</td>\n      <td>int64</td>\n      <td></td>\n      <td>HEALPix order 29 pixel index.</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>_healpix_19</td>\n      <td>int64</td>\n      <td></td>\n      <td>HEALPix order 19 pixel index.</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>_healpix_9</td>\n      <td>int32</td>\n      <td></td>\n      <td>HEALPix order 9 pixel index.</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>tileid</td>\n      <td>int64</td>\n      <td></td>\n      <td>Euclid MER tile index.</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>object_id</td>\n      <td>int64</td>\n      <td>nan</td>\n      <td>Unique ID of the object in the survey, as set by MER</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>ra</td>\n      <td>double</td>\n      <td>deg</td>\n      <td>Source barycenter RA coordinate (SExtractor ALPHA_J2000) decimal degrees</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>dec</td>\n      <td>double</td>\n      <td>deg</td>\n      <td>Source barycenter DEC coordinate (SExtractor DELTA_J2000) decimal degrees</td>\n    </tr>\n    <tr>\n      <th>720</th>\n      <td>phz_phz_median</td>\n      <td>float</td>\n      <td></td>\n      <td>The median of the PHZ PDF</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"Jk1NSeAfFY"}],"key":"W8TjkBCtlY"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":269,"column":1},"end":{"line":269,"column":1}},"children":[{"type":"text","value":"3.4 Define row filters","position":{"start":{"line":269,"column":1},"end":{"line":269,"column":1}},"key":"LPvAXnXO1i"}],"identifier":"id-3-4-define-row-filters","label":"3.4 Define row filters","html_id":"id-3-4-define-row-filters","implicit":true,"key":"LpjjPRhO8z"}],"key":"h7BfJp31sz"},{"type":"block","position":{"start":{"line":271,"column":1},"end":{"line":271,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":273,"column":1},"end":{"line":273,"column":1}},"children":[{"type":"text","value":"To identify the galaxies with quality redshifts in this catalog, the following filters can be applied to the rows (from ","position":{"start":{"line":273,"column":1},"end":{"line":273,"column":1}},"key":"LF3zIkLGWw"},{"type":"link","url":"https://arxiv.org/pdf/2503.15306","position":{"start":{"line":273,"column":1},"end":{"line":273,"column":1}},"children":[{"type":"text","value":"Tucci et al. 2025","position":{"start":{"line":273,"column":1},"end":{"line":273,"column":1}},"key":"IOk11t61li"}],"urlSource":"https://arxiv.org/pdf/2503.15306","key":"joWoYvf1hh"},{"type":"text","value":" section 5.3):","position":{"start":{"line":273,"column":1},"end":{"line":273,"column":1}},"key":"Evs6CFw4Qc"}],"key":"HonrOtItnD"},{"type":"paragraph","position":{"start":{"line":275,"column":1},"end":{"line":276,"column":1}},"children":[{"type":"text","value":"Note that these filters are defined as lists of lists, where each inner list represents a single condition in the format ","position":{"start":{"line":275,"column":1},"end":{"line":275,"column":1}},"key":"zH7kgt94xa"},{"type":"inlineCode","value":"[column_name, operator, value]","position":{"start":{"line":275,"column":1},"end":{"line":275,"column":1}},"key":"Wm4DtHuP19"},{"type":"text","value":" and the conditions are combined using logical AND.\nMore on filters that lsdb supports can be found in its ","position":{"start":{"line":275,"column":1},"end":{"line":275,"column":1}},"key":"k7dWHREQIm"},{"type":"link","url":"https://docs.lsdb.io/en/latest/getting-started.html#performing-filters","position":{"start":{"line":275,"column":1},"end":{"line":275,"column":1}},"children":[{"type":"text","value":"documentation","position":{"start":{"line":275,"column":1},"end":{"line":275,"column":1}},"key":"UpFqf3Tguk"}],"urlSource":"https://docs.lsdb.io/en/latest/getting-started.html#performing-filters","key":"LL6IxFQfZR"},{"type":"text","value":".","position":{"start":{"line":275,"column":1},"end":{"line":275,"column":1}},"key":"ZhuT7GDQra"}],"key":"cFPOm6jWWo"}],"key":"fiy3qJI6XS"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def magnitude_to_flux(magnitude: float) -> float:\n    \"\"\"Convert magnitude to flux following the MER Photometry Cookbook.\"\"\"\n    zeropoint = 23.9\n    flux = 10 ** ((magnitude - zeropoint) / -2.5)\n    return flux\n\ngalaxy_filters = [\n    ['phz_phz_classification', '==', 2], # 2 is for galaxies\n    ['mer_vis_det', '==', 1], # No NIR-only objects\n    ['mer_spurious_flag', '==', 0], # not spurious\n    ['mer_flux_detection_total', '>', magnitude_to_flux(24.5)],  # I < 24.5\n    # lsdb doesn't support column arithmetic in filters yet, so can rather apply the S/N > 5 filter after loading the data\n    # ['mer_flux_detection_total', '/', 'mer_flux_detection_error_total', '>', 5], # I band S/N > 5\n]","key":"G0e8t3y94G"},{"type":"output","id":"VaaMoDAm51PPmjxRvH1Pc","data":[],"key":"Mj2UFhxnME"}],"key":"nwOca2K2ed"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":295,"column":1},"end":{"line":295,"column":1}},"children":[{"type":"text","value":"4. Define filters for querying ZTF DR23 Objects catalog","position":{"start":{"line":295,"column":1},"end":{"line":295,"column":1}},"key":"igofGxdYt3"}],"identifier":"id-4-define-filters-for-querying-ztf-dr23-objects-catalog","label":"4. Define filters for querying ZTF DR23 Objects catalog","html_id":"id-4-define-filters-for-querying-ztf-dr23-objects-catalog","implicit":true,"key":"rxxthXNyMy"},{"type":"paragraph","position":{"start":{"line":297,"column":1},"end":{"line":297,"column":1}},"children":[{"type":"text","value":"Since we are interested in cross-matching ZTF DR23 Objects with the Euclid Q1 catalog, we will use the same spatial filter defined above.","position":{"start":{"line":297,"column":1},"end":{"line":297,"column":1}},"key":"FcNYQc46kP"}],"key":"tHo7zQRwzP"},{"type":"paragraph","position":{"start":{"line":299,"column":1},"end":{"line":299,"column":1}},"children":[{"type":"text","value":"We can define column and row filters for the ZTF catalog based on its schema, similar to the previous section:","position":{"start":{"line":299,"column":1},"end":{"line":299,"column":1}},"key":"QdcMP0ueBW"}],"key":"KhjDybRl8q"}],"key":"QdPRoCq3Ja"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ztf_schema = pq.read_schema(\n    f\"s3://{ztf_bucket}/{ztf_hats_prefix}/{ztf_schema_path}\",\n    filesystem=s3\n)\nztf_schema_df = pq_schema_to_df(ztf_schema)","key":"oPKJiQf3b1"},{"type":"output","id":"L5HMHjS87MvQL6p4bn-eb","data":[],"key":"S3sSgrtZtg"}],"key":"Xa48ddWAFT"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":309,"column":1},"end":{"line":310,"column":1}},"children":[{"type":"text","value":"You can filter the schema further by units, type, etc. to identify other columns of interest.\nIt’s also useful to go through the ","position":{"start":{"line":309,"column":1},"end":{"line":309,"column":1}},"key":"qGeQh5pzeK"},{"type":"link","url":"https://irsa.ipac.caltech.edu/data/ZTF/docs/releases/ztf_release_notes_latest","position":{"start":{"line":309,"column":1},"end":{"line":309,"column":1}},"children":[{"type":"text","value":"ZTF DR23 release notes","position":{"start":{"line":309,"column":1},"end":{"line":309,"column":1}},"key":"ZyA0cc8fOo"}],"urlSource":"https://irsa.ipac.caltech.edu/data/ZTF/docs/releases/ztf_release_notes_latest","key":"oxNRvlfwGL"},{"type":"text","value":" and ","position":{"start":{"line":309,"column":1},"end":{"line":309,"column":1}},"key":"ue3qntzL6K"},{"type":"link","url":"https://irsa.ipac.caltech.edu/data/ZTF/docs/ztf_explanatory_supplement.pdf","position":{"start":{"line":309,"column":1},"end":{"line":309,"column":1}},"children":[{"type":"text","value":"explanatory supplement","position":{"start":{"line":309,"column":1},"end":{"line":309,"column":1}},"key":"JdkNYVrEig"}],"urlSource":"https://irsa.ipac.caltech.edu/data/ZTF/docs/ztf_explanatory_supplement.pdf","key":"SknQtDPolK"},{"type":"text","value":" at IRSA for more details on column selections and caveats.","position":{"start":{"line":309,"column":1},"end":{"line":309,"column":1}},"key":"Fjw1lMDq92"}],"key":"cSyHen2clc"},{"type":"paragraph","position":{"start":{"line":312,"column":1},"end":{"line":312,"column":1}},"children":[{"type":"text","value":"For this tutorial, the following columns are most relevant to us:","position":{"start":{"line":312,"column":1},"end":{"line":312,"column":1}},"key":"dL8xOtdmbb"}],"key":"Q3ZYSTLPRq"}],"key":"gx1CRAkffH"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ztf_columns = ztf_schema_df[\"name\"].tolist()[:6]\nztf_columns.extend([\n    'fid', 'filtercode', \n    'ngoodobsrel',  \n    'chisq', 'magrms', 'meanmag', 'medianabsdev'\n])","key":"zPveb90RF0"},{"type":"output","id":"OGuLDC3fPGOjt1aAhJrUe","data":[],"key":"YGGGkb07jG"}],"key":"IQ7iNyQk9N"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":323,"column":1},"end":{"line":323,"column":1}},"children":[{"type":"text","value":"The rationale for selecting these columns is as follows:","position":{"start":{"line":323,"column":1},"end":{"line":323,"column":1}},"key":"P1bGkRaJFx"}],"key":"Lly40qA4o0"}],"key":"QHwfWWmvK8"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ztf_schema_df[ztf_schema_df.name.isin(ztf_columns)]","key":"yVq2fLYGB6"},{"type":"output","id":"UeczF5K0oR2vIWzqx-GJZ","data":[{"output_type":"execute_result","execution_count":26,"metadata":{},"data":{"text/plain":{"content":"            name    type unit  \\\n0    _healpix_29   int64        \n1    _healpix_19   int64        \n2     _healpix_9   int32        \n3            oid   int64        \n4             ra  double  deg   \n5            dec  double  deg   \n10           fid    int8        \n11    filtercode  string        \n17         chisq   float        \n20        magrms   float  mag   \n23       meanmag   float  mag   \n24  medianabsdev   float  mag   \n44   ngoodobsrel   int32        \n\n                                                                    description  \n0                                                 HEALPix order 29 pixel index.  \n1                                                 HEALPix order 19 pixel index.  \n2                                                  HEALPix order 9 pixel index.  \n3                                                      Unique object identifier  \n4                                                        Object Right Ascension  \n5                                                            Object Declination  \n10                                   Filter identifier (1 = zg; 2 = zr; 3 = zi)  \n11                                                     Filter code (zg, zr, zi)  \n17                                      Chi-square metric using nobs detections  \n20                             Root Mean Squared deviation over nobs magnitudes  \n23                                          Mean magnitude over nobs detections  \n24                 Median absolute deviation in magnitudes over nobs detections  \n44  Number of epochal detections in this release not associated with bad pixels  ","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>type</th>\n      <th>unit</th>\n      <th>description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>_healpix_29</td>\n      <td>int64</td>\n      <td></td>\n      <td>HEALPix order 29 pixel index.</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>_healpix_19</td>\n      <td>int64</td>\n      <td></td>\n      <td>HEALPix order 19 pixel index.</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>_healpix_9</td>\n      <td>int32</td>\n      <td></td>\n      <td>HEALPix order 9 pixel index.</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>oid</td>\n      <td>int64</td>\n      <td></td>\n      <td>Unique object identifier</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>ra</td>\n      <td>double</td>\n      <td>deg</td>\n      <td>Object Right Ascension</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>dec</td>\n      <td>double</td>\n      <td>deg</td>\n      <td>Object Declination</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>fid</td>\n      <td>int8</td>\n      <td></td>\n      <td>Filter identifier (1 = zg; 2 = zr; 3 = zi)</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>filtercode</td>\n      <td>string</td>\n      <td></td>\n      <td>Filter code (zg, zr, zi)</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>chisq</td>\n      <td>float</td>\n      <td></td>\n      <td>Chi-square metric using nobs detections</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>magrms</td>\n      <td>float</td>\n      <td>mag</td>\n      <td>Root Mean Squared deviation over nobs magnitudes</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>meanmag</td>\n      <td>float</td>\n      <td>mag</td>\n      <td>Mean magnitude over nobs detections</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>medianabsdev</td>\n      <td>float</td>\n      <td>mag</td>\n      <td>Median absolute deviation in magnitudes over nobs detections</td>\n    </tr>\n    <tr>\n      <th>44</th>\n      <td>ngoodobsrel</td>\n      <td>int32</td>\n      <td></td>\n      <td>Number of epochal detections in this release not associated with bad pixels</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"xHzcrZxECH"}],"key":"kAW2npdyVd"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":329,"column":1},"end":{"line":329,"column":1}},"children":[{"type":"text","value":"For a quality cut, we apply the following filter on the number of good epochs (from ","position":{"start":{"line":329,"column":1},"end":{"line":329,"column":1}},"key":"nsSTGsNoxC"},{"type":"link","url":"https://academic.oup.com/mnras/article/505/2/2954/6284767","position":{"start":{"line":329,"column":1},"end":{"line":329,"column":1}},"children":[{"type":"text","value":"Coughlin et al. 2021","position":{"start":{"line":329,"column":1},"end":{"line":329,"column":1}},"key":"BCYr8ZTWxG"}],"urlSource":"https://academic.oup.com/mnras/article/505/2/2954/6284767","key":"Zi2aDn22c1"},{"type":"text","value":" section 2):","position":{"start":{"line":329,"column":1},"end":{"line":329,"column":1}},"key":"bdy3fGor1G"}],"key":"jAzSw0OAaF"}],"key":"mzEZebm0m5"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"quality_filters = [\n    [\"ngoodobsrel\", \">\", 50]\n]","key":"xRXsF53JBR"},{"type":"output","id":"QfDAmVgU9bNV-yHm6Xi7a","data":[],"key":"rLJe4DfrTh"}],"key":"hYIfY5EHnD"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":337,"column":1},"end":{"line":337,"column":1}},"children":[{"type":"text","value":"5. Crossmatch: Euclid Q1 x ZTF DR23 Objects","position":{"start":{"line":337,"column":1},"end":{"line":337,"column":1}},"key":"JeRkQfJmtb"}],"identifier":"id-5-crossmatch-euclid-q1-x-ztf-dr23-objects","label":"5. Crossmatch: Euclid Q1 x ZTF DR23 Objects","html_id":"id-5-crossmatch-euclid-q1-x-ztf-dr23-objects","implicit":true,"key":"g4hZFtkp4g"},{"type":"paragraph","position":{"start":{"line":339,"column":1},"end":{"line":339,"column":1}},"children":[{"type":"text","value":"Now that we have defined the spatial, column, and row filters for both catalogs, we can use lsdb to perform the crossmatch.","position":{"start":{"line":339,"column":1},"end":{"line":339,"column":1}},"key":"PndaI72rel"}],"key":"iawDGnIdKL"}],"key":"Uvpr7QgtCY"},{"type":"block","position":{"start":{"line":341,"column":1},"end":{"line":341,"column":1}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":343,"column":1},"end":{"line":343,"column":1}},"children":[{"type":"text","value":"5.1 Create crossmatch query using the filters","position":{"start":{"line":343,"column":1},"end":{"line":343,"column":1}},"key":"aACLwfEmKr"}],"identifier":"id-5-1-create-crossmatch-query-using-the-filters","label":"5.1 Create crossmatch query using the filters","html_id":"id-5-1-create-crossmatch-query-using-the-filters","implicit":true,"key":"eoBejQ3u2R"},{"type":"paragraph","position":{"start":{"line":345,"column":1},"end":{"line":345,"column":1}},"children":[{"type":"text","value":"Following lsdb’s documentation on ","position":{"start":{"line":345,"column":1},"end":{"line":345,"column":1}},"key":"bs1GnNIQf5"},{"type":"link","url":"https://docs.lsdb.io/en/latest/getting-started.html#performing-filters","position":{"start":{"line":345,"column":1},"end":{"line":345,"column":1}},"children":[{"type":"text","value":"performing filters","position":{"start":{"line":345,"column":1},"end":{"line":345,"column":1}},"key":"tIxVyzpGED"}],"urlSource":"https://docs.lsdb.io/en/latest/getting-started.html#performing-filters","key":"NuH2lL3rTp"},{"type":"text","value":", we open the Euclid Q1 catalog with the defined spatial, column, and row filters:","position":{"start":{"line":345,"column":1},"end":{"line":345,"column":1}},"key":"Vqt1ssnQDP"}],"key":"EK0ABdn1HU"}],"key":"Fv5jZIV8yf"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"euclid_cone = lsdb.open_catalog(\n    f\"s3://{euclid_q1_bucket}/{euclid_q1_hats_prefix}\",\n    columns=euclid_columns,\n    search_filter=spatial_filter,\n    filters=galaxy_filters\n)\neuclid_cone","key":"wHs8ReFGXM"},{"type":"output","id":"Ast5yreJd9P5h12T5Mx0S","data":[{"output_type":"execute_result","execution_count":28,"metadata":{},"data":{"text/plain":{"content":"Dask NestedFrame Structure:\n                        _healpix_19      _healpix_9          tileid       object_id               ra              dec  phz_phz_median\nnpartitions=6                                                                                                                        \n720364834146746368   int64[pyarrow]  int32[pyarrow]  int64[pyarrow]  int64[pyarrow]  double[pyarrow]  double[pyarrow]  float[pyarrow]\n720505571635101696              ...             ...             ...             ...              ...              ...             ...\n...                             ...             ...             ...             ...              ...              ...             ...\n1128855394098085888             ...             ...             ...             ...              ...              ...             ...\n1128925762842263552             ...             ...             ...             ...              ...              ...             ...\nDask Name: search_points, 5 expressions\nExpr=MapPartitions(search_points)","content_type":"text/plain"},"text/html":{"content":"<div><strong>lsdb Catalog Euclid_Q1_Merged_Objects:</strong></div><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>_healpix_19</th>\n      <th>_healpix_9</th>\n      <th>tileid</th>\n      <th>object_id</th>\n      <th>ra</th>\n      <th>dec</th>\n      <th>phz_phz_median</th>\n    </tr>\n    <tr>\n      <th>npartitions=6</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Order: 6, Pixel: 10237</th>\n      <td>int64[pyarrow]</td>\n      <td>int32[pyarrow]</td>\n      <td>int64[pyarrow]</td>\n      <td>int64[pyarrow]</td>\n      <td>double[pyarrow]</td>\n      <td>double[pyarrow]</td>\n      <td>float[pyarrow]</td>\n    </tr>\n    <tr>\n      <th>Order: 6, Pixel: 10239</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>Order: 6, Pixel: 15359</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>Order: 6, Pixel: 16042</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n  </tbody>\n</table>\n</div><div>7 out of 1593 available columns in the catalog have been loaded <strong>lazily</strong>, meaning no data has been read, only the catalog schema</div>","content_type":"text/html"}}}],"key":"yhs4dShRuA"}],"key":"cQ4NnlhoG9"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":357,"column":1},"end":{"line":359,"column":1}},"children":[{"type":"text","value":"Notice how the number of partitions reduced from 114 (in section 2) to only a few partitions that are within the spatial filter.\nThis allows LSDB to avoid loading unused parts of the catalog.\nAlso, we see only the columns we selected in the column filters.","position":{"start":{"line":357,"column":1},"end":{"line":357,"column":1}},"key":"S2CN0azuiQ"}],"key":"Wu4IbL2kBt"},{"type":"paragraph","position":{"start":{"line":361,"column":1},"end":{"line":361,"column":1}},"children":[{"type":"text","value":"Now, similarly, we open the ZTF DR23 Objects catalog with its defined filters:","position":{"start":{"line":361,"column":1},"end":{"line":361,"column":1}},"key":"wPs3ZBFKnC"}],"key":"grfNzhvQmP"}],"key":"c6bZ3SrFR6"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ztf_cone = lsdb.open_catalog(\n    f\"s3://{ztf_bucket}/{ztf_hats_prefix}\",\n    columns=ztf_columns,\n    search_filter=spatial_filter,\n    filters=quality_filters\n)\nztf_cone","key":"qJrX112rWd"},{"type":"output","id":"EZSEGZnUgbjuHr8DgBWjv","data":[{"output_type":"execute_result","execution_count":29,"metadata":{},"data":{"text/plain":{"content":"Dask NestedFrame Structure:\n                        _healpix_19      _healpix_9             oid               ra              dec            fid       filtercode     ngoodobsrel           chisq          magrms         meanmag    medianabsdev\nnpartitions=4                                                                                                                                                                                                        \n719450040472436736   int64[pyarrow]  int32[pyarrow]  int64[pyarrow]  double[pyarrow]  double[pyarrow]  int8[pyarrow]  string[pyarrow]  int32[pyarrow]  float[pyarrow]  float[pyarrow]  float[pyarrow]  float[pyarrow]\n816277432460902400              ...             ...             ...              ...              ...            ...              ...             ...             ...             ...             ...             ...\n1079738010662076416             ...             ...             ...              ...              ...            ...              ...             ...             ...             ...             ...             ...\n1128151706656309248             ...             ...             ...              ...              ...            ...              ...             ...             ...             ...             ...             ...\n1129277606563151872             ...             ...             ...              ...              ...            ...              ...             ...             ...             ...             ...             ...\nDask Name: search_points, 5 expressions\nExpr=MapPartitions(search_points)","content_type":"text/plain"},"text/html":{"content":"<div><strong>lsdb Catalog ZTF_DR23_Objects:</strong></div><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>_healpix_19</th>\n      <th>_healpix_9</th>\n      <th>oid</th>\n      <th>ra</th>\n      <th>dec</th>\n      <th>fid</th>\n      <th>filtercode</th>\n      <th>ngoodobsrel</th>\n      <th>chisq</th>\n      <th>magrms</th>\n      <th>meanmag</th>\n      <th>medianabsdev</th>\n    </tr>\n    <tr>\n      <th>npartitions=4</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Order: 4, Pixel: 639</th>\n      <td>int64[pyarrow]</td>\n      <td>int32[pyarrow]</td>\n      <td>int64[pyarrow]</td>\n      <td>double[pyarrow]</td>\n      <td>double[pyarrow]</td>\n      <td>int8[pyarrow]</td>\n      <td>string[pyarrow]</td>\n      <td>int32[pyarrow]</td>\n      <td>float[pyarrow]</td>\n      <td>float[pyarrow]</td>\n      <td>float[pyarrow]</td>\n      <td>float[pyarrow]</td>\n    </tr>\n    <tr>\n      <th>Order: 4, Pixel: 725</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>Order: 4, Pixel: 959</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>Order: 4, Pixel: 1002</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n  </tbody>\n</table>\n</div><div>12 out of 76 available columns in the catalog have been loaded <strong>lazily</strong>, meaning no data has been read, only the catalog schema</div>","content_type":"text/html"}}}],"key":"SJXKTV7MVM"}],"key":"a2KW0LlNGn"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":373,"column":1},"end":{"line":373,"column":1}},"children":[{"type":"text","value":"We see a similar reduction in the number of partitions for this catalog as well, and our column selection is applied.","position":{"start":{"line":373,"column":1},"end":{"line":373,"column":1}},"key":"Lc3GDk92AX"}],"key":"xIfYzfc3K5"},{"type":"paragraph","position":{"start":{"line":375,"column":1},"end":{"line":378,"column":1}},"children":[{"type":"text","value":"Now we can use lsdb’s ","position":{"start":{"line":375,"column":1},"end":{"line":375,"column":1}},"key":"JYHci2HLEt"},{"type":"link","url":"https://docs.lsdb.io/en/latest/tutorials/pre_executed/crossmatching.html#2.-Perform-the-crossmatch-on-the-small-catalogs","position":{"start":{"line":375,"column":1},"end":{"line":375,"column":1}},"children":[{"type":"text","value":"crossmatch functionality","position":{"start":{"line":375,"column":1},"end":{"line":375,"column":1}},"key":"RKvHsTuYo9"}],"urlSource":"https://docs.lsdb.io/en/latest/tutorials/pre_executed/crossmatching.html#2.-Perform-the-crossmatch-on-the-small-catalogs","key":"cGJ3g1VFhj"},{"type":"text","value":" to plan a crossmatch between these two filtered catalogs.\nNote that the order of crossmatch matters: lsdb’s algorithm takes each object in the left catalog and finds the closest spatial match from the right catalog.\nSince Euclid is denser than ZTF, we put it on the left side of the crossmatch to maximize the number of matches.\nFor more details on the parameters, refer to the documentation linked.","position":{"start":{"line":375,"column":1},"end":{"line":375,"column":1}},"key":"bVPxc2Yy6M"}],"key":"LDVZHldtVJ"},{"type":"admonition","kind":"note","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Note","key":"HdjHHWm27k"}],"key":"dOu4hX6itr"},{"type":"paragraph","position":{"start":{"line":381,"column":1},"end":{"line":381,"column":1}},"children":[{"type":"text","value":"Since ZTF objects are defined per band, setting ","position":{"start":{"line":381,"column":1},"end":{"line":381,"column":1}},"key":"YHPinzNkac"},{"type":"inlineCode","value":"n_neighbors=1","position":{"start":{"line":381,"column":1},"end":{"line":381,"column":1}},"key":"WgokfTFk4V"},{"type":"text","value":" means this is only going to return data in one ZTF band for each Euclid object. This is done for simplicity of analysing the crossmatched results in subsequent sections but you can increase ","position":{"start":{"line":381,"column":1},"end":{"line":381,"column":1}},"key":"CzabR6oFdV"},{"type":"inlineCode","value":"n_neighbors","position":{"start":{"line":381,"column":1},"end":{"line":381,"column":1}},"key":"p9I83IUC1X"},{"type":"text","value":" to get data in multiple ZTF bands.","position":{"start":{"line":381,"column":1},"end":{"line":381,"column":1}},"key":"JEWswVbYHB"}],"key":"iFRJBjhwXX"}],"key":"YA0qphDHO7"}],"key":"n1hKAADNrM"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"euclid_x_ztf = euclid_cone.crossmatch(\n    ztf_cone,\n    suffixes=(\"_euclid\", \"_ztf\"), # to distinguish columns from the two catalogs\n    n_neighbors=1, # default is 1 too, can be tweaked\n    radius_arcsec=1  # default is 1 arcsec too, can be tweaked\n)\neuclid_x_ztf","key":"iJncDdK6oa"},{"type":"output","id":"i_JgNYZMNTV_Je-AI3FyA","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/work/irsa-tutorials/irsa-tutorials/.tox/py312-buildhtml/lib/python3.12/site-packages/lsdb/catalog/catalog.py:256: FutureWarning: The default suffix behavior will change from applying suffixes to all columns to only applying suffixes to overlapping columns in a future release.To maintain the current behavior, explicitly set `suffix_method='all_columns'`. To change to the new behavior, set `suffix_method='overlapping_columns'`.\n  warnings.warn(\n"},{"output_type":"execute_result","execution_count":30,"metadata":{},"data":{"text/plain":{"content":"Dask NestedFrame Structure:\n                    _healpix_19_euclid _healpix_9_euclid   tileid_euclid object_id_euclid        ra_euclid       dec_euclid phz_phz_median_euclid _healpix_19_ztf  _healpix_9_ztf         oid_ztf           ra_ztf          dec_ztf        fid_ztf   filtercode_ztf ngoodobsrel_ztf       chisq_ztf      magrms_ztf     meanmag_ztf medianabsdev_ztf     _dist_arcsec\nnpartitions=6                                                                                                                                                                                                                                                                                                                                                        \n720364834146746368      int64[pyarrow]    int32[pyarrow]  int64[pyarrow]   int64[pyarrow]  double[pyarrow]  double[pyarrow]        float[pyarrow]  int64[pyarrow]  int32[pyarrow]  int64[pyarrow]  double[pyarrow]  double[pyarrow]  int8[pyarrow]  string[pyarrow]  int32[pyarrow]  float[pyarrow]  float[pyarrow]  float[pyarrow]   float[pyarrow]  double[pyarrow]\n720505571635101696                 ...               ...             ...              ...              ...              ...                   ...             ...             ...             ...              ...              ...            ...              ...             ...             ...             ...             ...              ...              ...\n...                                ...               ...             ...              ...              ...              ...                   ...             ...             ...             ...              ...              ...            ...              ...             ...             ...             ...             ...              ...              ...\n1128855394098085888                ...               ...             ...              ...              ...              ...                   ...             ...             ...             ...              ...              ...            ...              ...             ...             ...             ...             ...              ...              ...\n1128925762842263552                ...               ...             ...              ...              ...              ...                   ...             ...             ...             ...              ...              ...            ...              ...             ...             ...             ...             ...              ...              ...\nDask Name: nestedframe, 3 expressions\nExpr=MapPartitions(NestedFrame)","content_type":"text/plain"},"text/html":{"content":"<div><strong>lsdb Catalog Euclid_Q1_Merged_Objects_x_ZTF_DR23_Objects:</strong></div><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>_healpix_19_euclid</th>\n      <th>_healpix_9_euclid</th>\n      <th>tileid_euclid</th>\n      <th>object_id_euclid</th>\n      <th>ra_euclid</th>\n      <th>dec_euclid</th>\n      <th>phz_phz_median_euclid</th>\n      <th>_healpix_19_ztf</th>\n      <th>_healpix_9_ztf</th>\n      <th>oid_ztf</th>\n      <th>ra_ztf</th>\n      <th>dec_ztf</th>\n      <th>fid_ztf</th>\n      <th>filtercode_ztf</th>\n      <th>ngoodobsrel_ztf</th>\n      <th>chisq_ztf</th>\n      <th>magrms_ztf</th>\n      <th>meanmag_ztf</th>\n      <th>medianabsdev_ztf</th>\n      <th>_dist_arcsec</th>\n    </tr>\n    <tr>\n      <th>npartitions=6</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Order: 6, Pixel: 10237</th>\n      <td>int64[pyarrow]</td>\n      <td>int32[pyarrow]</td>\n      <td>int64[pyarrow]</td>\n      <td>int64[pyarrow]</td>\n      <td>double[pyarrow]</td>\n      <td>double[pyarrow]</td>\n      <td>float[pyarrow]</td>\n      <td>int64[pyarrow]</td>\n      <td>int32[pyarrow]</td>\n      <td>int64[pyarrow]</td>\n      <td>double[pyarrow]</td>\n      <td>double[pyarrow]</td>\n      <td>int8[pyarrow]</td>\n      <td>string[pyarrow]</td>\n      <td>int32[pyarrow]</td>\n      <td>float[pyarrow]</td>\n      <td>float[pyarrow]</td>\n      <td>float[pyarrow]</td>\n      <td>float[pyarrow]</td>\n      <td>double[pyarrow]</td>\n    </tr>\n    <tr>\n      <th>Order: 6, Pixel: 10239</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>Order: 6, Pixel: 15359</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>Order: 6, Pixel: 16042</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n  </tbody>\n</table>\n</div><div>20 out of 20 available columns in the catalog have been loaded <strong>lazily</strong>, meaning no data has been read, only the catalog schema</div>","content_type":"text/html"}}}],"key":"wZfg8oA5ZW"}],"key":"jQbCkG8veA"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":394,"column":1},"end":{"line":395,"column":1}},"children":[{"type":"text","value":"Note how the resulting crossmatched catalog contains columns from both catalogs with the suffixes we passed.\nAs we noticed when opening the catalog, this created a crossmatch catalog object lazily but did not execute the crossmatch.","position":{"start":{"line":394,"column":1},"end":{"line":394,"column":1}},"key":"m3uf2wwwHW"}],"key":"tAdmCr20GP"}],"key":"NnwkUwAxSR"},{"type":"block","position":{"start":{"line":397,"column":1},"end":{"line":397,"column":1}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":399,"column":1},"end":{"line":399,"column":1}},"children":[{"type":"text","value":"5.2 Execute the query and load data","position":{"start":{"line":399,"column":1},"end":{"line":399,"column":1}},"key":"SZr0p3DTKT"}],"identifier":"id-5-2-execute-the-query-and-load-data","label":"5.2 Execute the query and load data","html_id":"id-5-2-execute-the-query-and-load-data","implicit":true,"key":"tyDF081Izr"},{"type":"paragraph","position":{"start":{"line":401,"column":1},"end":{"line":402,"column":1}},"children":[{"type":"text","value":"Now we can run the crossmatch query we have been planning so far by using the ","position":{"start":{"line":401,"column":1},"end":{"line":401,"column":1}},"key":"HxtBaARpqh"},{"type":"inlineCode","value":"compute()","position":{"start":{"line":401,"column":1},"end":{"line":401,"column":1}},"key":"yqW6FhaEFV"},{"type":"text","value":" method of the crossmatch catalog object, which will perform all the tasks and return the result as a DataFrame.\nlsdb utilizes ","position":{"start":{"line":401,"column":1},"end":{"line":401,"column":1}},"key":"uUicBq3fSL"},{"type":"link","url":"https://docs.dask.org/en/stable/","position":{"start":{"line":401,"column":1},"end":{"line":401,"column":1}},"children":[{"type":"text","value":"Dask","position":{"start":{"line":401,"column":1},"end":{"line":401,"column":1}},"key":"JH50J2cZBr"}],"urlSource":"https://docs.dask.org/en/stable/","key":"aIPTVK9qbG"},{"type":"text","value":" to parallelize the tasks on different partitions, so we need to create a Dask client to manage the resources (and track progress) for the scope of this computation:","position":{"start":{"line":401,"column":1},"end":{"line":401,"column":1}},"key":"YFn7EtxtVL"}],"key":"dY0VIAnqa0"}],"key":"qP8rZPwPte"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def get_nworkers(catalog):\n    return min(os.cpu_count(), catalog.npartitions + 1)\n\nwith Client(n_workers=get_nworkers(euclid_x_ztf), \n            threads_per_worker=2, \n            memory_limit='auto') as client:\n    print(f\"This may take more than a few minutes to complete. You can monitor progress in Dask dashboard at {client.dashboard_link}\")\n    euclid_x_ztf_df = euclid_x_ztf.compute() # this will load the data into memory finally","key":"WelzfnBRLg"},{"type":"output","id":"QIR1cKaLnB1_Wa4NCzsLi","data":[{"output_type":"stream","name":"stdout","text":"This may take more than a few minutes to complete. You can monitor progress in Dask dashboard at http://127.0.0.1:8787/status\n"}],"key":"BT4HVUnKhF"}],"key":"A1Z35lbXUN"},{"type":"block","children":[],"key":"cL5SrYkqvv"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"euclid_x_ztf_df","key":"CIAFpESGHn"},{"type":"output","id":"l9wCOqyEgM83mu3Cubuso","data":[{"output_type":"execute_result","execution_count":32,"metadata":{},"data":{"text/plain":{"content":"                     _healpix_19_euclid  _healpix_9_euclid  tileid_euclid  \\\n_healpix_29                                                                 \n720434593244322473         687059968227             655231      102158891   \n720432428583862814         687057903846             655229      102158891   \n720434481587813232         687059861743             655231      102158891   \n720432832290153985         687058288850             655229      102158891   \n720432970313122903         687058420479             655229      102158891   \n720434484456996712         687059864480             655231      102158891   \n720432835157060433         687058291585             655229      102158891   \n720432420190003514         687057895841             655229      102158891   \n720435031368747437         687060386055             655231      102158891   \n...                                 ...                ...            ...   \n1128893524233377784       1076596760018            1026722      102159487   \n1128893589791736967       1076596822540            1026722      102159487   \n1128893569383796065       1076596803077            1026722      102159487   \n1128893542038473039       1076596776998            1026722      102159487   \n1128893540953147706       1076596775963            1026722      102159487   \n1128893538206451784       1076596773344            1026722      102159487   \n1128893376581602470       1076596619207            1026722      102159193   \n1128893337709122935       1076596582135            1026722      102159193   \n1128893340254188261       1076596584562            1026722      102159193   \n\n                        object_id_euclid   ra_euclid  dec_euclid  \\\n_healpix_29                                                        \n720434593244322473   2699181571656108156  269.918157   65.610816   \n720432428583862814   2699187793655290965  269.918779   65.529097   \n720434481587813232   2699189269655936829  269.918927   65.593683   \n720432832290153985   2699194755655464972  269.919476   65.546497   \n720432970313122903   2699203905655721348  269.920391   65.572135   \n720434484456996712   2699204552655981362  269.920455   65.598136   \n720432835157060433   2699209485655511218  269.920949   65.551122   \n720432420190003514   2699210741655237953  269.921074   65.523795   \n720435031368747437   2699214091656398506  269.921409   65.639851   \n...                                  ...         ...         ...   \n1128893524233377784  2707275041662719928  270.727504   66.271993   \n1128893589791736967  2707360491662878475  270.736049   66.287848   \n1128893569383796065  2707361465662732069  270.736147   66.273207   \n1128893542038473039  2707612776662634595  270.761278    66.26346   \n1128893540953147706  2707730517662693744  270.773052   66.269374   \n1128893538206451784  2707809557662660563  270.780956   66.266056   \n1128893376581602470  2707976353662411561  270.797635   66.241156   \n1128893337709122935  2708392307662229925  270.839231   66.222993   \n1128893340254188261  2708472558662234858  270.847256   66.223486   \n\n                     phz_phz_median_euclid  _healpix_19_ztf  _healpix_9_ztf  \\\n_healpix_29                                                                   \n720434593244322473                     0.2     687059968227          655231   \n720432428583862814                    0.27     687057903846          655229   \n720434481587813232                    0.73     687059862089          655231   \n720432832290153985                    0.15     687058288850          655229   \n720432970313122903                    0.25     687058420479          655229   \n720434484456996712                     0.2     687059864480          655231   \n720432835157060433                    0.36     687058291588          655229   \n720432420190003514                    0.36     687057895842          655229   \n720435031368747437                     0.1     687060386055          655231   \n...                                    ...              ...             ...   \n1128893524233377784                   0.32    1076596760019         1026722   \n1128893589791736967                   0.43    1076596822537         1026722   \n1128893569383796065                   0.32    1076596803077         1026722   \n1128893542038473039                   0.29    1076596776999         1026722   \n1128893540953147706                   0.01    1076596775963         1026722   \n1128893538206451784                   0.47    1076596773323         1026722   \n1128893376581602470                    0.4    1076596619206         1026722   \n1128893337709122935                   0.59    1076596582134         1026722   \n1128893340254188261                   0.03    1076596584563         1026722   \n\n                              oid_ztf      ra_ztf    dec_ztf  fid_ztf  \\\n_healpix_29                                                             \n720434593244322473    826215200002321  269.918125   65.61082        2   \n720432428583862814    826215200031991  269.918892  65.529095        2   \n720434481587813232    848302400011626  269.918333  65.593788        3   \n720432832290153985    826215200011172  269.919267   65.54643        2   \n720432970313122903    848202400009734  269.920497  65.572115        2   \n720434484456996712    848202400022812  269.920449   65.59814        2   \n720432835157060433    826215200017597  269.921348   65.55124        2   \n720432420190003514    826215200022643  269.920704  65.523755        2   \n720435031368747437    848302400025079  269.921389   65.63984        3   \n...                               ...         ...        ...      ...   \n1128893524233377784   848201300011194  270.727673  66.272057        2   \n1128893589791736967   848201300001262  270.736013  66.287832        2   \n1128893569383796065   848201300001438   270.73629  66.273238        2   \n1128893542038473039   848201300001540  270.761399  66.263474        2   \n1128893540953147706  1857212300002383  270.773034  66.269382        2   \n1128893538206451784   848201300001497  270.781189  66.266031        2   \n1128893376581602470   848201300001788  270.797594  66.241162        2   \n1128893337709122935   848201300001975  270.839017  66.222907        2   \n1128893340254188261   848201300001966  270.847261  66.223523        2   \n\n                    filtercode_ztf  ngoodobsrel_ztf  chisq_ztf  magrms_ztf  \\\n_healpix_29                                                                  \n720434593244322473              zr              957   0.963843    0.142436   \n720432428583862814              zr               90   1.132518    0.316141   \n720434481587813232              zi              223   1.083044    0.085483   \n720432832290153985              zr               92   0.833866    0.237722   \n720432970313122903              zr              223   1.029616    0.264355   \n720434484456996712              zr             1041   0.971803    0.141235   \n720432835157060433              zr               66   1.291853    0.350705   \n720432420190003514              zr               82    1.10932    0.283498   \n720435031368747437              zi              235   1.307203    0.099071   \n...                            ...              ...        ...         ...   \n1128893524233377784             zr              172   0.957406    0.234242   \n1128893589791736967             zr              536   0.968066    0.219642   \n1128893569383796065             zr              347   0.939984    0.236459   \n1128893542038473039             zr              400    0.92098    0.217024   \n1128893540953147706             zr               53   1.208119    0.017946   \n1128893538206451784             zr              196   1.018292    0.256665   \n1128893376581602470             zr              599   0.958596    0.210892   \n1128893337709122935             zr               61   1.336956    0.333995   \n1128893340254188261             zr               83    1.09015      0.3153   \n\n                     meanmag_ztf  medianabsdev_ztf  _dist_arcsec  \n_healpix_29                                                       \n720434593244322473     20.150564          0.087977      0.050941  \n720432428583862814     21.188622          0.187522      0.168698  \n720434481587813232     19.007387          0.054602      0.961264  \n720432832290153985     21.323473           0.14329      0.393347  \n720432970313122903     21.137856           0.15752      0.173815  \n720434484456996712     20.038595          0.082394      0.017943  \n720432835157060433      21.23908          0.217272      0.732231  \n720432420190003514     21.253254          0.190222      0.570194  \n720435031368747437     18.976027          0.064419      0.047905  \n...                          ...               ...           ...  \n1128893524233377784    21.202761          0.160785      0.334972  \n1128893589791736967    20.804783           0.13789      0.075775  \n1128893569383796065    21.124443          0.153017      0.236522  \n1128893542038473039      21.0543          0.145107      0.183349  \n1128893540953147706    16.642914          0.011663      0.037508  \n1128893538206451784     21.14094          0.167229      0.350357  \n1128893376581602470    20.752556          0.132805      0.064059  \n1128893337709122935    21.316973          0.234939      0.436674  \n1128893340254188261    21.287346          0.189821      0.132318  \n\n[4833 rows x 20 columns]","content_type":"text/plain"},"text/html":{"content":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>_healpix_19_euclid</th>\n      <th>_healpix_9_euclid</th>\n      <th>tileid_euclid</th>\n      <th>object_id_euclid</th>\n      <th>ra_euclid</th>\n      <th>dec_euclid</th>\n      <th>phz_phz_median_euclid</th>\n      <th>_healpix_19_ztf</th>\n      <th>_healpix_9_ztf</th>\n      <th>oid_ztf</th>\n      <th>ra_ztf</th>\n      <th>dec_ztf</th>\n      <th>fid_ztf</th>\n      <th>filtercode_ztf</th>\n      <th>ngoodobsrel_ztf</th>\n      <th>chisq_ztf</th>\n      <th>magrms_ztf</th>\n      <th>meanmag_ztf</th>\n      <th>medianabsdev_ztf</th>\n      <th>_dist_arcsec</th>\n    </tr>\n    <tr>\n      <th>_healpix_29</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>720434593244322473</th>\n      <td>687059968227</td>\n      <td>655231</td>\n      <td>102158891</td>\n      <td>2699181571656108156</td>\n      <td>269.918157</td>\n      <td>65.610816</td>\n      <td>0.2</td>\n      <td>687059968227</td>\n      <td>655231</td>\n      <td>826215200002321</td>\n      <td>269.918125</td>\n      <td>65.61082</td>\n      <td>2</td>\n      <td>zr</td>\n      <td>957</td>\n      <td>0.963843</td>\n      <td>0.142436</td>\n      <td>20.150564</td>\n      <td>0.087977</td>\n      <td>0.050941</td>\n    </tr>\n    <tr>\n      <th>720432428583862814</th>\n      <td>687057903846</td>\n      <td>655229</td>\n      <td>102158891</td>\n      <td>2699187793655290965</td>\n      <td>269.918779</td>\n      <td>65.529097</td>\n      <td>0.27</td>\n      <td>687057903846</td>\n      <td>655229</td>\n      <td>826215200031991</td>\n      <td>269.918892</td>\n      <td>65.529095</td>\n      <td>2</td>\n      <td>zr</td>\n      <td>90</td>\n      <td>1.132518</td>\n      <td>0.316141</td>\n      <td>21.188622</td>\n      <td>0.187522</td>\n      <td>0.168698</td>\n    </tr>\n    <tr>\n      <th>720434481587813232</th>\n      <td>687059861743</td>\n      <td>655231</td>\n      <td>102158891</td>\n      <td>2699189269655936829</td>\n      <td>269.918927</td>\n      <td>65.593683</td>\n      <td>0.73</td>\n      <td>687059862089</td>\n      <td>655231</td>\n      <td>848302400011626</td>\n      <td>269.918333</td>\n      <td>65.593788</td>\n      <td>3</td>\n      <td>zi</td>\n      <td>223</td>\n      <td>1.083044</td>\n      <td>0.085483</td>\n      <td>19.007387</td>\n      <td>0.054602</td>\n      <td>0.961264</td>\n    </tr>\n    <tr>\n      <th>720432832290153985</th>\n      <td>687058288850</td>\n      <td>655229</td>\n      <td>102158891</td>\n      <td>2699194755655464972</td>\n      <td>269.919476</td>\n      <td>65.546497</td>\n      <td>0.15</td>\n      <td>687058288850</td>\n      <td>655229</td>\n      <td>826215200011172</td>\n      <td>269.919267</td>\n      <td>65.54643</td>\n      <td>2</td>\n      <td>zr</td>\n      <td>92</td>\n      <td>0.833866</td>\n      <td>0.237722</td>\n      <td>21.323473</td>\n      <td>0.14329</td>\n      <td>0.393347</td>\n    </tr>\n    <tr>\n      <th>720432970313122903</th>\n      <td>687058420479</td>\n      <td>655229</td>\n      <td>102158891</td>\n      <td>2699203905655721348</td>\n      <td>269.920391</td>\n      <td>65.572135</td>\n      <td>0.25</td>\n      <td>687058420479</td>\n      <td>655229</td>\n      <td>848202400009734</td>\n      <td>269.920497</td>\n      <td>65.572115</td>\n      <td>2</td>\n      <td>zr</td>\n      <td>223</td>\n      <td>1.029616</td>\n      <td>0.264355</td>\n      <td>21.137856</td>\n      <td>0.15752</td>\n      <td>0.173815</td>\n    </tr>\n    <tr>\n      <th>720434484456996712</th>\n      <td>687059864480</td>\n      <td>655231</td>\n      <td>102158891</td>\n      <td>2699204552655981362</td>\n      <td>269.920455</td>\n      <td>65.598136</td>\n      <td>0.2</td>\n      <td>687059864480</td>\n      <td>655231</td>\n      <td>848202400022812</td>\n      <td>269.920449</td>\n      <td>65.59814</td>\n      <td>2</td>\n      <td>zr</td>\n      <td>1041</td>\n      <td>0.971803</td>\n      <td>0.141235</td>\n      <td>20.038595</td>\n      <td>0.082394</td>\n      <td>0.017943</td>\n    </tr>\n    <tr>\n      <th>720432835157060433</th>\n      <td>687058291585</td>\n      <td>655229</td>\n      <td>102158891</td>\n      <td>2699209485655511218</td>\n      <td>269.920949</td>\n      <td>65.551122</td>\n      <td>0.36</td>\n      <td>687058291588</td>\n      <td>655229</td>\n      <td>826215200017597</td>\n      <td>269.921348</td>\n      <td>65.55124</td>\n      <td>2</td>\n      <td>zr</td>\n      <td>66</td>\n      <td>1.291853</td>\n      <td>0.350705</td>\n      <td>21.23908</td>\n      <td>0.217272</td>\n      <td>0.732231</td>\n    </tr>\n    <tr>\n      <th>720432420190003514</th>\n      <td>687057895841</td>\n      <td>655229</td>\n      <td>102158891</td>\n      <td>2699210741655237953</td>\n      <td>269.921074</td>\n      <td>65.523795</td>\n      <td>0.36</td>\n      <td>687057895842</td>\n      <td>655229</td>\n      <td>826215200022643</td>\n      <td>269.920704</td>\n      <td>65.523755</td>\n      <td>2</td>\n      <td>zr</td>\n      <td>82</td>\n      <td>1.10932</td>\n      <td>0.283498</td>\n      <td>21.253254</td>\n      <td>0.190222</td>\n      <td>0.570194</td>\n    </tr>\n    <tr>\n      <th>720435031368747437</th>\n      <td>687060386055</td>\n      <td>655231</td>\n      <td>102158891</td>\n      <td>2699214091656398506</td>\n      <td>269.921409</td>\n      <td>65.639851</td>\n      <td>0.1</td>\n      <td>687060386055</td>\n      <td>655231</td>\n      <td>848302400025079</td>\n      <td>269.921389</td>\n      <td>65.63984</td>\n      <td>3</td>\n      <td>zi</td>\n      <td>235</td>\n      <td>1.307203</td>\n      <td>0.099071</td>\n      <td>18.976027</td>\n      <td>0.064419</td>\n      <td>0.047905</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>1128893524233377784</th>\n      <td>1076596760018</td>\n      <td>1026722</td>\n      <td>102159487</td>\n      <td>2707275041662719928</td>\n      <td>270.727504</td>\n      <td>66.271993</td>\n      <td>0.32</td>\n      <td>1076596760019</td>\n      <td>1026722</td>\n      <td>848201300011194</td>\n      <td>270.727673</td>\n      <td>66.272057</td>\n      <td>2</td>\n      <td>zr</td>\n      <td>172</td>\n      <td>0.957406</td>\n      <td>0.234242</td>\n      <td>21.202761</td>\n      <td>0.160785</td>\n      <td>0.334972</td>\n    </tr>\n    <tr>\n      <th>1128893589791736967</th>\n      <td>1076596822540</td>\n      <td>1026722</td>\n      <td>102159487</td>\n      <td>2707360491662878475</td>\n      <td>270.736049</td>\n      <td>66.287848</td>\n      <td>0.43</td>\n      <td>1076596822537</td>\n      <td>1026722</td>\n      <td>848201300001262</td>\n      <td>270.736013</td>\n      <td>66.287832</td>\n      <td>2</td>\n      <td>zr</td>\n      <td>536</td>\n      <td>0.968066</td>\n      <td>0.219642</td>\n      <td>20.804783</td>\n      <td>0.13789</td>\n      <td>0.075775</td>\n    </tr>\n    <tr>\n      <th>1128893569383796065</th>\n      <td>1076596803077</td>\n      <td>1026722</td>\n      <td>102159487</td>\n      <td>2707361465662732069</td>\n      <td>270.736147</td>\n      <td>66.273207</td>\n      <td>0.32</td>\n      <td>1076596803077</td>\n      <td>1026722</td>\n      <td>848201300001438</td>\n      <td>270.73629</td>\n      <td>66.273238</td>\n      <td>2</td>\n      <td>zr</td>\n      <td>347</td>\n      <td>0.939984</td>\n      <td>0.236459</td>\n      <td>21.124443</td>\n      <td>0.153017</td>\n      <td>0.236522</td>\n    </tr>\n    <tr>\n      <th>1128893542038473039</th>\n      <td>1076596776998</td>\n      <td>1026722</td>\n      <td>102159487</td>\n      <td>2707612776662634595</td>\n      <td>270.761278</td>\n      <td>66.26346</td>\n      <td>0.29</td>\n      <td>1076596776999</td>\n      <td>1026722</td>\n      <td>848201300001540</td>\n      <td>270.761399</td>\n      <td>66.263474</td>\n      <td>2</td>\n      <td>zr</td>\n      <td>400</td>\n      <td>0.92098</td>\n      <td>0.217024</td>\n      <td>21.0543</td>\n      <td>0.145107</td>\n      <td>0.183349</td>\n    </tr>\n    <tr>\n      <th>1128893540953147706</th>\n      <td>1076596775963</td>\n      <td>1026722</td>\n      <td>102159487</td>\n      <td>2707730517662693744</td>\n      <td>270.773052</td>\n      <td>66.269374</td>\n      <td>0.01</td>\n      <td>1076596775963</td>\n      <td>1026722</td>\n      <td>1857212300002383</td>\n      <td>270.773034</td>\n      <td>66.269382</td>\n      <td>2</td>\n      <td>zr</td>\n      <td>53</td>\n      <td>1.208119</td>\n      <td>0.017946</td>\n      <td>16.642914</td>\n      <td>0.011663</td>\n      <td>0.037508</td>\n    </tr>\n    <tr>\n      <th>1128893538206451784</th>\n      <td>1076596773344</td>\n      <td>1026722</td>\n      <td>102159487</td>\n      <td>2707809557662660563</td>\n      <td>270.780956</td>\n      <td>66.266056</td>\n      <td>0.47</td>\n      <td>1076596773323</td>\n      <td>1026722</td>\n      <td>848201300001497</td>\n      <td>270.781189</td>\n      <td>66.266031</td>\n      <td>2</td>\n      <td>zr</td>\n      <td>196</td>\n      <td>1.018292</td>\n      <td>0.256665</td>\n      <td>21.14094</td>\n      <td>0.167229</td>\n      <td>0.350357</td>\n    </tr>\n    <tr>\n      <th>1128893376581602470</th>\n      <td>1076596619207</td>\n      <td>1026722</td>\n      <td>102159193</td>\n      <td>2707976353662411561</td>\n      <td>270.797635</td>\n      <td>66.241156</td>\n      <td>0.4</td>\n      <td>1076596619206</td>\n      <td>1026722</td>\n      <td>848201300001788</td>\n      <td>270.797594</td>\n      <td>66.241162</td>\n      <td>2</td>\n      <td>zr</td>\n      <td>599</td>\n      <td>0.958596</td>\n      <td>0.210892</td>\n      <td>20.752556</td>\n      <td>0.132805</td>\n      <td>0.064059</td>\n    </tr>\n    <tr>\n      <th>1128893337709122935</th>\n      <td>1076596582135</td>\n      <td>1026722</td>\n      <td>102159193</td>\n      <td>2708392307662229925</td>\n      <td>270.839231</td>\n      <td>66.222993</td>\n      <td>0.59</td>\n      <td>1076596582134</td>\n      <td>1026722</td>\n      <td>848201300001975</td>\n      <td>270.839017</td>\n      <td>66.222907</td>\n      <td>2</td>\n      <td>zr</td>\n      <td>61</td>\n      <td>1.336956</td>\n      <td>0.333995</td>\n      <td>21.316973</td>\n      <td>0.234939</td>\n      <td>0.436674</td>\n    </tr>\n    <tr>\n      <th>1128893340254188261</th>\n      <td>1076596584562</td>\n      <td>1026722</td>\n      <td>102159193</td>\n      <td>2708472558662234858</td>\n      <td>270.847256</td>\n      <td>66.223486</td>\n      <td>0.03</td>\n      <td>1076596584563</td>\n      <td>1026722</td>\n      <td>848201300001966</td>\n      <td>270.847261</td>\n      <td>66.223523</td>\n      <td>2</td>\n      <td>zr</td>\n      <td>83</td>\n      <td>1.09015</td>\n      <td>0.3153</td>\n      <td>21.287346</td>\n      <td>0.189821</td>\n      <td>0.132318</td>\n    </tr>\n  </tbody>\n</table>\n<p>4833 rows × 20 columns</p>","content_type":"text/html"}}}],"key":"XrwAWS6mcQ"}],"key":"b0bYo7LF7Z"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":419,"column":1},"end":{"line":419,"column":1}},"children":[{"type":"text","value":"5.3 Identify objects of interest from the crossmatch","position":{"start":{"line":419,"column":1},"end":{"line":419,"column":1}},"key":"NU6MqL4BON"}],"identifier":"id-5-3-identify-objects-of-interest-from-the-crossmatch","label":"5.3 Identify objects of interest from the crossmatch","html_id":"id-5-3-identify-objects-of-interest-from-the-crossmatch","implicit":true,"key":"xUgOqATs2S"}],"key":"T9pyqFoI9D"},{"type":"block","position":{"start":{"line":421,"column":1},"end":{"line":421,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":423,"column":1},"end":{"line":423,"column":1}},"children":[{"type":"text","value":"Check the number of unique Euclid and ZTF sources in the crossmatched catalog:","position":{"start":{"line":423,"column":1},"end":{"line":423,"column":1}},"key":"LeubqGFjac"}],"key":"mt2nHp1p4X"}],"key":"L4uyE0GItu"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"euclid_x_ztf_df.shape[0], euclid_x_ztf_df['object_id_euclid'].nunique(), euclid_x_ztf_df['oid_ztf'].nunique()","key":"kg1DMLERZQ"},{"type":"output","id":"S46Cl-qiy2FrZ7dRAKzX_","data":[{"output_type":"execute_result","execution_count":33,"metadata":{},"data":{"text/plain":{"content":"(4833, 4833, 4808)","content_type":"text/plain"}}}],"key":"G3H4DkVLqU"}],"key":"tAYEy3Ndl4"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":429,"column":1},"end":{"line":430,"column":1}},"children":[{"type":"text","value":"This means there is one unique Euclid source for each row in the crossmatched catalog as expected (since we put Euclid on the left side of the crossmatch).\nBut for ZTF, this is not true as some ZTF objects have multiple Euclid matches since ZTF has lower resolution than Euclid.","position":{"start":{"line":429,"column":1},"end":{"line":429,"column":1}},"key":"Svcrg5PWVh"}],"key":"APza9Nng0P"},{"type":"paragraph","position":{"start":{"line":432,"column":1},"end":{"line":433,"column":1}},"children":[{"type":"text","value":"Now let’s plot some variability metrics from ZTF against Euclid redshift to see if there are any trends.\nWe will use hexbin plots to visualize the density of sources in each panel:","position":{"start":{"line":432,"column":1},"end":{"line":432,"column":1}},"key":"eVtw3dXnKi"}],"key":"pPl5hBx1Vn"}],"key":"Fhcn9SGvUK"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"z = euclid_x_ztf_df[\"phz_phz_median_euclid\"].to_numpy() # x-axis\nmetrics = [ # y-axes\n    (\"magrms_ztf\",        \"ZTF mag RMS\"),\n    (\"chisq_ztf\",         \"ZTF χ²\"),\n    (\"medianabsdev_ztf\",  \"ZTF MAD\"),\n    (\"ngoodobsrel_ztf\",   \"ZTF # good obs\"),\n]\n\nfig, axes = plt.subplots(2, 2, figsize=(10, 6), constrained_layout=True, sharex=True)\naxes = axes.ravel()\n\nxmin, xmax = 0, 2.5  \ngridsize = 48  # resolution: larger => finer grid\n\nfor i, (col, ylabel) in enumerate(metrics):\n    ax = axes[i]\n    y = euclid_x_ztf_df[col].to_numpy()\n\n    # clip y to robust range (1–99th percentile) for visibility\n    y_lo, y_hi = np.nanpercentile(y, [1, 99])\n\n    hb = ax.hexbin(\n        z, y,\n        gridsize=gridsize,\n        extent=(xmin, xmax, y_lo, y_hi),\n        mincnt=1,\n        bins='log'  # logarithmic color scale of counts\n    )\n\n    # ax.set_xlim(xmin, xmax)\n    # ax.set_ylim(y_lo, y_hi)\n    ax.set_ylabel(ylabel)\n\n    # x-label only on bottom row to reduce clutter\n    if i // 2 == 1:\n        ax.set_xlabel(\"Euclid redshift\")\n\n\n# Shared colorbar across all panels (uses last hexbin as mappable)\ncbar = fig.colorbar(hb, ax=axes[:-1], shrink=0.9, label=\"Galaxy sources count (log)\")\n\nfig.suptitle(\"Euclid redshift vs ZTF variability metrics\", y=1.04)\nplt.show()","key":"Cm055pT04t"},{"type":"output","id":"X0JdJ9I5sn9BqAKSnp46A","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1000x600 with 5 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"5f8fc2e41bd9c98e75d39a0dba044886","path":"/irsa-tutorials/build/5f8fc2e41bd9c98e75d39a0dba044886.png"}}}],"key":"a2psci0x9B"}],"key":"RA4YPu7oD6"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":481,"column":1},"end":{"line":482,"column":1}},"children":[{"type":"text","value":"There’s no strong variability trend for higher redshift galaxies (z > 1) as the distributions of mag RMS, MAD, and Chi-squared are fairly stable with redshift.\nThis is likely because of the limited sensitivity of ZTF, as there are clearly fewer good observations as redshift increases.","position":{"start":{"line":481,"column":1},"end":{"line":481,"column":1}},"key":"am7XFhaHSo"}],"key":"WeRH8uz7oY"},{"type":"paragraph","position":{"start":{"line":484,"column":1},"end":{"line":485,"column":1}},"children":[{"type":"text","value":"Despite this, we can still select some high-variability galaxy sources from the low redshift (z < 1) range for further analysis.\nLet’s focus only on Chi-squared (measure of significance) and RMS magnitude (measure of variability amplitude; similar to MAD) metrics:","position":{"start":{"line":484,"column":1},"end":{"line":484,"column":1}},"key":"vXNycn2OMo"}],"key":"zpTrLFM4UU"}],"key":"vWPqcIkKB4"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"euclid_x_ztf_df['chisq_ztf'].describe()","key":"V9acZQRB2v"},{"type":"output","id":"mI9rX0md8XkrB-50hISDe","data":[{"output_type":"execute_result","execution_count":35,"metadata":{},"data":{"text/plain":{"content":"count       4833.0\nmean      1.125982\nstd       0.677987\nmin       0.648965\n25%       0.964728\n50%       1.050994\n75%       1.161509\nmax      27.873291\nName: chisq_ztf, dtype: double[pyarrow]","content_type":"text/plain"}}}],"key":"GowB6dSgjG"}],"key":"C0d8io3HKa"},{"type":"block","children":[],"key":"KWVhXjXO1y"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"chisq_threshold = euclid_x_ztf_df['chisq_ztf'].quantile(0.95)\nchisq_threshold","key":"KyElRqYJ6i"},{"type":"output","id":"3eqnIHb1gR22FJTilpaTz","data":[{"output_type":"execute_result","execution_count":36,"metadata":{},"data":{"text/plain":{"content":"1.4483341455459593","content_type":"text/plain"}}}],"key":"H0CfK9RQSD"}],"key":"FUonI6Swxr"},{"type":"block","children":[],"key":"W4tEHBQwR6"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"euclid_x_ztf_df['magrms_ztf'].describe()","key":"J9oyOoEYDS"},{"type":"output","id":"01W3_aGnpyQoBeqrxp4KR","data":[{"output_type":"execute_result","execution_count":37,"metadata":{},"data":{"text/plain":{"content":"count      4833.0\nmean     0.219656\nstd      0.089749\nmin      0.010117\n25%      0.175114\n50%      0.234153\n75%      0.277245\nmax      0.923869\nName: magrms_ztf, dtype: double[pyarrow]","content_type":"text/plain"}}}],"key":"FyXTg5P6GL"}],"key":"MoN0uMYRxM"},{"type":"block","children":[],"key":"vNGeicUGF4"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"magrms_threshold = euclid_x_ztf_df['magrms_ztf'].quantile(0.95)\nmagrms_threshold","key":"PQVBMewWBq"},{"type":"output","id":"ET9la3gXlwT1HDu5GIMTA","data":[{"output_type":"execute_result","execution_count":38,"metadata":{},"data":{"text/plain":{"content":"0.33570506572723385","content_type":"text/plain"}}}],"key":"STR4MVxo9E"}],"key":"crX0eIryRU"},{"type":"block","children":[],"key":"pakehxTDgT"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"variable_galaxies = euclid_x_ztf_df.query(\n    f\"chisq_ztf >= {chisq_threshold} & magrms_ztf >= {magrms_threshold}\"\n    ).sort_values(\"chisq_ztf\", ascending=False) # sort by significant variability","key":"laFo93juPz"},{"type":"output","id":"OU7a9nu9M3eHwaMukj7yT","data":[],"key":"yr7oTU8LtS"}],"key":"EyKziAT8lO"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":511,"column":1},"end":{"line":511,"column":1}},"children":[{"type":"text","value":"Let’s inspect the top variable galaxies that we can use for plotting their light curves:","position":{"start":{"line":511,"column":1},"end":{"line":511,"column":1}},"key":"qv1uKnfFYN"}],"key":"L0kO15YfhP"}],"key":"IV2YseN6qr"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"cols_of_interest = [\"oid_ztf\", \"fid_ztf\", \"filtercode_ztf\", \"phz_phz_median_euclid\", \"magrms_ztf\", \"chisq_ztf\"]\ntop_variable_galaxies = variable_galaxies.head(3)\ntop_variable_galaxies[cols_of_interest]","key":"Z0U7fc5ijQ"},{"type":"output","id":"PDoLv5VhgLcr0q7xiWxYI","data":[{"output_type":"execute_result","execution_count":40,"metadata":{},"data":{"text/plain":{"content":"                             oid_ztf  fid_ztf filtercode_ztf  \\\n_healpix_29                                                    \n1080844064773760661  848201300014047        2             zr   \n816655967593598710   848102400023608        1             zg   \n816655965602458265   848202400038072        2             zr   \n\n                     phz_phz_median_euclid  magrms_ztf  chisq_ztf  \n_healpix_29                                                        \n1080844064773760661                   0.11    0.923869  27.873291  \n816655967593598710                     1.0    0.844652  19.543127  \n816655965602458265                    0.96    0.765504  17.694681  ","content_type":"text/plain"},"text/html":{"content":"<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>oid_ztf</th>\n      <th>fid_ztf</th>\n      <th>filtercode_ztf</th>\n      <th>phz_phz_median_euclid</th>\n      <th>magrms_ztf</th>\n      <th>chisq_ztf</th>\n    </tr>\n    <tr>\n      <th>_healpix_29</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1080844064773760661</th>\n      <td>848201300014047</td>\n      <td>2</td>\n      <td>zr</td>\n      <td>0.11</td>\n      <td>0.923869</td>\n      <td>27.873291</td>\n    </tr>\n    <tr>\n      <th>816655967593598710</th>\n      <td>848102400023608</td>\n      <td>1</td>\n      <td>zg</td>\n      <td>1.0</td>\n      <td>0.844652</td>\n      <td>19.543127</td>\n    </tr>\n    <tr>\n      <th>816655965602458265</th>\n      <td>848202400038072</td>\n      <td>2</td>\n      <td>zr</td>\n      <td>0.96</td>\n      <td>0.765504</td>\n      <td>17.694681</td>\n    </tr>\n  </tbody>\n</table>\n<p>3 rows × 6 columns</p>","content_type":"text/html"}}}],"key":"WfhRha6oh5"}],"key":"Mmwvp58JLZ"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":519,"column":1},"end":{"line":519,"column":1}},"children":[{"type":"text","value":"6. Load ZTF lightcurves by object IDs","position":{"start":{"line":519,"column":1},"end":{"line":519,"column":1}},"key":"lZ6Rojfzy8"}],"identifier":"id-6-load-ztf-lightcurves-by-object-ids","label":"6. Load ZTF lightcurves by object IDs","html_id":"id-6-load-ztf-lightcurves-by-object-ids","implicit":true,"key":"n5r0howFi7"}],"key":"YphTJhtmYq"},{"type":"block","position":{"start":{"line":521,"column":1},"end":{"line":521,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":523,"column":1},"end":{"line":526,"column":1}},"children":[{"type":"text","value":"Let’s open the ZTF light curves HATS catalog.\nNote that we are using the same spatial filter as before.\nWe do not specify any column filters, because the default columns already contain the light curve data we need.\nWe also do not apply any row filters, since we will directly filter rows by object IDs.","position":{"start":{"line":523,"column":1},"end":{"line":523,"column":1}},"key":"dafwByuyuJ"}],"key":"ekwHkN1SY4"}],"key":"JEDcb3hyUV"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ztf_lc_catalog = lsdb.open_catalog(f\"s3://{ztf_bucket}/{ztf_lc_hats_prefix}\",\n                                   search_filter=spatial_filter\n                                   )\nztf_lc_catalog","key":"mgwmHTsz75"},{"type":"output","id":"xYS60Xx_RWqbvjjRnL36M","data":[{"output_type":"execute_result","execution_count":41,"metadata":{},"data":{"text/plain":{"content":"Dask NestedFrame Structure:\n                           objectid       filterid           objra          objdec                                                                                   lightcurve\nnpartitions=4                                                                                                                                                                  \n720294465402568704   int64[pyarrow]  int8[pyarrow]  float[pyarrow]  float[pyarrow]  nested<hmjd: [double], mag: [float], magerr: [float], clrcoeff: [float], catflags: [int32]>\n816558907437613056              ...            ...             ...             ...                                                                                          ...\n1080582435592208384             ...            ...             ...             ...                                                                                          ...\n1128714656609730560             ...            ...             ...             ...                                                                                          ...\n1128996131586441216             ...            ...             ...             ...                                                                                          ...\nDask Name: search_points, 5 expressions\nExpr=MapPartitions(search_points)","content_type":"text/plain"},"text/html":{"content":"<div><strong>lsdb Catalog ZTF_DR23_Lightcurves:</strong></div><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>objectid</th>\n      <th>filterid</th>\n      <th>objra</th>\n      <th>objdec</th>\n      <th>lightcurve</th>\n    </tr>\n    <tr>\n      <th>npartitions=4</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Order: 5, Pixel: 2559</th>\n      <td>int64[pyarrow]</td>\n      <td>int8[pyarrow]</td>\n      <td>float[pyarrow]</td>\n      <td>float[pyarrow]</td>\n      <td>nested&lt;hmjd: [double], mag: [float], magerr: [float], clrcoeff: [float], catflags: [int32]&gt;</td>\n    </tr>\n    <tr>\n      <th>Order: 5, Pixel: 2901</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>Order: 5, Pixel: 3839</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>Order: 5, Pixel: 4010</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n  </tbody>\n</table>\n</div><div>5 out of 13 available columns in the catalog have been loaded <strong>lazily</strong>, meaning no data has been read, only the catalog schema</div>","content_type":"text/html"}}}],"key":"Hjra96OyL0"}],"key":"s1MOjQAZRh"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":535,"column":1},"end":{"line":535,"column":1}},"children":[{"type":"text","value":"We can inspect the catalog’s collection properties and find which columns have ancillary index tables (as explained in lsdb’s documentation on ","position":{"start":{"line":535,"column":1},"end":{"line":535,"column":1}},"key":"fwqnFYVXhz"},{"type":"link","url":"https://docs.lsdb.io/en/latest/tutorials/pre_executed/index_table.html","position":{"start":{"line":535,"column":1},"end":{"line":535,"column":1}},"children":[{"type":"text","value":"using index tables","position":{"start":{"line":535,"column":1},"end":{"line":535,"column":1}},"key":"A2VOt3H5X6"}],"urlSource":"https://docs.lsdb.io/en/latest/tutorials/pre_executed/index_table.html","key":"SkoC9cPJjH"},{"type":"text","value":").","position":{"start":{"line":535,"column":1},"end":{"line":535,"column":1}},"key":"p2nMhAYcme"}],"key":"CmwhnsON16"}],"key":"Zy9zCKhMxX"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ztf_lc_idx_column = list(ztf_lc_catalog.hc_collection.all_indexes.keys())[0]\nztf_lc_idx_column","key":"Uj8PZMxALo"},{"type":"output","id":"gdYlbY-z-1Ysyn1u8tP2d","data":[{"output_type":"execute_result","execution_count":42,"metadata":{},"data":{"text/plain":{"content":"'objectid'","content_type":"text/plain"}}}],"key":"jqI5uXGTMW"}],"key":"PeZ0ciAFmd"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":542,"column":1},"end":{"line":542,"column":1}},"children":[{"type":"text","value":"Let’s just extract the object IDs of the top variable galaxies we identified above:","position":{"start":{"line":542,"column":1},"end":{"line":542,"column":1}},"key":"g7ubWqjqVC"}],"key":"G1zI5VOjXs"}],"key":"TbMKB9IzUp"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ztf_oids = top_variable_galaxies['oid_ztf'].tolist()\nztf_oids","key":"RxgPlNuzh5"},{"type":"output","id":"O7VFHep8IhPkLdfeDT1t0","data":[{"output_type":"execute_result","execution_count":43,"metadata":{},"data":{"text/plain":{"content":"[848201300014047, 848102400023608, 848202400038072]","content_type":"text/plain"}}}],"key":"LKExspuGYE"}],"key":"G99FeYad05"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":549,"column":1},"end":{"line":549,"column":1}},"children":[{"type":"text","value":"Now we can use these IDs to filter the ZTF light curves catalog by the ","position":{"start":{"line":549,"column":1},"end":{"line":549,"column":1}},"key":"XzRClOIYct"},{"type":"inlineCode","value":"id_search","position":{"start":{"line":549,"column":1},"end":{"line":549,"column":1}},"key":"Y6nCwf4ize"},{"type":"text","value":" method:","position":{"start":{"line":549,"column":1},"end":{"line":549,"column":1}},"key":"kzRCJCxb38"}],"key":"KsGfIXKE1Y"}],"key":"GcKxseKOS6"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ztf_lcs = ztf_lc_catalog.id_search(values={ztf_lc_idx_column: ztf_oids})\nztf_lcs","key":"gBeXBT8mI1"},{"type":"output","id":"706hU4ivPeQLHu8IY57H9","data":[{"output_type":"stream","name":"stdout","text":"Searching for objectid=[848201300014047, 848102400023608, 848202400038072]\n"},{"output_type":"execute_result","execution_count":44,"metadata":{},"data":{"text/plain":{"content":"Dask NestedFrame Structure:\n                           objectid       filterid           objra          objdec                                                                                   lightcurve\nnpartitions=2                                                                                                                                                                  \n816558907437613056   int64[pyarrow]  int8[pyarrow]  float[pyarrow]  float[pyarrow]  nested<hmjd: [double], mag: [float], magerr: [float], clrcoeff: [float], catflags: [int32]>\n1080582435592208384             ...            ...             ...             ...                                                                                          ...\n1128714656609730560             ...            ...             ...             ...                                                                                          ...\nDask Name: search_points, 7 expressions\nExpr=MapPartitions(search_points)","content_type":"text/plain"},"text/html":{"content":"<div><strong>lsdb Catalog ZTF_DR23_Lightcurves:</strong></div><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>objectid</th>\n      <th>filterid</th>\n      <th>objra</th>\n      <th>objdec</th>\n      <th>lightcurve</th>\n    </tr>\n    <tr>\n      <th>npartitions=2</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Order: 5, Pixel: 2901</th>\n      <td>int64[pyarrow]</td>\n      <td>int8[pyarrow]</td>\n      <td>float[pyarrow]</td>\n      <td>float[pyarrow]</td>\n      <td>nested&lt;hmjd: [double], mag: [float], magerr: [float], clrcoeff: [float], catflags: [int32]&gt;</td>\n    </tr>\n    <tr>\n      <th>Order: 5, Pixel: 3839</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n  </tbody>\n</table>\n</div><div>5 out of 13 available columns in the catalog have been loaded <strong>lazily</strong>, meaning no data has been read, only the catalog schema</div>","content_type":"text/html"}}}],"key":"PxIs2oe3Ty"}],"key":"L87D8zyYbF"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":556,"column":1},"end":{"line":557,"column":1}},"children":[{"type":"text","value":"As earlier, this creates a lazy catalog object with the partition(s) that contains our IDs.\nWe can load the light curves data into a DataFrame by using the ","position":{"start":{"line":556,"column":1},"end":{"line":556,"column":1}},"key":"LmCCUE8lx9"},{"type":"inlineCode","value":"compute()","position":{"start":{"line":556,"column":1},"end":{"line":556,"column":1}},"key":"JT3YhawvCQ"},{"type":"text","value":" method:","position":{"start":{"line":556,"column":1},"end":{"line":556,"column":1}},"key":"o7cv6gSQJa"}],"key":"FNzShvE7DE"}],"key":"GdZvxUVf5o"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ztf_lcs_df = ztf_lcs.compute() # ID search runs out of memory if we try to parallelize it with Dask client\nztf_lcs_df","key":"JHGwM6FcZu"},{"type":"output","id":"rbsYDs88Hos9Z-mgkP6lA","data":[{"output_type":"execute_result","execution_count":45,"metadata":{},"data":{"text/plain":{"content":"                            objectid  filterid       objra     objdec  \\\n_healpix_29                                                             \n816655965609758114   848202400038072         2    268.8302  66.324913   \n816655967601097877   848102400023608         1  268.827881  66.326439   \n1080844064784050785  848201300014047         2  270.404602  65.946106   \n\n                                                                                                                 lightcurve  \n_healpix_29                                                                                                                  \n816655965609758114   [{hmjd: 58198.36545, mag: 17.170887, magerr: 0.016645, clrcoeff: 0.067037, catflags: 0}; …] (130 rows)  \n816655967601097877   [{hmjd: 58207.39283, mag: 18.013729, magerr: 0.028822, clrcoeff: -0.077841, catflags: 0}; …] (54 rows)  \n1080844064784050785  [{hmjd: 58226.44889, mag: 21.158422, magerr: 0.242976, clrcoeff: 0.094843, catflags: 0}; …] (148 rows)  ","content_type":"text/plain"},"text/html":{"content":"<style type=\"text/css\">\n</style>\n<table id=\"T_516fc\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th id=\"T_516fc_level0_col0\" class=\"col_heading level0 col0\" >objectid</th>\n      <th id=\"T_516fc_level0_col1\" class=\"col_heading level0 col1\" >filterid</th>\n      <th id=\"T_516fc_level0_col2\" class=\"col_heading level0 col2\" >objra</th>\n      <th id=\"T_516fc_level0_col3\" class=\"col_heading level0 col3\" >objdec</th>\n      <th id=\"T_516fc_level0_col4\" class=\"col_heading level0 col4\" >lightcurve</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_516fc_level0_row0\" class=\"row_heading level0 row0\" >816655965609758114</th>\n      <td id=\"T_516fc_row0_col0\" class=\"data row0 col0\" >848202400038072</td>\n      <td id=\"T_516fc_row0_col1\" class=\"data row0 col1\" >2</td>\n      <td id=\"T_516fc_row0_col2\" class=\"data row0 col2\" >268.830200</td>\n      <td id=\"T_516fc_row0_col3\" class=\"data row0 col3\" >66.324913</td>\n      <td id=\"T_516fc_row0_col4\" class=\"data row0 col4\" ><table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>hmjd</th>\n      <th>mag</th>\n      <th>magerr</th>\n      <th>clrcoeff</th>\n      <th>catflags</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>58198.36545</td>\n      <td>17.170887</td>\n      <td>0.016645</td>\n      <td>0.067037</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <td><i>+129 rows</i></td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n  </tbody>\n</table></td>\n    </tr>\n    <tr>\n      <th id=\"T_516fc_level0_row1\" class=\"row_heading level0 row1\" >816655967601097877</th>\n      <td id=\"T_516fc_row1_col0\" class=\"data row1 col0\" >848102400023608</td>\n      <td id=\"T_516fc_row1_col1\" class=\"data row1 col1\" >1</td>\n      <td id=\"T_516fc_row1_col2\" class=\"data row1 col2\" >268.827881</td>\n      <td id=\"T_516fc_row1_col3\" class=\"data row1 col3\" >66.326439</td>\n      <td id=\"T_516fc_row1_col4\" class=\"data row1 col4\" ><table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>hmjd</th>\n      <th>mag</th>\n      <th>magerr</th>\n      <th>clrcoeff</th>\n      <th>catflags</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>58207.39283</td>\n      <td>18.013729</td>\n      <td>0.028822</td>\n      <td>-0.077841</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <td><i>+53 rows</i></td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n  </tbody>\n</table></td>\n    </tr>\n    <tr>\n      <th id=\"T_516fc_level0_row2\" class=\"row_heading level0 row2\" >1080844064784050785</th>\n      <td id=\"T_516fc_row2_col0\" class=\"data row2 col0\" >848201300014047</td>\n      <td id=\"T_516fc_row2_col1\" class=\"data row2 col1\" >2</td>\n      <td id=\"T_516fc_row2_col2\" class=\"data row2 col2\" >270.404602</td>\n      <td id=\"T_516fc_row2_col3\" class=\"data row2 col3\" >65.946106</td>\n      <td id=\"T_516fc_row2_col4\" class=\"data row2 col4\" ><table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>hmjd</th>\n      <th>mag</th>\n      <th>magerr</th>\n      <th>clrcoeff</th>\n      <th>catflags</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>58226.44889</td>\n      <td>21.158422</td>\n      <td>0.242976</td>\n      <td>0.094843</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <td><i>+147 rows</i></td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n  </tbody>\n</table></td>\n    </tr>\n  </tbody>\n</table>\n3 rows x 5 columns","content_type":"text/html"}}}],"key":"Cf2BghJKuN"}],"key":"BN6qkQ7yxY"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":564,"column":1},"end":{"line":564,"column":1}},"children":[{"type":"text","value":"Let’s merge this light curves DataFrame with the crossmatched catalog (with variability filters and sorting) so that we can use collapsed light curves metrics for annotating the plots:","position":{"start":{"line":564,"column":1},"end":{"line":564,"column":1}},"key":"FtQROgqlTl"}],"key":"nWEkFGwkgE"}],"key":"iCPhYzxEDe"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"merged_ztf_lcs_df = ztf_lcs_df.merge(\n    top_variable_galaxies[cols_of_interest].set_index('oid_ztf'),\n    left_on='objectid', right_index=True\n).set_index('objectid', drop=False)\n\n# Sort by the order of top_variable_galaxies\nmerged_ztf_lcs_df = merged_ztf_lcs_df.loc[ztf_oids]\nmerged_ztf_lcs_df","key":"jTSq6k9HUg"},{"type":"output","id":"DnBDqisLk9BiMWghpd8nQ","data":[{"output_type":"execute_result","execution_count":46,"metadata":{},"data":{"text/plain":{"content":"                        objectid  filterid       objra     objdec  \\\nobjectid                                                            \n848201300014047  848201300014047         2  270.404602  65.946106   \n848102400023608  848102400023608         1  268.827881  66.326439   \n848202400038072  848202400038072         2    268.8302  66.324913   \n\n                                                                                                             lightcurve  \\\nobjectid                                                                                                                  \n848201300014047  [{hmjd: 58226.44889, mag: 21.158422, magerr: 0.242976, clrcoeff: 0.094843, catflags: 0}; …] (148 rows)   \n848102400023608  [{hmjd: 58207.39283, mag: 18.013729, magerr: 0.028822, clrcoeff: -0.077841, catflags: 0}; …] (54 rows)   \n848202400038072  [{hmjd: 58198.36545, mag: 17.170887, magerr: 0.016645, clrcoeff: 0.067037, catflags: 0}; …] (130 rows)   \n\n                 fid_ztf filtercode_ztf  phz_phz_median_euclid  magrms_ztf  \\\nobjectid                                                                     \n848201300014047        2             zr                   0.11    0.923869   \n848102400023608        1             zg                    1.0    0.844652   \n848202400038072        2             zr                   0.96    0.765504   \n\n                 chisq_ztf  \nobjectid                    \n848201300014047  27.873291  \n848102400023608  19.543127  \n848202400038072  17.694681  ","content_type":"text/plain"},"text/html":{"content":"<style type=\"text/css\">\n</style>\n<table id=\"T_be8a1\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th id=\"T_be8a1_level0_col0\" class=\"col_heading level0 col0\" >objectid</th>\n      <th id=\"T_be8a1_level0_col1\" class=\"col_heading level0 col1\" >filterid</th>\n      <th id=\"T_be8a1_level0_col2\" class=\"col_heading level0 col2\" >objra</th>\n      <th id=\"T_be8a1_level0_col3\" class=\"col_heading level0 col3\" >objdec</th>\n      <th id=\"T_be8a1_level0_col4\" class=\"col_heading level0 col4\" >lightcurve</th>\n      <th id=\"T_be8a1_level0_col5\" class=\"col_heading level0 col5\" >fid_ztf</th>\n      <th id=\"T_be8a1_level0_col6\" class=\"col_heading level0 col6\" >filtercode_ztf</th>\n      <th id=\"T_be8a1_level0_col7\" class=\"col_heading level0 col7\" >phz_phz_median_euclid</th>\n      <th id=\"T_be8a1_level0_col8\" class=\"col_heading level0 col8\" >magrms_ztf</th>\n      <th id=\"T_be8a1_level0_col9\" class=\"col_heading level0 col9\" >chisq_ztf</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_be8a1_level0_row0\" class=\"row_heading level0 row0\" >848201300014047</th>\n      <td id=\"T_be8a1_row0_col0\" class=\"data row0 col0\" >848201300014047</td>\n      <td id=\"T_be8a1_row0_col1\" class=\"data row0 col1\" >2</td>\n      <td id=\"T_be8a1_row0_col2\" class=\"data row0 col2\" >270.404602</td>\n      <td id=\"T_be8a1_row0_col3\" class=\"data row0 col3\" >65.946106</td>\n      <td id=\"T_be8a1_row0_col4\" class=\"data row0 col4\" ><table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>hmjd</th>\n      <th>mag</th>\n      <th>magerr</th>\n      <th>clrcoeff</th>\n      <th>catflags</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>58226.44889</td>\n      <td>21.158422</td>\n      <td>0.242976</td>\n      <td>0.094843</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <td><i>+147 rows</i></td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n  </tbody>\n</table></td>\n      <td id=\"T_be8a1_row0_col5\" class=\"data row0 col5\" >2</td>\n      <td id=\"T_be8a1_row0_col6\" class=\"data row0 col6\" >zr</td>\n      <td id=\"T_be8a1_row0_col7\" class=\"data row0 col7\" >0.110000</td>\n      <td id=\"T_be8a1_row0_col8\" class=\"data row0 col8\" >0.923869</td>\n      <td id=\"T_be8a1_row0_col9\" class=\"data row0 col9\" >27.873291</td>\n    </tr>\n    <tr>\n      <th id=\"T_be8a1_level0_row1\" class=\"row_heading level0 row1\" >848102400023608</th>\n      <td id=\"T_be8a1_row1_col0\" class=\"data row1 col0\" >848102400023608</td>\n      <td id=\"T_be8a1_row1_col1\" class=\"data row1 col1\" >1</td>\n      <td id=\"T_be8a1_row1_col2\" class=\"data row1 col2\" >268.827881</td>\n      <td id=\"T_be8a1_row1_col3\" class=\"data row1 col3\" >66.326439</td>\n      <td id=\"T_be8a1_row1_col4\" class=\"data row1 col4\" ><table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>hmjd</th>\n      <th>mag</th>\n      <th>magerr</th>\n      <th>clrcoeff</th>\n      <th>catflags</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>58207.39283</td>\n      <td>18.013729</td>\n      <td>0.028822</td>\n      <td>-0.077841</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <td><i>+53 rows</i></td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n  </tbody>\n</table></td>\n      <td id=\"T_be8a1_row1_col5\" class=\"data row1 col5\" >1</td>\n      <td id=\"T_be8a1_row1_col6\" class=\"data row1 col6\" >zg</td>\n      <td id=\"T_be8a1_row1_col7\" class=\"data row1 col7\" >1.000000</td>\n      <td id=\"T_be8a1_row1_col8\" class=\"data row1 col8\" >0.844652</td>\n      <td id=\"T_be8a1_row1_col9\" class=\"data row1 col9\" >19.543127</td>\n    </tr>\n    <tr>\n      <th id=\"T_be8a1_level0_row2\" class=\"row_heading level0 row2\" >848202400038072</th>\n      <td id=\"T_be8a1_row2_col0\" class=\"data row2 col0\" >848202400038072</td>\n      <td id=\"T_be8a1_row2_col1\" class=\"data row2 col1\" >2</td>\n      <td id=\"T_be8a1_row2_col2\" class=\"data row2 col2\" >268.830200</td>\n      <td id=\"T_be8a1_row2_col3\" class=\"data row2 col3\" >66.324913</td>\n      <td id=\"T_be8a1_row2_col4\" class=\"data row2 col4\" ><table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>hmjd</th>\n      <th>mag</th>\n      <th>magerr</th>\n      <th>clrcoeff</th>\n      <th>catflags</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>58198.36545</td>\n      <td>17.170887</td>\n      <td>0.016645</td>\n      <td>0.067037</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <td><i>+129 rows</i></td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n  </tbody>\n</table></td>\n      <td id=\"T_be8a1_row2_col5\" class=\"data row2 col5\" >2</td>\n      <td id=\"T_be8a1_row2_col6\" class=\"data row2 col6\" >zr</td>\n      <td id=\"T_be8a1_row2_col7\" class=\"data row2 col7\" >0.960000</td>\n      <td id=\"T_be8a1_row2_col8\" class=\"data row2 col8\" >0.765504</td>\n      <td id=\"T_be8a1_row2_col9\" class=\"data row2 col9\" >17.694681</td>\n    </tr>\n  </tbody>\n</table>\n3 rows x 10 columns","content_type":"text/html"}}}],"key":"CPjcT3nMFX"}],"key":"v3zFsjjeAI"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":577,"column":1},"end":{"line":579,"column":1}},"children":[{"type":"text","value":"Now we can finally plot the light curves of these variable galaxy candidates.\nWe need to filter out bad epochs using the ","position":{"start":{"line":577,"column":1},"end":{"line":577,"column":1}},"key":"gpkGA94tHv"},{"type":"inlineCode","value":"catflags","position":{"start":{"line":577,"column":1},"end":{"line":577,"column":1}},"key":"VsssTAX3J8"},{"type":"text","value":" column as explained in the ","position":{"start":{"line":577,"column":1},"end":{"line":577,"column":1}},"key":"ik3vD1LwYG"},{"type":"link","url":"https://irsa.ipac.caltech.edu/data/ZTF/docs/ztf_explanatory_supplement.pdf","position":{"start":{"line":577,"column":1},"end":{"line":577,"column":1}},"children":[{"type":"text","value":"ZTF DR23 explanatory supplement","position":{"start":{"line":577,"column":1},"end":{"line":577,"column":1}},"key":"ZplCT2js7N"}],"urlSource":"https://irsa.ipac.caltech.edu/data/ZTF/docs/ztf_explanatory_supplement.pdf","key":"b7uKzdQhun"},{"type":"text","value":" section 13.6.\nThen, we will plot the light curves in separate panels for each object:","position":{"start":{"line":577,"column":1},"end":{"line":577,"column":1}},"key":"pQkjQehnjk"}],"key":"EyQWK8abcs"}],"key":"IztQclGNUQ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fig, axs = plt.subplots(len(merged_ztf_lcs_df), 1, figsize=(10, 4 * len(merged_ztf_lcs_df)), constrained_layout=True)\n\nif len(merged_ztf_lcs_df) == 1:\n    axs = [axs]\n\nfor ax, (_, row) in zip(axs, merged_ztf_lcs_df.iterrows()):\n    lc = row['lightcurve'].query(\"catflags == 0\")  # remove bad epochs\n    lc_label = (f'ZTF DR23 Object {row[\"objectid\"]} in band {row[\"filtercode_ztf\"][1]}\\n'\n                f'(z={row[\"phz_phz_median_euclid\"]:.2f}, RMS mag={row[\"magrms_ztf\"]:.3f}, Chi-sq={row[\"chisq_ztf\"]:.3f})')\n    pts = ax.plot(lc['hmjd'], lc['mag'], '.', markersize=4, label=lc_label, zorder=3)\n    ax.errorbar(\n        lc['hmjd'], lc['mag'], yerr=lc['magerr'],\n        fmt='none', ecolor=pts[0].get_color(), elinewidth=0.8, capsize=0, alpha=0.3, zorder=2\n    )\n    ax.set_ylabel('Magnitude')\n    ax.set_xlabel('HMJD')\n    ax.invert_yaxis()\n    ax.set_title(lc_label, fontsize=10)\n\nfig.suptitle(\"Lightcurves of Variable Galaxy Candidates\", fontsize=14, y=1.02)\nfig.set_constrained_layout_pads(h_pad=0.15)\nplt.show()","key":"aydIqGyUIP"},{"type":"output","id":"ZVUIG1DNkI4wydVo39PZq","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1000x1200 with 3 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"0632036dbe05fc30d2ba9354579e6278","path":"/irsa-tutorials/build/0632036dbe05fc30d2ba9354579e6278.png"}}}],"key":"c2EPzEnghI"}],"key":"L940PVXipZ"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":606,"column":1},"end":{"line":606,"column":1}},"children":[{"type":"text","value":"About this notebook","position":{"start":{"line":606,"column":1},"end":{"line":606,"column":1}},"key":"aExPhjkDIj"}],"identifier":"about-this-notebook","label":"About this notebook","html_id":"about-this-notebook","implicit":true,"key":"aUx446J3V7"},{"type":"paragraph","position":{"start":{"line":608,"column":1},"end":{"line":608,"column":1}},"children":[{"type":"text","value":"Author: Jaladh Singhal, Troy Raen, Jessica Krick, Brigitta Sipőcz, Vandana Desai, and the IRSA Data Science Team","position":{"start":{"line":608,"column":1},"end":{"line":608,"column":1}},"key":"iIBAxulCnc"}],"key":"o2n68CYOte"},{"type":"paragraph","position":{"start":{"line":610,"column":1},"end":{"line":610,"column":1}},"children":[{"type":"text","value":"Updated: 2025-10-02","position":{"start":{"line":610,"column":1},"end":{"line":610,"column":1}},"key":"j0kSBJ3wf7"}],"key":"w2dsFdDqQo"},{"type":"paragraph","position":{"start":{"line":612,"column":1},"end":{"line":612,"column":1}},"children":[{"type":"text","value":"Contact: the ","position":{"start":{"line":612,"column":1},"end":{"line":612,"column":1}},"key":"bFMMsjPm4m"},{"type":"link","url":"https://irsa.ipac.caltech.edu/docs/help_desk.html","position":{"start":{"line":612,"column":1},"end":{"line":612,"column":1}},"children":[{"type":"text","value":"IRSA Helpdesk","position":{"start":{"line":612,"column":1},"end":{"line":612,"column":1}},"key":"iH0qjUUnVm"}],"urlSource":"https://irsa.ipac.caltech.edu/docs/help_desk.html","key":"yuHnPcl7lE"},{"type":"text","value":" with questions or to report problems.","position":{"start":{"line":612,"column":1},"end":{"line":612,"column":1}},"key":"GtIw0yeZU1"}],"key":"nN1Xi6Kmy9"}],"key":"Sqh4sdA9JI"}],"key":"fdGQF249Us"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"IRSA cloud access introduction","url":"/cloud-access-intro","group":"Special Topics"},"next":{"title":"Using Firefly visualization tools in Python to vet SEDs","url":"/seds-in-firefly","group":"Special Topics"}}},"domain":"http://localhost:3000"}