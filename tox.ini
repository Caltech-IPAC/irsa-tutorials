[tox]
envlist =
    py{310, 311, 312, 313}-test{,-oldestdeps,-devdeps,-predeps}{,-buildhtml}
requires =
    pip >= 19.3.1

[testenv]

description = run tests

setenv =
    FIREFLY_URL = https://irsa.ipac.caltech.edu/irsaviewer # fallback url for firefly notebooks if not defined in code
    devdeps: PIP_EXTRA_INDEX_URL =  https://pypi.anaconda.org/scientific-python-nightly-wheels/simple https://pypi.anaconda.org/astropy/simple

passenv = CI, CIRCLECI, GITHUB_EVENT_NAME, GITHUB_EVENT_PATH, BASE_URL

deps =
    # We use these files to specify all the dependencies, and below we override
    # versions for specific testing schenarios
    -rtest_requirements.txt
    -rsite_requirements.txt
    -r.binder/requirements.txt

    # Notebooks sets minimums for photutils, astroquery, sep, pyvo, pandas;
    # the rest is indirect minimums for those
    oldestdeps: numpy==1.24.0
    oldestdeps: matplotlib==3.7.0
    oldestdeps: scipy==1.10.0
    oldestdeps: astropy==5.3.0
    oldestdeps: photutils==2.0.0
    oldestdeps: astroquery==0.4.10
    oldestdeps: firefly_client==3.2.0
    oldestdeps: sep==1.4.0
    oldestdeps: pyvo==1.5.0
    oldestdeps: pandas==1.5.2

    devdeps: astropy>0.0.dev0
    devdeps: git+https://github.com/astropy/pyvo.git#egg=pyvo
    devdeps: git+https://github.com/astropy/astroquery.git#egg=astroquery

allowlist_externals = bash, jupyter-book

commands =
    pip freeze

    # Ignore some tutorials for various types of testing. The individual lists are stored in the `ignore_tutorials`
    # directory and are documented about the specific reasons of them included in the ignores. These files are kept under version control.
    # The files `ignore_testing` and `ignore_execution` are generated during the CI jobs and are not under version control.
    bash -c 'cat ignore_tutorials/ignore_all_testing >> ignore_testing'
    bash -c 'if python -c "import platform; print(platform.platform())" | grep -i macos; then cat ignore_tutorials/ignore_osx_testing >> ignore_testing; fi'
    bash -c 'if python -c "import platform; print(platform.platform())" | grep -i win; then cat ignore_tutorials/ignore_windows_testing >> ignore_testing; fi'
    bash -c 'if [[ $CI == true ]]; then cat ignore_tutorials/ignore_gha_testing >> ignore_testing; fi'
    bash -c 'if [[ $CIRCLECI == true ]]; then cat ignore_tutorials/ignore_circleci_testing >> ignore_testing; fi'

    # lsdb has tighter minimum dependencies, deal with it here for now, long term handle it from the notebook metadata
    oldestdeps: bash -c 'echo tutorials/parquet-catalog-demos/irsa-hats-with-lsdb >> ignore_testing'

    buildhtml: bash -c 'cat ignore_tutorials/ignore_rendering >> ignore_testing'

    # We only want to run CI in PRs for the notebooks we touched
    !buildhtml: bash -c 'if [[ $GITHUB_EVENT_NAME == pull_request && -z "$(grep force_run:all_tests ${GITHUB_EVENT_PATH})" ]]; then git fetch origin main --depth=1; git diff origin/main --name-only tutorials | grep .md; else find tutorials -name "*.md"; fi | grep -vf ignore_testing/ignore_testing | xargs jupytext --to notebook '

    !buildhtml: pytest --nbval-lax -vv --suppress-no-test-exit-code --durations=10 tutorials

    # sed -i needs a bit of hacky conditional on ubuntu to cover the case of an empty ignore
    buildhtml: bash -c "find tutorials -name '*md' | grep -f ignore_testing | sort | uniq > ignore_execute; if [ -s ignore_execute ]; then cat ignore_execute | xargs -n 1 sed -i -e 's|name: python3|name: python3\nskip_execution: true|g';fi"


    buildhtml: jupyter-book build --execute --html
    buildhtml: bash -c "rm _build/html/*thebe*.js"

pip_pre =
    predeps: true
    !predeps: false

skip_install = true
