{"version":2,"kind":"Notebook","sha256":"b58955a27f449a9990d62a205fc54fa01ff4a4d8dc3902c987b8f7ae5f1aa866","slug":"spherex-cutouts","location":"/tutorials/spherex/spherex_cutouts.md","dependencies":[],"frontmatter":{"title":"Download a collection of SPHEREx Spectral Image cutouts as a multi-extension FITS file","kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"jupytext":{"text_representation":{"extension":".md","format_name":"myst","format_version":"0.13","jupytext_version":"1.17.3"}},"content_includes_title":false,"authors":[{"id":"IRSA Scientists and Developers","name":"IRSA Scientists and Developers"}],"github":"https://github.com/Caltech-IPAC/irsa-tutorials/","subject":"IRSA Tutorials","keywords":["astronomy"],"settings":{"output_matplotlib_strings":"remove"},"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/Caltech-IPAC/irsa-tutorials//blob/main/tutorials/spherex/spherex_cutouts.md","exports":[{"format":"md","filename":"spherex_cutouts.md","url":"/irsa-tutorials/build/spherex_cutouts-d63e92e836afe507a180ebed9e49aa9a.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"1. Learning Goals","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"BibyuYAqCY"}],"identifier":"id-1-learning-goals","label":"1. Learning Goals","html_id":"id-1-learning-goals","implicit":true,"key":"hGywP73VL4"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":19,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Perform a query for the list of SPHEREx Spectral Image Multi-Extension FITS files (MEFs) that overlap a given coordinate.","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"NqOaRFEyYl"}],"key":"W7GRTE7qqS"},{"type":"listItem","spread":true,"position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"Retrieve cutouts for every entry in this list and package the cutouts as a new MEF.","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"iTAKOqCijF"}],"key":"wiZnblBAZP"},{"type":"listItem","spread":true,"position":{"start":{"line":21,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"Learn how to use parallel or serial processing to retrieve the cutouts.","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"TSEDSPYPsH"}],"key":"KHQzYOYDGN"}],"key":"NkPv4XK5Bi"},{"type":"heading","depth":2,"position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"2. SPHEREx Overview","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"f8BzyVavem"}],"identifier":"id-2-spherex-overview","label":"2. SPHEREx Overview","html_id":"id-2-spherex-overview","implicit":true,"key":"xH5d8JPymt"},{"type":"paragraph","position":{"start":{"line":25,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"SPHEREx is a NASA Astrophysics Medium Explorer mission that launched in March 2025.\nDuring its planned two-year mission, SPHEREx will obtain 0.75-5 micron spectroscopy over the entire sky, with deeper data in the SPHEREx Deep Fields.\nSPHEREx data will be used to:","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"FklpuRoHA0"}],"key":"nnONAXj6eb"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":29,"column":1},"end":{"line":32,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"strong","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"text","value":"constrain the physics of inflation","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"key":"T18uhmORYM"}],"key":"JIgqCa0tv4"},{"type":"text","value":" by measuring its imprints on the three-dimensional large-scale distribution of matter,","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"key":"LhhjYtbmr9"}],"key":"bUXrVZzMUz"},{"type":"listItem","spread":true,"position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"strong","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"text","value":"trace the history of galactic light production","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"AD6M6wO0pm"}],"key":"jGbgyGFkwf"},{"type":"text","value":" through a deep multi-band measurement of large-scale clustering,","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"GM6G8jVwSw"}],"key":"Wcnq7vQLvj"},{"type":"listItem","spread":true,"position":{"start":{"line":31,"column":1},"end":{"line":32,"column":1}},"children":[{"type":"strong","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"investigate the abundance and composition of water and biogenic ices","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"fuzIHcXSX1"}],"key":"DoHDj3rRxO"},{"type":"text","value":" in the early phases of star and planetary disk formation.","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"Lh3NAh5f5K"}],"key":"TguPcuXqDr"}],"key":"bl97bNvC5K"},{"type":"paragraph","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"text","value":"The community will also mine SPHEREx data and combine it with synergistic data sets to address a variety of additional topics in astrophysics.","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"r6WIbfaHTY"}],"key":"FYoeXdroOO"},{"type":"paragraph","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"children":[{"type":"text","value":"More information is available in the ","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"wTZalC1JLg"},{"type":"link","url":"https://irsa.ipac.caltech.edu/data/SPHEREx/docs/SPHEREx_Expsupp_QR.pdf","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"children":[{"type":"text","value":"SPHEREx Explanatory Supplement","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"ZTtqLZqDAE"}],"urlSource":"https://irsa.ipac.caltech.edu/data/SPHEREx/docs/SPHEREx_Expsupp_QR.pdf","key":"qYoYjW8La2"},{"type":"text","value":".","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"GPhBTikwM3"}],"key":"AxcXyjYuxB"},{"type":"heading","depth":2,"position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"text","value":"3. Imports","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"jo3F8CSsYX"}],"identifier":"id-3-imports","label":"3. Imports","html_id":"id-3-imports","implicit":true,"key":"BqJd5NVaJE"},{"type":"paragraph","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"text","value":"The following packages must be installed to run this notebook.","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"HdMOiJcZ9z"}],"key":"LdH5qXwbSi"}],"key":"I6LRPfqFxL"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Uncomment the next line to install dependencies if needed.\n# !pip install numpy astropy pyvo matplotlib","key":"zc8ew3OLFn"},{"type":"output","id":"CJ7W7HvBUuJhirKhapFc5","data":[],"key":"QTbi99cJzW"}],"key":"pFVtFAYCAk"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import concurrent\nimport time\n\nimport astropy.units as u\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pyvo\nfrom astropy.coordinates import SkyCoord\nfrom astropy.io import fits\nfrom astropy.table import Table\nfrom astropy.wcs import WCS\n\n# Suppress logging temporarily to prevent astropy\n# from repeatedly printing out warning notices related to alternate WCSs\nimport logging\nlogging.getLogger('astropy').setLevel(logging.ERROR)","key":"d4ZkQxWElJ"},{"type":"output","id":"T5Qt8M9f_KYNJ_-myUa9H","data":[],"key":"eN0H2mziKe"}],"key":"EAKW8sX2Ht"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":65,"column":1},"end":{"line":65,"column":1}},"children":[{"type":"text","value":"4. Specify inputs and outputs","position":{"start":{"line":65,"column":1},"end":{"line":65,"column":1}},"key":"lydv0JuIN0"}],"identifier":"id-4-specify-inputs-and-outputs","label":"4. Specify inputs and outputs","html_id":"id-4-specify-inputs-and-outputs","implicit":true,"key":"ftKjbPoW3K"},{"type":"paragraph","position":{"start":{"line":67,"column":1},"end":{"line":67,"column":1}},"children":[{"type":"text","value":"Specify a right ascension, declination, cutout size, and a SPHEREx bandpass (e.g., ‘SPHEREx-D2’).","position":{"start":{"line":67,"column":1},"end":{"line":67,"column":1}},"key":"xkoh6DAX8o"}],"key":"pbhqvyZqkK"},{"type":"paragraph","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"children":[{"type":"text","value":"In this example, we are creating cutouts of the Pinwheel galaxy (M101) for the SPHEREx detector D2.","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"Rbxrr80LUJ"}],"key":"gyUzofrE28"}],"key":"v6aSQK4sQU"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Choose a position.\nra = 210.80227 * u.degree\ndec = 54.34895 * u.degree\n\n# Choose a cutout size.\nsize = 0.1 * u.degree\n\n# Choose the bandpass of interest.\nbandpass = 'SPHEREx-D2'\n\n# Choose an output filename root for the output MEF file.\noutput_filename = 'spherex_cutouts_mef.fits'","key":"HWmd0Ira2B"},{"type":"output","id":"bGdE-P_-oh5fFV2pRHBuf","data":[],"key":"CHMOur3dcN"}],"key":"OtYcwe188s"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":86,"column":1},"end":{"line":86,"column":1}},"children":[{"type":"text","value":"5. Query IRSA for a list of cutouts that satisfy the criteria specified above.","position":{"start":{"line":86,"column":1},"end":{"line":86,"column":1}},"key":"xwTPwK60PA"}],"identifier":"id-5-query-irsa-for-a-list-of-cutouts-that-satisfy-the-criteria-specified-above","label":"5. Query IRSA for a list of cutouts that satisfy the criteria specified above.","html_id":"id-5-query-irsa-for-a-list-of-cutouts-that-satisfy-the-criteria-specified-above","implicit":true,"key":"LgdrXcqQ0x"},{"type":"paragraph","position":{"start":{"line":88,"column":1},"end":{"line":91,"column":1}},"children":[{"type":"text","value":"Here we show how to use the ","position":{"start":{"line":88,"column":1},"end":{"line":88,"column":1}},"key":"vrzSt6pGHe"},{"type":"inlineCode","value":"pyvo","position":{"start":{"line":88,"column":1},"end":{"line":88,"column":1}},"key":"XZU6VT7pY9"},{"type":"text","value":" TAP SQL query to retrieve all images that overlap with the position defined above.\nThis query will retrieve a table of URLs that link to the MEF cutouts.\nEach row in the table corresponds to a single cutout and includes the data access URL and an observation timestamp.\nThe results are sorted from oldest to newest.","position":{"start":{"line":88,"column":1},"end":{"line":88,"column":1}},"key":"Zzo8egLkc4"}],"key":"uXmutRbx6I"}],"key":"eC9LHUnLVJ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Define the service endpoint for IRSA's Table Access Protocol (TAP)\n# so that we can query SPHEREx metadata tables.\nservice = pyvo.dal.TAPService(\"https://irsa.ipac.caltech.edu/TAP\")\n\n# Define a query that will search the appropriate SPHEREx metadata tables\n# for spectral images that cover the chosen coordinates and match the\n# specified bandpass. Return the cutout data access URL and the time of observation.\n# Sort by observation time.\nquery = f\"\"\"\nSELECT\n    'https://irsa.ipac.caltech.edu/' || a.uri || '?center={ra.to(u.degree).value},{dec.to(u.degree).value}d&size={size.to(u.degree).value}' AS uri,\n    p.time_bounds_lower\nFROM spherex.artifact a\nJOIN spherex.plane p ON a.planeid = p.planeid\nWHERE 1 = CONTAINS(POINT('ICRS', {ra.to(u.degree).value}, {dec.to(u.degree).value}), p.poly)\n        AND p.energy_bandpassname = '{bandpass}'\nORDER BY p.time_bounds_lower\n\"\"\"\n\n# Execute the query and return as an astropy Table.\nt1 = time.time()\nresults = service.search(query)\nprint(\"Time to do TAP query: {:2.2f} seconds.\".format(time.time() - t1))\nprint(\"Number of images found: {}\".format(len(results)))","key":"KTvYzQKZJx"},{"type":"output","id":"-ZMjPj7tTPNEZ9XaCiFJC","data":[{"output_type":"stream","name":"stdout","text":"Time to do TAP query: 4.78 seconds.\nNumber of images found: 26\n"}],"key":"FrlTY2fkk8"}],"key":"e5U384bOJj"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":120,"column":1},"end":{"line":120,"column":1}},"children":[{"type":"text","value":"6. Define a function that processes a list of SPHEREx Spectral Image Cutouts","position":{"start":{"line":120,"column":1},"end":{"line":120,"column":1}},"key":"OpDdZC844l"}],"identifier":"id-6-define-a-function-that-processes-a-list-of-spherex-spectral-image-cutouts","label":"6. Define a function that processes a list of SPHEREx Spectral Image Cutouts","html_id":"id-6-define-a-function-that-processes-a-list-of-spherex-spectral-image-cutouts","implicit":true,"key":"Q9GpleKIOa"},{"type":"paragraph","position":{"start":{"line":122,"column":1},"end":{"line":122,"column":1}},"children":[{"type":"text","value":"This function takes in a row of the catalog that we created above and does the following:","position":{"start":{"line":122,"column":1},"end":{"line":122,"column":1}},"key":"wKETq4g9zg"}],"key":"wkoHeWgJfF"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":124,"column":1},"end":{"line":127,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":124,"column":1},"end":{"line":124,"column":1}},"children":[{"type":"text","value":"It downloads the cutout","position":{"start":{"line":124,"column":1},"end":{"line":124,"column":1}},"key":"oDNCi8Irg0"}],"key":"odS4xCyvLV"},{"type":"listItem","spread":true,"position":{"start":{"line":125,"column":1},"end":{"line":125,"column":1}},"children":[{"type":"text","value":"It computes the wavelength of the center pixel of the cutout (in micro-meters)","position":{"start":{"line":125,"column":1},"end":{"line":125,"column":1}},"key":"JJBgUDBOG2"}],"key":"b2Ht3719DV"},{"type":"listItem","spread":true,"position":{"start":{"line":126,"column":1},"end":{"line":127,"column":1}},"children":[{"type":"text","value":"It combines the image HDUs into a new HDU and adds it to the table row.","position":{"start":{"line":126,"column":1},"end":{"line":126,"column":1}},"key":"ZjQLgIkw4w"}],"key":"v3u4lDSpsG"}],"key":"sGj3hFplaw"},{"type":"paragraph","position":{"start":{"line":128,"column":1},"end":{"line":128,"column":1}},"children":[{"type":"text","value":"Note that the values of the rows are being added in place.","position":{"start":{"line":128,"column":1},"end":{"line":128,"column":1}},"key":"wsrdciwUBs"}],"key":"ltzFGHXaSd"}],"key":"OGvkPQfHZc"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def process_cutout(row, ra, dec, cache):\n    '''\n    Downloads the cutouts given in a row of the table including all SPHEREx images overlapping with a position.\n\n    Parameters:\n    ===========\n\n    row : astropy.table row\n        Row of a table that will be changed in place by this function. The table\n        is created by the SQL TAP query.\n    ra,dec : coordinates (astropy units)\n        Ra and Dec coordinates (same as used for the TAP query) with attached astropy units\n    cache : bool\n        If set to `True`, the output of cached and the cutout processing will run faster next time.\n        Turn this feature off by setting `cache = False`.\n    '''\n\n    with fits.open(row[\"uri\"], cache=cache) as hdulist:\n        # There are seven HDUs:\n        # 0 contains minimal metadata in the header and no data.\n        # 1 through 6 are: IMAGE, FLAGS, VARIANCE, ZODI, PSF, WCS-WAVE\n        header = hdulist[1].header\n\n        # Compute pixel coordinates corresponding to cutout position.\n        spatial_wcs = WCS(header)\n        x, y = spatial_wcs.world_to_pixel(SkyCoord(ra=ra, dec=dec, unit=\"deg\", frame=\"icrs\"))\n\n        # Compute wavelength at cutout position.\n        spectral_wcs = WCS(header, fobj=hdulist, key=\"W\")\n        spectral_wcs.sip = None\n        wavelength, bandpass = spectral_wcs.pixel_to_world(x, y)\n        row[\"central_wavelength\"] = wavelength.to(u.micrometer).value\n\n        # Collect the HDUs for this cutout and append the row's cutout_index to the EXTNAME.\n        hdus = []\n        for hdu in hdulist[1:]:  # skip the primary header\n            hdu.header[\"EXTNAME\"] = f\"{hdu.header['EXTNAME']}{row['cutout_index']}\"\n            hdus.append(hdu.copy())  # Copy so the data is available after the file is closed\n        row[\"hdus\"] = hdus","key":"csjkBRA7NB"},{"type":"output","id":"tle6JFek3sgoWeJWhoWdX","data":[],"key":"gXmpJU7EqB"}],"key":"sZzVaowC9D"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":172,"column":1},"end":{"line":172,"column":1}},"children":[{"type":"text","value":"7. Download the Cutouts","position":{"start":{"line":172,"column":1},"end":{"line":172,"column":1}},"key":"iTTUTC6YIW"}],"identifier":"id-7-download-the-cutouts","label":"7. Download the Cutouts","html_id":"id-7-download-the-cutouts","implicit":true,"key":"eWueUAOcOg"},{"type":"paragraph","position":{"start":{"line":174,"column":1},"end":{"line":178,"column":1}},"children":[{"type":"text","value":"This process can take a while.\nIf run in series, it can take about 5 minutes for 700 images on a typical laptop machine.\nHere, we therefore exploit two different methods.\nFirst we show the serial approach and next we show how to parallelize the methods.\nThe latter can be run on many CPUs and is therefore significantly faster.","position":{"start":{"line":174,"column":1},"end":{"line":174,"column":1}},"key":"FVUagObZSc"}],"key":"RTJcRb4gMH"},{"type":"heading","depth":3,"position":{"start":{"line":180,"column":1},"end":{"line":180,"column":1}},"children":[{"type":"text","value":"7.1 Serial Approach","position":{"start":{"line":180,"column":1},"end":{"line":180,"column":1}},"key":"P9luOFk3WH"}],"identifier":"id-7-1-serial-approach","label":"7.1 Serial Approach","html_id":"id-7-1-serial-approach","implicit":true,"key":"ahaLqn6ObD"},{"type":"paragraph","position":{"start":{"line":182,"column":1},"end":{"line":183,"column":1}},"children":[{"type":"text","value":"First, we implement the serial approach -- a simple ","position":{"start":{"line":182,"column":1},"end":{"line":182,"column":1}},"key":"GSz0lCZJEq"},{"type":"inlineCode","value":"for","position":{"start":{"line":182,"column":1},"end":{"line":182,"column":1}},"key":"CdCqFyveZt"},{"type":"text","value":" loop.\nBefore that, we turn the results into an astropy table and add some place holders that will be filled in by the ","position":{"start":{"line":182,"column":1},"end":{"line":182,"column":1}},"key":"UbKBwCs4c2"},{"type":"inlineCode","value":"process_cutout()","position":{"start":{"line":182,"column":1},"end":{"line":182,"column":1}},"key":"vxPQl6eJNh"},{"type":"text","value":" function.","position":{"start":{"line":182,"column":1},"end":{"line":182,"column":1}},"key":"sx5NMK3jQv"}],"key":"gbzwAcBTCa"},{"type":"admonition","kind":"warning","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Warning","key":"SGI2jzu6Fg"}],"key":"Sj261mGK3p"},{"type":"paragraph","position":{"start":{"line":186,"column":1},"end":{"line":187,"column":1}},"children":[{"type":"text","value":"Running the cell below may take a while for a large number of cutouts.\nApproximately 5-7 minutes for 700 images of cutout size 0.01 degree on a typical machine.","position":{"start":{"line":186,"column":1},"end":{"line":186,"column":1}},"key":"w7BWP9mghW"}],"key":"Iu5pjyCIse"}],"key":"Ymjoy6qGFv"},{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Tip","key":"wdpn5JnaIK"}],"key":"FeNc0stREP"},{"type":"paragraph","position":{"start":{"line":191,"column":1},"end":{"line":195,"column":1}},"children":[{"type":"text","value":"The astropy ","position":{"start":{"line":191,"column":1},"end":{"line":191,"column":1}},"key":"jSNCBRaEuh"},{"type":"inlineCode","value":"fits.open()","position":{"start":{"line":191,"column":1},"end":{"line":191,"column":1}},"key":"sHC3uDdSgf"},{"type":"text","value":" supports a caching argument.\nThis can be passed through in the ","position":{"start":{"line":191,"column":1},"end":{"line":191,"column":1}},"key":"BIhFfVpMwe"},{"type":"inlineCode","value":"process_cutout()","position":{"start":{"line":191,"column":1},"end":{"line":191,"column":1}},"key":"u6MSbHk905"},{"type":"text","value":" function.\nIf ","position":{"start":{"line":191,"column":1},"end":{"line":191,"column":1}},"key":"RzZsdUP7YP"},{"type":"inlineCode","value":"cache=True","position":{"start":{"line":191,"column":1},"end":{"line":191,"column":1}},"key":"mHGscIvkdE"},{"type":"text","value":" is set, the images are cached and the cutout creation is sped up next time the code is run (even if the Jupyter kernel is restarted!).\nThe downside is that the images are saved on the machine where this notebook is run (usually in ","position":{"start":{"line":191,"column":1},"end":{"line":191,"column":1}},"key":"RfAKP8mrmc"},{"type":"inlineCode","value":"~/.astropy/cache/","position":{"start":{"line":191,"column":1},"end":{"line":191,"column":1}},"key":"w6YYcb25WZ"},{"type":"text","value":").\nIf many cutouts are created, this can sum up to a large cached data volume, in which case ","position":{"start":{"line":191,"column":1},"end":{"line":191,"column":1}},"key":"W1QTSYPJRV"},{"type":"inlineCode","value":"cache=False","position":{"start":{"line":191,"column":1},"end":{"line":191,"column":1}},"key":"ZZvHotSxWo"},{"type":"text","value":" is preferred.","position":{"start":{"line":191,"column":1},"end":{"line":191,"column":1}},"key":"VpTn9nZKBA"}],"key":"QbuiSOdXMw"},{"type":"paragraph","position":{"start":{"line":197,"column":1},"end":{"line":197,"column":1}},"children":[{"type":"text","value":"To learn more about the cache please read the ","position":{"start":{"line":197,"column":1},"end":{"line":197,"column":1}},"key":"w1bnczmSNB"},{"type":"link","url":"https://docs.astropy.org/en/stable/utils/data.html#cache-management","position":{"start":{"line":197,"column":1},"end":{"line":197,"column":1}},"children":[{"type":"text","value":"astropy cache management documentation","position":{"start":{"line":197,"column":1},"end":{"line":197,"column":1}},"key":"o0zVXY8GKH"}],"urlSource":"https://docs.astropy.org/en/stable/utils/data.html#cache-management","key":"Yn3IpuCjLb"},{"type":"text","value":".","position":{"start":{"line":197,"column":1},"end":{"line":197,"column":1}},"key":"gTdp1DMQSS"}],"key":"IsQhkXBSvq"}],"key":"mkIVaGi8bm"}],"key":"vLqvkoJrGJ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"results_table_serial = results.to_table()\nresults_table_serial[\"cutout_index\"] = range(1, len(results_table_serial) + 1)\nresults_table_serial[\"central_wavelength\"] = np.full(len(results_table_serial), np.nan)\nresults_table_serial[\"hdus\"] = np.full(len(results_table_serial), None)\n\nt1 = time.time()\nfor row in results_table_serial:\n    process_cutout(row, ra, dec, cache=False)\nprint(\"Time to create cutouts in serial mode: {:2.2f} minutes.\".format((time.time() - t1) / 60))","key":"XZ3NxLmDCJ"},{"type":"output","id":"GEJcyMk3Itlrp_2oYcCnf","data":[{"output_type":"stream","name":"stdout","text":"Time to create cutouts in serial mode: 0.59 minutes.\n"}],"key":"TBjc5bDsxj"}],"key":"i0fp5o4pqE"},{"type":"block","children":[{"type":"heading","depth":3,"position":{"start":{"line":212,"column":1},"end":{"line":212,"column":1}},"children":[{"type":"text","value":"7.2 Parallel Approach","position":{"start":{"line":212,"column":1},"end":{"line":212,"column":1}},"key":"mq2Gks2eTc"}],"identifier":"id-7-2-parallel-approach","label":"7.2 Parallel Approach","html_id":"id-7-2-parallel-approach","implicit":true,"key":"E0QR62BcwE"},{"type":"paragraph","position":{"start":{"line":214,"column":1},"end":{"line":216,"column":1}},"children":[{"type":"text","value":"Next, we implement parallel processing, which will make the cutout creation faster.\nThe maximal number of workers can be limited by setting the ","position":{"start":{"line":214,"column":1},"end":{"line":214,"column":1}},"key":"RBfLEz4No2"},{"type":"inlineCode","value":"max_workers","position":{"start":{"line":214,"column":1},"end":{"line":214,"column":1}},"key":"h1EaCmvhkQ"},{"type":"text","value":" argument.\nThe choice of this value depends on the number of cores but also on the number of parallel calls that can be digested by the IRSA server.","position":{"start":{"line":214,"column":1},"end":{"line":214,"column":1}},"key":"nS2ucgYmXW"}],"key":"iuCJgzzouP"},{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Tip","key":"raKQOn8bUm"}],"key":"W4HWJpFv3E"},{"type":"paragraph","position":{"start":{"line":219,"column":1},"end":{"line":219,"column":1}},"children":[{"type":"text","value":"A good value for the maximum number of workers is between 7 and 12 for a machine with 8 cores.","position":{"start":{"line":219,"column":1},"end":{"line":219,"column":1}},"key":"vCtPpSCFtn"}],"key":"tt1tXcBukI"}],"key":"MwtsWVhoLS"},{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Tip","key":"yIYQcBhrKB"}],"key":"Nmwhzwyqq8"},{"type":"paragraph","position":{"start":{"line":223,"column":1},"end":{"line":227,"column":1}},"children":[{"type":"text","value":"The astropy ","position":{"start":{"line":223,"column":1},"end":{"line":223,"column":1}},"key":"yBtKHyZhSX"},{"type":"inlineCode","value":"fits.open()","position":{"start":{"line":223,"column":1},"end":{"line":223,"column":1}},"key":"xZvLS0SlTZ"},{"type":"text","value":" supports a caching argument.\nThis can be passed through in the ","position":{"start":{"line":223,"column":1},"end":{"line":223,"column":1}},"key":"TAYTLMer9E"},{"type":"inlineCode","value":"process_cutout()","position":{"start":{"line":223,"column":1},"end":{"line":223,"column":1}},"key":"gVGiiwrAwd"},{"type":"text","value":" function.\nIf ","position":{"start":{"line":223,"column":1},"end":{"line":223,"column":1}},"key":"MkQtVjIAKJ"},{"type":"inlineCode","value":"cache=True","position":{"start":{"line":223,"column":1},"end":{"line":223,"column":1}},"key":"xex4jiwHri"},{"type":"text","value":" is set, the images are cached and the cutout creation is sped up next time the code is run (even if the Jupyter kernel is restarted!).\nThe downside is that the images are saved on the machine where this notebook is run (usually in ","position":{"start":{"line":223,"column":1},"end":{"line":223,"column":1}},"key":"DURguN17EL"},{"type":"inlineCode","value":"~/.astropy/cache/","position":{"start":{"line":223,"column":1},"end":{"line":223,"column":1}},"key":"DJ43ySB32Z"},{"type":"text","value":").\nIf many cutouts are created, this can sum up to a large cached data volume, in which case ","position":{"start":{"line":223,"column":1},"end":{"line":223,"column":1}},"key":"fF58qLlToY"},{"type":"inlineCode","value":"cache=False","position":{"start":{"line":223,"column":1},"end":{"line":223,"column":1}},"key":"c8lRxvtcJ3"},{"type":"text","value":" is preferred.","position":{"start":{"line":223,"column":1},"end":{"line":223,"column":1}},"key":"n5P19t7BuV"}],"key":"p4o6VwavOD"},{"type":"paragraph","position":{"start":{"line":229,"column":1},"end":{"line":229,"column":1}},"children":[{"type":"text","value":"To learn more about the cache please read the ","position":{"start":{"line":229,"column":1},"end":{"line":229,"column":1}},"key":"K8DzWcUoTB"},{"type":"link","url":"https://docs.astropy.org/en/stable/utils/data.html#cache-management","position":{"start":{"line":229,"column":1},"end":{"line":229,"column":1}},"children":[{"type":"text","value":"astropy cache management documentation","position":{"start":{"line":229,"column":1},"end":{"line":229,"column":1}},"key":"DCebPyiwn5"}],"urlSource":"https://docs.astropy.org/en/stable/utils/data.html#cache-management","key":"HUDALT6ux0"},{"type":"text","value":".","position":{"start":{"line":229,"column":1},"end":{"line":229,"column":1}},"key":"P5BC2bIYDx"}],"key":"X6NQvXPWH2"}],"key":"bmoQ3qQ9JU"},{"type":"paragraph","position":{"start":{"line":232,"column":1},"end":{"line":232,"column":1}},"children":[{"type":"text","value":"Again, before running the cutout processing we define some place holders.","position":{"start":{"line":232,"column":1},"end":{"line":232,"column":1}},"key":"J2pDg9EdDB"}],"key":"iGh7k45gbs"}],"key":"slOU66gPHs"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"results_table_parallel = results.to_table()\nresults_table_parallel[\"cutout_index\"] = range(1, len(results_table_parallel) + 1)\nresults_table_parallel[\"central_wavelength\"] = np.full(len(results_table_parallel), np.nan)\nresults_table_parallel[\"hdus\"] = np.full(len(results_table_parallel), None)\n\nt1 = time.time()\nwith concurrent.futures.ThreadPoolExecutor(max_workers=10) as executor:\n    futures = [executor.submit(process_cutout, row, ra, dec, False) for row in results_table_parallel]\n    concurrent.futures.wait(futures)\nprint(\"Time to create cutouts in parallel mode: {:2.2f} minutes.\".format((time.time() - t1) / 60))","key":"FrOqGXGdLs"},{"type":"output","id":"bO9vvg3hSKK4C5oAjdJC3","data":[{"output_type":"stream","name":"stdout","text":"Time to create cutouts in parallel mode: 0.14 minutes.\n"}],"key":"iMuGegcCAK"}],"key":"xpbX4cgYNu"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":247,"column":1},"end":{"line":247,"column":1}},"children":[{"type":"text","value":"8. Create a summary table HDU with renamed columns","position":{"start":{"line":247,"column":1},"end":{"line":247,"column":1}},"key":"GxApzHVZQu"}],"identifier":"id-8-create-a-summary-table-hdu-with-renamed-columns","label":"8. Create a summary table HDU with renamed columns","html_id":"id-8-create-a-summary-table-hdu-with-renamed-columns","implicit":true,"key":"vr8Hm3aprS"},{"type":"paragraph","position":{"start":{"line":249,"column":1},"end":{"line":250,"column":1}},"children":[{"type":"text","value":"In the following, we continue to use the output of the parallel mode.\nThe following cell does the following:","position":{"start":{"line":249,"column":1},"end":{"line":249,"column":1}},"key":"FWqOBWrGmW"}],"key":"WJiD7ueYuh"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":252,"column":1},"end":{"line":254,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":252,"column":1},"end":{"line":252,"column":1}},"children":[{"type":"text","value":"Create a summary FITS table.","position":{"start":{"line":252,"column":1},"end":{"line":252,"column":1}},"key":"JrhSaA9od3"}],"key":"t7P4b0lwcF"},{"type":"listItem","spread":true,"position":{"start":{"line":253,"column":1},"end":{"line":254,"column":1}},"children":[{"type":"text","value":"Create the final FITS HDU including the summary table.","position":{"start":{"line":253,"column":1},"end":{"line":253,"column":1}},"key":"fpuSRFnVqC"}],"key":"UJ38BYDHbZ"}],"key":"c72hX5NDb6"}],"key":"VMIboaHp3k"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Create a summary table HDU with renamed columns\ncols = fits.ColDefs([\n    fits.Column(name=\"cutout_index\", format=\"J\", array=results_table_parallel[\"cutout_index\"], unit=\"\"),\n    fits.Column(name=\"observation_date\", format=\"D\", array=results_table_parallel[\"time_bounds_lower\"], unit=\"d\"),\n    fits.Column(name=\"central_wavelength\", format=\"D\", array=results_table_parallel[\"central_wavelength\"], unit=\"um\"),\n    fits.Column(name=\"access_url\", format=\"A200\", array=results_table_parallel[\"uri\"], unit=\"\"),\n])\ntable_hdu = fits.BinTableHDU.from_columns(cols)\ntable_hdu.header[\"EXTNAME\"] = \"CUTOUT_INFO\"","key":"seyDGhEOaJ"},{"type":"output","id":"dkq0_7SlXspNhPmIIURyv","data":[],"key":"we6IG50qK6"}],"key":"XAr3cG7kiI"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":267,"column":1},"end":{"line":267,"column":1}},"children":[{"type":"text","value":"9. Create the final MEF","position":{"start":{"line":267,"column":1},"end":{"line":267,"column":1}},"key":"QcOOWVB9q3"}],"identifier":"id-9-create-the-final-mef","label":"9. Create the final MEF","html_id":"id-9-create-the-final-mef","implicit":true,"key":"NnylruXDOV"},{"type":"paragraph","position":{"start":{"line":269,"column":1},"end":{"line":269,"column":1}},"children":[{"type":"text","value":"Now, we create a primary HDU and combine it with the summary table HDU and the cutout image and wavelength HDUs to a final HDU list.","position":{"start":{"line":269,"column":1},"end":{"line":269,"column":1}},"key":"VeTBlu32vK"}],"key":"KlpOeP1tqO"}],"key":"Tw9e71BhV5"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"primary_hdu = fits.PrimaryHDU()\nhdulist_list = [primary_hdu, table_hdu]\nhdulist_list.extend(hdu for fits_hdulist in results_table_parallel[\"hdus\"] for hdu in fits_hdulist)\ncombined_hdulist = fits.HDUList(hdulist_list)","key":"Jd3UA9irir"},{"type":"output","id":"Zc-PeOmPcxmJBqsjdBjzs","data":[],"key":"uS2bZqa3Ef"}],"key":"OoTJoIL2VA"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":278,"column":1},"end":{"line":278,"column":1}},"children":[{"type":"text","value":"10. Write the final MEF","position":{"start":{"line":278,"column":1},"end":{"line":278,"column":1}},"key":"rEg8b0NtaB"}],"identifier":"id-10-write-the-final-mef","label":"10. Write the final MEF","html_id":"id-10-write-the-final-mef","implicit":true,"key":"Mhsv6J1BCA"},{"type":"paragraph","position":{"start":{"line":280,"column":1},"end":{"line":280,"column":1}},"children":[{"type":"text","value":"Finally, we save the full HDU list to a multi-extension FITS file to disk.","position":{"start":{"line":280,"column":1},"end":{"line":280,"column":1}},"key":"Qch62ZVvGs"}],"key":"Ud76oLQBII"}],"key":"yx7vC1K3os"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Write the final MEF\ncombined_hdulist.writeto(output_filename, overwrite=True)","key":"jeag7PtKxk"},{"type":"output","id":"RsVf-pqGtm2sodjzub-Fr","data":[],"key":"Zfzn3DMS1b"}],"key":"XwrWWSkNn3"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":287,"column":1},"end":{"line":287,"column":1}},"children":[{"type":"text","value":"11. Test and visualize the final result","position":{"start":{"line":287,"column":1},"end":{"line":287,"column":1}},"key":"CIjM77I27X"}],"identifier":"id-11-test-and-visualize-the-final-result","label":"11. Test and visualize the final result","html_id":"id-11-test-and-visualize-the-final-result","implicit":true,"key":"R6QcJkCn58"},{"type":"paragraph","position":{"start":{"line":289,"column":1},"end":{"line":289,"column":1}},"children":[{"type":"text","value":"We can now open the new MEF FITS file that we have created above.","position":{"start":{"line":289,"column":1},"end":{"line":289,"column":1}},"key":"Vt3uIxOhSP"}],"key":"CRYT1NPu0b"},{"type":"paragraph","position":{"start":{"line":291,"column":1},"end":{"line":291,"column":1}},"children":[{"type":"text","value":"Loading the summary table (including wavelength information of each cutout) is straight forward:","position":{"start":{"line":291,"column":1},"end":{"line":291,"column":1}},"key":"MjcxPDOhGG"}],"key":"gSZb2TcsWK"}],"key":"bgjlxTRZv7"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"summary_table = Table.read(output_filename , hdu=1)","key":"IuDy7r4YgS"},{"type":"output","id":"tQ--Nh5irjLixbVAV1zkC","data":[],"key":"F7cVvd6fSZ"}],"key":"UJeD6uy0TX"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":297,"column":1},"end":{"line":297,"column":1}},"children":[{"type":"text","value":"Let’s also extract the first 10 images (or all of the extracted cutouts if less than 10).","position":{"start":{"line":297,"column":1},"end":{"line":297,"column":1}},"key":"NJCWehLIno"}],"key":"KCr3MWFhls"}],"key":"wu1oMG80S4"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"nbr_images = np.nanmin([10, len(summary_table)])\nimgs = []\nwith fits.open(output_filename) as hdul:\n    for ii in range(nbr_images):\n        extname = \"IMAGE{}\".format(summary_table[\"cutout_index\"][ii])\n        imgs.append(hdul[extname].data)","key":"Z1x4FLaEro"},{"type":"output","id":"XqvnzTdSANMi43TQ0o3B_","data":[],"key":"CLk2WmEl7r"}],"key":"gPivziWM9f"},{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":308,"column":1},"end":{"line":308,"column":1}},"children":[{"type":"text","value":"Plot the images with the wavelength corresponding to their central pixel.","position":{"start":{"line":308,"column":1},"end":{"line":308,"column":1}},"key":"Um2fSdKTfi"}],"key":"zt41Ku67UQ"}],"key":"r1pWUsrKGy"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(15, 5))\naxs = [fig.add_subplot(2, 5, ii + 1) for ii in range(10)]\n\nfor ii, img in enumerate(imgs):\n    axs[ii].imshow(imgs[ii], norm=\"log\", origin=\"lower\")\n    axs[ii].text(0.05, 0.05, r\"$\\lambda_{\\rm center} = %2.4g \\,{\\rm \\mu m}$\" % summary_table[\"central_wavelength\"][ii],\n                 va=\"bottom\", ha=\"left\", color=\"white\", transform=axs[ii].transAxes)\n\nplt.show()","key":"GE6D8M0THd"},{"type":"output","id":"awcjBoVOtLc-hD9Bjbtuu","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1500x500 with 10 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"7a7463cc0e082aeec3cd0bb26c61fdb2","path":"/irsa-tutorials/build/7a7463cc0e082aeec3cd0bb26c61fdb2.png"}}}],"key":"HFvctPlcWT"}],"key":"KwUbC7lKi9"},{"type":"block","children":[{"type":"heading","depth":2,"position":{"start":{"line":322,"column":1},"end":{"line":322,"column":1}},"children":[{"type":"text","value":"Acknowledgements","position":{"start":{"line":322,"column":1},"end":{"line":322,"column":1}},"key":"G7UeY30a8a"}],"identifier":"acknowledgements","label":"Acknowledgements","html_id":"acknowledgements","implicit":true,"key":"iu8Seu4F9V"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":324,"column":1},"end":{"line":325,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":324,"column":1},"end":{"line":325,"column":1}},"children":[{"type":"link","url":"https://irsa.ipac.caltech.edu/","position":{"start":{"line":324,"column":1},"end":{"line":324,"column":1}},"children":[{"type":"text","value":"Caltech/IPAC-IRSA","position":{"start":{"line":324,"column":1},"end":{"line":324,"column":1}},"key":"YyDCaSQWeq"}],"urlSource":"https://irsa.ipac.caltech.edu/","key":"j0uOCXG7JG"}],"key":"ff4mjYvCk1"}],"key":"uGUBuTFHeT"},{"type":"heading","depth":2,"position":{"start":{"line":326,"column":1},"end":{"line":326,"column":1}},"children":[{"type":"text","value":"About this notebook","position":{"start":{"line":326,"column":1},"end":{"line":326,"column":1}},"key":"eL2icMVWrd"}],"identifier":"about-this-notebook","label":"About this notebook","html_id":"about-this-notebook","implicit":true,"key":"nKeadMesgj"},{"type":"paragraph","position":{"start":{"line":328,"column":1},"end":{"line":328,"column":1}},"children":[{"type":"strong","position":{"start":{"line":328,"column":1},"end":{"line":328,"column":1}},"children":[{"type":"text","value":"Authors:","position":{"start":{"line":328,"column":1},"end":{"line":328,"column":1}},"key":"NXdUF88YHR"}],"key":"fP4KpiP1xj"},{"type":"text","value":" IRSA Data Science Team, including Vandana Desai, Andreas Faisst, Troy Raen, Brigitta Sipőcz, Jessica Krick, Shoubaneh Hemmati","position":{"start":{"line":328,"column":1},"end":{"line":328,"column":1}},"key":"sngMB3G5fc"}],"key":"PSsENETVIa"},{"type":"paragraph","position":{"start":{"line":330,"column":1},"end":{"line":330,"column":1}},"children":[{"type":"strong","position":{"start":{"line":330,"column":1},"end":{"line":330,"column":1}},"children":[{"type":"text","value":"Updated:","position":{"start":{"line":330,"column":1},"end":{"line":330,"column":1}},"key":"rKssTua7or"}],"key":"mHDsQHs7DK"},{"type":"text","value":" 2025-09-30","position":{"start":{"line":330,"column":1},"end":{"line":330,"column":1}},"key":"OPww2PoqVt"}],"key":"vcObU7bSWU"},{"type":"paragraph","position":{"start":{"line":332,"column":1},"end":{"line":332,"column":1}},"children":[{"type":"strong","position":{"start":{"line":332,"column":1},"end":{"line":332,"column":1}},"children":[{"type":"text","value":"Contact:","position":{"start":{"line":332,"column":1},"end":{"line":332,"column":1}},"key":"OC0bTQrFS5"}],"key":"NfYYgr11P8"},{"type":"text","value":" ","position":{"start":{"line":332,"column":1},"end":{"line":332,"column":1}},"key":"rqLaTELVk8"},{"type":"link","url":"https://irsa.ipac.caltech.edu/docs/help_desk.html","position":{"start":{"line":332,"column":1},"end":{"line":332,"column":1}},"children":[{"type":"text","value":"IRSA Helpdesk","position":{"start":{"line":332,"column":1},"end":{"line":332,"column":1}},"key":"qoaIVdRDHO"}],"urlSource":"https://irsa.ipac.caltech.edu/docs/help_desk.html","key":"yYBcM7FksV"},{"type":"text","value":" with questions or problems.","position":{"start":{"line":332,"column":1},"end":{"line":332,"column":1}},"key":"JVNBgHujCl"}],"key":"fyXdJmR5Kc"},{"type":"paragraph","position":{"start":{"line":334,"column":1},"end":{"line":334,"column":1}},"children":[{"type":"strong","position":{"start":{"line":334,"column":1},"end":{"line":334,"column":1}},"children":[{"type":"text","value":"Runtime:","position":{"start":{"line":334,"column":1},"end":{"line":334,"column":1}},"key":"mgsjGtBFMb"}],"key":"vq4w5xru2F"},{"type":"text","value":" As of the date above, this notebook takes about 3 minutes to run to completion on a machine with 8GB RAM and 4 CPU.","position":{"start":{"line":334,"column":1},"end":{"line":334,"column":1}},"key":"u4RBFS9nNX"}],"key":"dd0gHgheNF"}],"key":"G5hxkSPFax"}],"key":"z85plM4bsy"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Introduction to SPHEREx Spectral Images","url":"/spherex-intro","group":"SPHEREx"},"next":{"title":"Understanding and Extracting the PSF Extension in a SPHEREx Cutout","url":"/spherex-psf","group":"SPHEREx"}}},"domain":"http://localhost:3000"}